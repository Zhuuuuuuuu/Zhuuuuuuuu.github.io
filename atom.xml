<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>朱酱酱的学习博客</title>
  <icon>https://www.gravatar.com/avatar/336d255f627c733c7a50883547bcec06</icon>
  <subtitle>From Zero to Hero</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhuuu.work/"/>
  <updated>2020-02-13T07:01:37.636Z</updated>
  <id>http://zhuuu.work/</id>
  
  <author>
    <name>Zhuuu</name>
    <email>353446503@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MyBatis-ResultMap</title>
    <link href="http://zhuuu.work/2020/02/13/Mybatis/MyBatis-ResultMap/"/>
    <id>http://zhuuu.work/2020/02/13/Mybatis/MyBatis-ResultMap/</id>
    <published>2020-02-13T03:26:48.000Z</published>
    <updated>2020-02-13T07:01:37.636Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-ResultMap"><a href="#MyBatis-ResultMap" class="headerlink" title="MyBatis ResultMap"></a>MyBatis ResultMap</h1><h2 id="ResultMap"><a href="#ResultMap" class="headerlink" title="ResultMap"></a>ResultMap</h2><p>实际：<strong>要解决的问题：属性名和字段名不一致</strong></p><p>环境：新建一个项目，将之前的项目拷贝过来</p><h3 id="查询为null问题"><a href="#查询为null问题" class="headerlink" title="查询为null问题"></a>查询为null问题</h3><ol><li><p>查看之前数据库的字段名</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200213112852.png" alt=""></p></li></ol><a id="more"></a><ol start="2"><li>java实体类的设计</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;  <span class="comment">//id</span></span><br><span class="line">    <span class="keyword">private</span> String name;   <span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> String password;   <span class="comment">//密码和数据库不一样！</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//构造</span></span><br><span class="line">    <span class="comment">//set/get</span></span><br><span class="line">    <span class="comment">//toString()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询用户</span></span><br><span class="line"><span class="function">User <span class="title">selectUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>mapper映射文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserById"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();  <span class="comment">//获取SqlSession连接</span></span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = mapper.selectUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果:</strong></p><p><code>User{id=1, name=&#39;zhuuu&#39;, password=&#39;null&#39;}</code></p><p><strong>查询出来的password为空，说明出现了问题</strong></p><p><strong>分析：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = $&#123;<span class="keyword">id</span>&#125;   </span><br><span class="line">可以看作</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span>,pwd <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = $&#123;<span class="keyword">id</span>&#125;</span><br></pre></td></tr></table></figure><p><strong>根本原因</strong></p><ul><li>mybatis会根据这些查询的列名(会将列名转化为小写,数据库不区分大小写) , 去对应的实体类中查找相应列名的set方法设值 , 由于找不到setPwd() , 所以password返回null ; 【自动映射】</li></ul><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#方案一:从数据库层面解决  为列名设置别名，别名和java实体类的属性名一致</span><br><span class="line">&lt;select id&#x3D;&quot;selectUserById&quot; resultType&#x3D;&quot;User&quot;&gt;</span><br><span class="line">    select id,name,pwd as password from user where id &#x3D; $&#123;&#125;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 方案二：使用结果集映射-&gt;ResultMap 【推荐】</span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"UserMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- id为主键 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- column是数据库表的列名 , property是对应实体类的属性名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"pwd"</span> <span class="attr">property</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserById"</span> <span class="attr">resultMap</span>=<span class="string">"UserMap"</span>&gt;</span></span><br><span class="line">    select id , name , pwd from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ResultMap性质"><a href="#ResultMap性质" class="headerlink" title="ResultMap性质"></a>ResultMap性质</h2><h3 id="自动映射"><a href="#自动映射" class="headerlink" title="自动映射"></a>自动映射</h3><ul><li><code>resultMap</code> 元素是 MyBatis 中最重要最强大的元素。它可以让你从 90% 的 JDBC <code>ResultSets</code>数据提取代码中解放出来。</li><li>实际上，在为一些比如连接的复杂语句编写映射代码的时候，一份 <code>resultMap</code> 能够代替实现同等功能的长达数千行的代码。</li><li>ResultMap 的设计思想是，对于简单的语句根本不需要配置显式的结果映射，而对于复杂一点的语句只需要描述它们的关系就行了。</li></ul><p><strong>你已经见过简单映射语句的示例了，但并没有显式指定 <code>resultMap</code>。比如：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserById"</span> <span class="attr">resultType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">    select id , name , pwd </span><br><span class="line">    from user </span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>上述语句只是简单地将所有的列映射到 <code>HashMap</code> 的键上，这由 <code>resultType</code> 属性指定。虽然在大部分情况下都够用，但是 HashMap 不是一个很好的模型。你的程序更可能会使用 JavaBean 或 POJO（Plain Old Java Objects，普通老式 Java 对象）作为模型。</p></li><li><p><code>ResultMap</code> 最优秀的地方在于，虽然你已经对它相当了解了，但是根本就不需要显式地用到他们。</p></li></ul><h3 id="手动映射"><a href="#手动映射" class="headerlink" title="手动映射"></a>手动映射</h3><ol><li>返回值类型为resultMap</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserById"</span> <span class="attr">resultMap</span>=<span class="string">"UserMap"</span>&gt;</span></span><br><span class="line">select id , name , pwd from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>编写resultMap，实现手动映射！</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"UserMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- id为主键 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- column是数据库表的列名 , property是对应实体类的属性名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"pwd"</span> <span class="attr">property</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>如果世界总是这么简单就好了。但是肯定不是的，数据库中，存在一对多，多对一的情况，我们之后会使用到一些高级的结果集映射，association，collection这些</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-ResultMap&quot;&gt;&lt;a href=&quot;#MyBatis-ResultMap&quot; class=&quot;headerlink&quot; title=&quot;MyBatis ResultMap&quot;&gt;&lt;/a&gt;MyBatis ResultMap&lt;/h1&gt;&lt;h2 id=&quot;ResultMap&quot;&gt;&lt;a href=&quot;#ResultMap&quot; class=&quot;headerlink&quot; title=&quot;ResultMap&quot;&gt;&lt;/a&gt;ResultMap&lt;/h2&gt;&lt;p&gt;实际：&lt;strong&gt;要解决的问题：属性名和字段名不一致&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;环境：新建一个项目，将之前的项目拷贝过来&lt;/p&gt;
&lt;h3 id=&quot;查询为null问题&quot;&gt;&lt;a href=&quot;#查询为null问题&quot; class=&quot;headerlink&quot; title=&quot;查询为null问题&quot;&gt;&lt;/a&gt;查询为null问题&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看之前数据库的字段名&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200213112852.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>Mysql数据管理</title>
    <link href="http://zhuuu.work/2020/02/12/Mysql/Mysql%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    <id>http://zhuuu.work/2020/02/12/Mysql/Mysql%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</id>
    <published>2020-02-12T03:48:45.000Z</published>
    <updated>2020-02-13T08:30:32.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql：MySQL数据管理"><a href="#Mysql：MySQL数据管理" class="headerlink" title="Mysql：MySQL数据管理"></a>Mysql：MySQL数据管理</h1><h2 id="外键管理（一般不用）"><a href="#外键管理（一般不用）" class="headerlink" title="外键管理（一般不用）"></a>外键管理（一般不用）</h2><h3 id="外键的概念"><a href="#外键的概念" class="headerlink" title="外键的概念"></a>外键的概念</h3><p>​    如果公共关键字在一个关系中是主关键字，那么这个公共关键字被称为另一个关系的外键。</p><p>​    由此可见，外键表示了两个关系之间的相关联系。以另一个关系的外键作为主关键字的表被称为主表，具有此外键的表被陈伟主表的从表。</p><p>​    在实际操作中，将一个表的值放入第二个表中来表示关联，所使用的值是第一个表的主键值(在必要时可包括复合主键值)。此时，第二个表中保存这些值的属性称为外键(<strong>foreign key</strong>)。</p><a id="more"></a><blockquote></blockquote><h3 id="外键的作用"><a href="#外键的作用" class="headerlink" title="外键的作用"></a>外键的作用</h3><p>​    保持数据的<strong>一致性，完整性</strong> ，主要目的是控制存储在外键表中的数据<strong>约束</strong>，使两张表形成关联，外键只能引用外表中的列的值或者使用空值 。</p><h3 id="创建外键"><a href="#创建外键" class="headerlink" title="创建外键"></a>创建外键</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方式一 : 创建子表同时创建外键</span></span><br><span class="line"><span class="comment">-- 年级表(id\年级名称) --主表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`grade`</span> (</span><br><span class="line">  <span class="string">`gradeid`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'年级ID'</span>,</span><br><span class="line">  <span class="string">`gradename`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'年级名称'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`gradeid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生信息表 从表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`student`</span> (</span><br><span class="line">  <span class="string">`studentno`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'学号'</span>,</span><br><span class="line">  <span class="string">`studentname`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'匿名'</span> <span class="keyword">COMMENT</span> <span class="string">'姓名'</span>,</span><br><span class="line">  <span class="string">`sex`</span> <span class="built_in">TINYINT</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line">  <span class="string">`gradeid`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'年级'</span>,</span><br><span class="line">  <span class="string">`phoneNum`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'手机'</span>,</span><br><span class="line">  <span class="string">`address`</span> <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'地址'</span>,</span><br><span class="line">  <span class="string">`borndate`</span> DATETIME <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'生日'</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱'</span>,</span><br><span class="line">  <span class="string">`idCard`</span> <span class="built_in">VARCHAR</span>(<span class="number">18</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'身份证号'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`studentno`</span>),</span><br><span class="line">   <span class="keyword">KEY</span> <span class="string">`FK_gradeid`</span>(<span class="string">`gradeid`</span>),</span><br><span class="line">   <span class="keyword">CONSTRAINT</span> <span class="string">`FK_gradeid`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`gradeid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`grade`</span>(<span class="string">`gradeid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方式二:创建完字表后，修改子表添加外键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> <span class="string">`FK_gradeid`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(<span class="string">`gradeid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`grade`</span>(<span class="string">`gradeid`</span>);</span><br></pre></td></tr></table></figure><h3 id="删除外键"><a href="#删除外键" class="headerlink" title="删除外键"></a>删除外键</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#删除外键</span><br><span class="line">ALTER TABLE student DROP FOREIGN KEY  FK_gradeid;</span><br><span class="line"># 发现执行完上面的,索引还在,所以还要删除索引</span><br><span class="line"># 注:这个索引是建立外键的时候默认生成的</span><br><span class="line">ALTER TABLE student DROP INDEX FK_gradeid;</span><br></pre></td></tr></table></figure><h2 id="DML语言（重要-）"><a href="#DML语言（重要-）" class="headerlink" title="DML语言（重要~）"></a>DML语言（重要~）</h2><p>数据库的意思：数据存储 数据管理</p><p><strong>DML语言：数据库操作语言</strong></p><ul><li><p>Insert</p></li><li><p>update</p></li><li><p>delete</p></li></ul><h3 id="添加-Insert"><a href="#添加-Insert" class="headerlink" title="添加 Insert"></a>添加 Insert</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#语法： </span><br><span class="line">#单条插入</span><br><span class="line">insert into 表名&#123;[字段名1，字段名2，字段名3]&#125; values(&#39;值1&#39;,&#39;值2&#39;,&#39;值3&#39;)</span><br><span class="line">#多条插入</span><br><span class="line">insert into 表名&#123;[字段名1，字段名2，字段名3]&#125; </span><br><span class="line">values(&#39;值1&#39;,&#39;值2&#39;,&#39;值3&#39;),(&#39;值1&#39;,&#39;值2&#39;,&#39;值3&#39;),values(&#39;值1&#39;,&#39;值2&#39;,&#39;值3&#39;).....</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>一般写插入语句，数据要和字段<strong>一一对应</strong></p></li><li><p>‘字段1,字段2…’该部分可省略 , 但添加的值务必与表结构,数据列,顺序相对应,且数量一致</p></li><li><p>可同时插入多条数据 , values 后用英文逗号隔开.</p></li></ul><h3 id="修改-update"><a href="#修改-update" class="headerlink" title="修改 update"></a>修改 update</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 语法 </span><br><span class="line">update &#96;表名&#96; set &#96;colnum_name&#96; &#x3D; value where [条件]</span><br><span class="line"></span><br><span class="line">#修改多个属性 逗号隔开</span><br><span class="line">update &#96;表名&#96; set &#96;colnum_name1&#96; &#x3D; value1,&#96;colnum_name2&#96; &#x3D; value2... where [条件]</span><br></pre></td></tr></table></figure><table><thead><tr><th>操作符</th><th>含义</th><th>范围</th><th>结果</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td>5=6</td><td>false</td></tr><tr><td>&lt;&gt; 或者 !=</td><td>不等于</td><td>5=6</td><td>true</td></tr><tr><td>&gt;</td><td>大于</td><td></td><td></td></tr><tr><td>&lt;</td><td>小于</td><td></td><td></td></tr><tr><td>&gt;=</td><td>大于等于</td><td></td><td></td></tr><tr><td>&lt;=</td><td>小与等于</td><td></td><td></td></tr><tr><td>Between …and…</td><td>闭合区间</td><td>[2,5]</td><td></td></tr><tr><td>AND</td><td>并列</td><td></td><td></td></tr><tr><td>OR</td><td>或者</td><td></td><td></td></tr></tbody></table><p>注意：</p><ul><li><p>column_name 为要更改的数据列</p></li><li><p>value 为修改后的数据 , 可以为变量 , 具体指 , 表达式或者嵌套的SELECT结果</p></li><li><p>condition 为筛选条件 , 如不指定则修改该表的所有列数据</p></li></ul><h3 id="删除-Delete"><a href="#删除-Delete" class="headerlink" title="删除 Delete"></a>删除 Delete</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 语法</span><br><span class="line"># 删除指定数据</span><br><span class="line">DELETE From &#96;表名&#96; where 条件</span><br><span class="line"></span><br><span class="line"># TRUNCATE：完全清空一个数据库表，表的结构和索引约束不会变</span><br><span class="line">TRUNCATE TABLE &#96;表名&#96;</span><br></pre></td></tr></table></figure><h3 id="delete-和-Truncate-区别"><a href="#delete-和-Truncate-区别" class="headerlink" title="delete 和 Truncate 区别"></a>delete 和 Truncate 区别</h3><p>相同 : 都能删除数据 , 不删除表结构 , 但TRUNCATE速度更快</p><p>不同点：</p><ul><li>truncate :  重新设置自增列，计数器会归零</li><li>使用TRUNCATE TABLE不会对事务有影响</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mysql：MySQL数据管理&quot;&gt;&lt;a href=&quot;#Mysql：MySQL数据管理&quot; class=&quot;headerlink&quot; title=&quot;Mysql：MySQL数据管理&quot;&gt;&lt;/a&gt;Mysql：MySQL数据管理&lt;/h1&gt;&lt;h2 id=&quot;外键管理（一般不用）&quot;&gt;&lt;a href=&quot;#外键管理（一般不用）&quot; class=&quot;headerlink&quot; title=&quot;外键管理（一般不用）&quot;&gt;&lt;/a&gt;外键管理（一般不用）&lt;/h2&gt;&lt;h3 id=&quot;外键的概念&quot;&gt;&lt;a href=&quot;#外键的概念&quot; class=&quot;headerlink&quot; title=&quot;外键的概念&quot;&gt;&lt;/a&gt;外键的概念&lt;/h3&gt;&lt;p&gt;​    如果公共关键字在一个关系中是主关键字，那么这个公共关键字被称为另一个关系的外键。&lt;/p&gt;
&lt;p&gt;​    由此可见，外键表示了两个关系之间的相关联系。以另一个关系的外键作为主关键字的表被称为主表，具有此外键的表被陈伟主表的从表。&lt;/p&gt;
&lt;p&gt;​    在实际操作中，将一个表的值放入第二个表中来表示关联，所使用的值是第一个表的主键值(在必要时可包括复合主键值)。此时，第二个表中保存这些值的属性称为外键(&lt;strong&gt;foreign key&lt;/strong&gt;)。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Mysql" scheme="http://zhuuu.work/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 操作数据库</title>
    <link href="http://zhuuu.work/2020/02/11/Mysql/Mysql%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://zhuuu.work/2020/02/11/Mysql/Mysql%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2020-02-11T08:02:27.000Z</published>
    <updated>2020-02-12T03:46:13.130Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h1><h2 id="结构化语言分类"><a href="#结构化语言分类" class="headerlink" title="结构化语言分类"></a>结构化语言分类</h2><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200210162433.png" alt=""></p><p>操作数据库&gt;操作表&gt;操作表中的字段</p><p><strong>几个基本的数据库操作命令</strong> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">update user set password&#x3D;password(&#39;123456&#39;)where user&#x3D;&#39;root&#39;; 修改密码</span><br><span class="line">flush privileges;  刷新数据库</span><br><span class="line">show databases; 显示所有数据库</span><br><span class="line">use dbname； 打开某个数据库</span><br><span class="line">show tables; 显示数据库mysql中所有的表</span><br><span class="line">describe user; 显示表mysql数据库中user表的列信息</span><br><span class="line">create database name; 创建数据库</span><br><span class="line">use databasename; 选择数据库</span><br><span class="line"></span><br><span class="line">exit; 退出Mysql</span><br><span class="line">? 命令关键词 : 寻求帮助</span><br><span class="line"># 表示注释</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="DDL语言"><a href="#DDL语言" class="headerlink" title="DDL语言"></a>DDL语言</h2><h3 id="操作数据库-1"><a href="#操作数据库-1" class="headerlink" title="操作数据库"></a>操作数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建数据库 :  create database [if not exists] 数据库名; </span><br><span class="line"></span><br><span class="line">删除数据库 :  drop database [if exists] 数据库名; </span><br><span class="line"></span><br><span class="line">查看数据库 :  show databases; </span><br><span class="line"></span><br><span class="line">使用数据库 :  use 数据库名;</span><br></pre></td></tr></table></figure><h3 id="数据库的列类型"><a href="#数据库的列类型" class="headerlink" title="数据库的列类型"></a>数据库的列类型</h3><h4 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">整数</span><br><span class="line">tinyint   --十分小的数据        1个字节</span><br><span class="line">smallint  --较小的数据       2个字节</span><br><span class="line">mediumint --中等大小的数据       3个字节</span><br><span class="line">int       --标准的整数          4个字节</span><br><span class="line">bigint    --较大的数据       8个字节</span><br><span class="line"></span><br><span class="line">小数</span><br><span class="line">float     --浮点数              4个字节</span><br><span class="line">double    --浮点数           8个字节</span><br><span class="line">decimal   --字符串形式的浮点数    金融计算使用</span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">char      --字符串       固定大小0-255</span><br><span class="line">varchar   --可变字符串    0-65535</span><br><span class="line">tinytext  --微型文本      2^8-1</span><br><span class="line">text      --文本串       2^16-1</span><br></pre></td></tr></table></figure><h4 id="时间日期"><a href="#时间日期" class="headerlink" title="时间日期"></a>时间日期</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">date       YYYY-MM-DD        日期格式</span><br><span class="line">time       HH:MM:SS             时间格式</span><br><span class="line">datetime   YYYY-MM-DD HH:MM:SS  最常用的</span><br><span class="line">timestamp  时间戳  格林威治时间</span><br><span class="line">year       年份表示</span><br></pre></td></tr></table></figure><h4 id="null"><a href="#null" class="headerlink" title="null"></a>null</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">没有值   表示未知的值</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;注意：不要使用null进行数值运算</span><br></pre></td></tr></table></figure><h3 id="数据库的字段属性-（重要！！！）"><a href="#数据库的字段属性-（重要！！！）" class="headerlink" title="数据库的字段属性 （重要！！！）"></a>数据库的字段属性 （重要！！！）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Unsigned       无符号的整数   声明了该列不能是负数</span><br><span class="line">zerofill       0填充的       </span><br><span class="line">auto_increment  自增         通常设置是主键 通常可以设置主键的起始值和步长</span><br><span class="line">null   默认设置</span><br><span class="line">not null   非空  如果使用，不填值的话会报错</span><br><span class="line">default    设置默认值如果不指定值，则会有默认的值</span><br></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 目标 : 创建一个school数据库</span><br><span class="line"># 创建学生表(列,字段)</span><br><span class="line"># 学号int 登录密码varchar(20) 姓名,性别varchar(2),出生日期(datatime),家庭住址,email</span><br><span class="line"># 创建表之前 , 一定要先选择数据库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS &#96;student&#96;</span><br><span class="line"></span><br><span class="line">CREATE TABLE IF NOT EXISTS &#96;student&#96;(</span><br><span class="line"> &#96;id&#96; INT(4) NOT NULL AUTO_INCREMENT COMMENT &#39;学号&#39;,</span><br><span class="line"> &#96;name&#96; VARCHAR(30) NOT NULL DEFAULT &#39;匿名&#39; COMMENT &#39;姓名&#39;,</span><br><span class="line"> &#96;pwd&#96; VARCHAR(20) NOT NULL DEFAULT &#39;123345&#39; COMMENT &#39;密码&#39;,</span><br><span class="line"> &#96;gender&#96; VARCHAR(2) NOT NULL DEFAULT &#39;女&#39; COMMENT &#39;性别&#39;,</span><br><span class="line"> &#96;birthday&#96; DATETIME DEFAULT NULL COMMENT &#39;生日&#39;,</span><br><span class="line"> &#96;address&#96; VARCHAR(100) DEFAULT NULL COMMENT &#39;地址&#39;,</span><br><span class="line"> &#96;email&#96; VARCHAR(50) DEFAULT NULL COMMENT &#39;邮箱&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;)</span><br><span class="line"> )ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8</span><br><span class="line"> </span><br><span class="line"> # 查看数据库的定义</span><br><span class="line">SHOW CREATE DATABASE school;</span><br><span class="line"># 查看数据表的定义</span><br><span class="line">SHOW CREATE TABLE student;</span><br><span class="line"># 显示表结构</span><br><span class="line">DESC student;</span><br><span class="line"># 设置严格检查模式(不能容错了)</span><br><span class="line">SET sql_mode&#x3D;&#39;STRICT_TRANS_TABLES&#39;;</span><br></pre></td></tr></table></figure><h3 id="修改删除表"><a href="#修改删除表" class="headerlink" title="修改删除表"></a>修改删除表</h3><h4 id="修改表（ALTER-TABLE）"><a href="#修改表（ALTER-TABLE）" class="headerlink" title="修改表（ALTER TABLE）"></a>修改表（ALTER TABLE）</h4><ul><li>修改表名：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 旧表名 <span class="keyword">RENAME</span> <span class="keyword">AS</span> 新表名</span><br></pre></td></tr></table></figure><ul><li>添加字段：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> 字段名 列属性[属性值]</span><br></pre></td></tr></table></figure><ul><li>修改字段:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span> 字段名 列属性[属性值]</span><br></pre></td></tr></table></figure><ul><li>删除字段:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> 字段名</span><br></pre></td></tr></table></figure><h4 id="删除表（Drop-TABLE）"><a href="#删除表（Drop-TABLE）" class="headerlink" title="删除表（Drop TABLE）"></a>删除表（Drop TABLE）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法：DROP TABLE [IF EXISTS] 表名</span></span><br><span class="line"><span class="comment">--IF EXISTS为可选 , 判断是否存在该数据表</span></span><br><span class="line"><span class="comment">--如删除不存在的数据表会抛出错误</span></span><br></pre></td></tr></table></figure><h2 id="关于数据引擎"><a href="#关于数据引擎" class="headerlink" title="关于数据引擎"></a>关于数据引擎</h2><p>MySQL的数据表的类型 : <strong>MyISAM</strong> , <strong>InnoDB</strong> , HEAP , BOB , CSV等…</p><p><strong>常见的 MyISAM 与 InnoDB 类型</strong></p><table><thead><tr><th align="left"></th><th align="left">MyISAM</th><th>InnoDB</th></tr></thead><tbody><tr><td align="left">事物支持</td><td align="left">不支持</td><td>支持</td></tr><tr><td align="left">数据行锁定</td><td align="left">不支持</td><td>支持</td></tr><tr><td align="left">外键约束</td><td align="left">不支持</td><td>支持</td></tr><tr><td align="left">全文索引</td><td align="left">支持</td><td>不支持</td></tr><tr><td align="left">表空间的大小</td><td align="left">较小</td><td>较大,约为MyISAM的两倍</td></tr></tbody></table><p>常规使用操作：</p><ol><li>MYISAM        节约空间，速度较快</li><li>INNODB       安全性高，支持事务的处理，多表多用户操作</li></ol><p><strong>Mysql引擎在物理空间的区别</strong></p><p>MySQL数据表以文件方式存放在磁盘中</p><ul><li><p>包括表文件 , 数据文件 , 以及数据库的选项文件</p></li><li><p>位置 : Mysql安装目录\data\下存放数据表 . 目录名对应数据库名 , 该目录下文件名对应数据表 .</p></li></ul><ul><li><strong>InnoDB</strong>类型数据表只有一个 *.frm文件 , 以及上一级目录的ibdata1文件</li><li><strong>MyISAM</strong>类型数据表对应三个文件 :<ul><li>* . frm  –   表结构定义文件</li><li>* . MYD –   数据文件(data)</li><li>* . MYI   –   索引文件(index)</li></ul></li></ul><h2 id="设置数据库表的字符集编码"><a href="#设置数据库表的字符集编码" class="headerlink" title="设置数据库表的字符集编码"></a>设置数据库表的字符集编码</h2><blockquote><p>charset = utf8</p></blockquote><p>可为数据库,数据表,数据列设定不同的字符集</p><p>设定方法 :</p><ul><li>创建时通过命令来设置 , 如 :CREATE TABLE 表名()CHARSET = utf8; </li><li>如无设定 , 则根据MySQL数据库配置文件<strong>my.ini</strong>中的参数设定</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;操作数据库&quot;&gt;&lt;a href=&quot;#操作数据库&quot; class=&quot;headerlink&quot; title=&quot;操作数据库&quot;&gt;&lt;/a&gt;操作数据库&lt;/h1&gt;&lt;h2 id=&quot;结构化语言分类&quot;&gt;&lt;a href=&quot;#结构化语言分类&quot; class=&quot;headerlink&quot; title=&quot;结构化语言分类&quot;&gt;&lt;/a&gt;结构化语言分类&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200210162433.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;操作数据库&amp;gt;操作表&amp;gt;操作表中的字段&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;几个基本的数据库操作命令&lt;/strong&gt; ：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;update user set password&amp;#x3D;password(&amp;#39;123456&amp;#39;)where user&amp;#x3D;&amp;#39;root&amp;#39;; 修改密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flush privileges;  刷新数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show databases; 显示所有数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use dbname； 打开某个数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show tables; 显示数据库mysql中所有的表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;describe user; 显示表mysql数据库中user表的列信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create database name; 创建数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use databasename; 选择数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exit; 退出Mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;? 命令关键词 : 寻求帮助&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 表示注释&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Mysql" scheme="http://zhuuu.work/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis CRUD操作</title>
    <link href="http://zhuuu.work/2020/02/11/Mybatis/MyBatis-CRUD%E6%93%8D%E4%BD%9C/"/>
    <id>http://zhuuu.work/2020/02/11/Mybatis/MyBatis-CRUD%E6%93%8D%E4%BD%9C/</id>
    <published>2020-02-11T03:00:35.000Z</published>
    <updated>2020-02-11T09:59:51.042Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-CRUD操作"><a href="#MyBatis-CRUD操作" class="headerlink" title="MyBatis CRUD操作"></a>MyBatis CRUD操作</h1><h2 id="关于namespace"><a href="#关于namespace" class="headerlink" title="关于namespace"></a>关于namespace</h2><p><strong>配置文件中namespace中的名称为对应Mapper接口或者Dao接口的完整包名,必须一致</strong></p><h2 id="查询-select"><a href="#查询-select" class="headerlink" title="查询 select"></a>查询 select</h2><p>id</p><ul><li>命名空间中唯一的标识符</li><li>接口中的<strong>方法名</strong>与映射文件中的SQL语句ID 一一对应</li></ul><p>resultType</p><ul><li>SQL语句返回值类型。【完整的类名或者别名】</li></ul><p>parameterType</p><ul><li>传入SQL语句的参数类型 。【Map】</li></ul><a id="more"></a><p><strong>需求：根据id查询用户</strong></p><ol><li>在UserMapper中添加对应方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询全部用户</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//根据id查询用户</span></span><br><span class="line">    <span class="function">User <span class="title">selectUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在UserMapper.xml中添加Select语句</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">"selectUserById"</span> resultType=<span class="string">"com.zhuuu.pojo.User"</span>&gt;</span><br><span class="line">  select * from user where id = #&#123;id&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>测试类中测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tsetSelectUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();  <span class="comment">//获取SqlSession连接</span></span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = mapper.selectUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路二：根据 密码 和 名字 查询用户</p><p><strong>使用map来查询或者插入</strong></p><ol><li>在接口方法中，参数直接传递Map；</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User selectUserByNP2(Map<span class="tag">&lt;<span class="name">String,Object</span>&gt;</span> map);</span><br></pre></td></tr></table></figure><ol start="2"><li>编写sql语句的时候，需要传递参数类型，参数类型为map</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUserByNP2"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"com.zhuuu.pojo.User"</span>&gt;</span></span><br><span class="line">select * from user where name = #&#123;username&#125; and pwd = #&#123;pwd&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在使用方法的时候，Map的 key 为 sql中取的值即可，没有顺序要求！</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"username"</span>,<span class="string">"小明"</span>);</span><br><span class="line">map.put(<span class="string">"pwd"</span>,<span class="string">"123456"</span>);</span><br><span class="line">User user = mapper.selectUserByNP2(map);</span><br></pre></td></tr></table></figure><p>总结：</p><p> 如果参数过多，我们可以考虑直接使用Map实现，如果参数比较少，直接传递参数即可</p><h2 id="插入-insert"><a href="#插入-insert" class="headerlink" title="插入 insert"></a>插入 insert</h2><p>一般使用insert标签进行插入操作，它的配置和select标签差不多！</p><ol><li>在UserMapper接口中添加对应的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加一个用户</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>在UserMapper.xml中添加insert语句</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"com.zhuuu.pojo.User"</span>&gt;</span></span><br><span class="line">     insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="number">5</span>,<span class="string">"王五"</span>,<span class="string">"zxcvbn"</span>);</span><br><span class="line">    <span class="keyword">int</span> i = mapper.addUser(user);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    session.commit(); <span class="comment">//提交事务,重点!不写的话不会提交到数据库</span></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意点：增、删、改操作需要提交事务！</strong></p><h2 id="改-update"><a href="#改-update" class="headerlink" title="改 update"></a>改 update</h2><p><strong>需求：修改用户的信息</strong></p><ol><li>同理，编写接口方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改一个用户</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写对应的配置文件SQL</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span> <span class="attr">parameterType</span>=<span class="string">"com.zhuuu.pojo.User"</span>&gt;</span></span><br><span class="line">    update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void testUpdateUser() &#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">    User user = mapper.selectUserById(1);</span><br><span class="line">    user.setPwd("asdfgh");</span><br><span class="line">    int i = mapper.updateUser(user);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    session.commit(); //提交事务,重点!不写的话不会提交到数据库</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除-delete"><a href="#删除-delete" class="headerlink" title="删除 delete"></a>删除 delete</h2><p><strong>需求：根据id删除一个用户</strong></p><ol><li>同理，编写接口方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id删除用户</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写对应的配置文件SQL</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">    delete from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="keyword">int</span> i = mapper.deleteUser(<span class="number">5</span>);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    session.commit(); <span class="comment">//提交事务,重点!不写的话不会提交到数据库</span></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>小结：</strong></p><ul><li>所有的增删改操作都需要提交事务！</li><li>接口所有的普通参数，尽量都写上@Param参数，尤其是多个参数时，必须写上！</li><li>有时候根据业务的需求，可以考虑使用map传递参数！</li><li>为了规范操作，在SQL的配置文件中，我们尽量将Parameter参数和resultType都写上！</li></ul><h2 id="补充：模糊查询"><a href="#补充：模糊查询" class="headerlink" title="补充：模糊查询"></a>补充：模糊查询</h2><p><strong>模糊查询like语句该怎么写?</strong></p><ol><li>添加java代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getLikeUser</span><span class="params">(String value)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>在xml中添加查询</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getLikeUser"</span> <span class="attr">resultType</span>=<span class="string">"com.zhuuu.pojo.User"</span>&gt;</span></span><br><span class="line">    select * from mybatis.user where name like #&#123;value&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getLikeUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    Mapper mapper = session.getMapper(Mapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    System.out.println(mapper.getLikeUser(<span class="string">"%李%"</span>));</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：在sql语句中拼接通配符，会引起sql注入</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-CRUD操作&quot;&gt;&lt;a href=&quot;#MyBatis-CRUD操作&quot; class=&quot;headerlink&quot; title=&quot;MyBatis CRUD操作&quot;&gt;&lt;/a&gt;MyBatis CRUD操作&lt;/h1&gt;&lt;h2 id=&quot;关于namespace&quot;&gt;&lt;a href=&quot;#关于namespace&quot; class=&quot;headerlink&quot; title=&quot;关于namespace&quot;&gt;&lt;/a&gt;关于namespace&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;配置文件中namespace中的名称为对应Mapper接口或者Dao接口的完整包名,必须一致&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;查询-select&quot;&gt;&lt;a href=&quot;#查询-select&quot; class=&quot;headerlink&quot; title=&quot;查询 select&quot;&gt;&lt;/a&gt;查询 select&lt;/h2&gt;&lt;p&gt;id&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;命名空间中唯一的标识符&lt;/li&gt;
&lt;li&gt;接口中的&lt;strong&gt;方法名&lt;/strong&gt;与映射文件中的SQL语句ID 一一对应&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;resultType&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL语句返回值类型。【完整的类名或者别名】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;parameterType&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传入SQL语句的参数类型 。【Map】&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 安装与配置</title>
    <link href="http://zhuuu.work/2020/02/10/Mysql/Mysql%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://zhuuu.work/2020/02/10/Mysql/Mysql%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</id>
    <published>2020-02-10T08:02:27.000Z</published>
    <updated>2020-02-11T10:00:07.479Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql-安装与配置"><a href="#Mysql-安装与配置" class="headerlink" title="Mysql 安装与配置"></a>Mysql 安装与配置</h1><h2 id="MySQL5-7免安装版配置详细教程"><a href="#MySQL5-7免安装版配置详细教程" class="headerlink" title="MySQL5.7免安装版配置详细教程"></a>MySQL5.7免安装版配置详细教程</h2><h3 id="1-软件下载"><a href="#1-软件下载" class="headerlink" title="1.软件下载"></a>1.软件下载</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mysql是一个比较流行且很好用的一款数据库软件，如下记录了我学习总结的mysql免安装版的配置经验，要安装的朋友可以当做参考哦</span><br></pre></td></tr></table></figure><p><a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip" target="_blank" rel="noopener">mysql下载地址</a></p><a id="more"></a><h3 id="2-操作步骤"><a href="#2-操作步骤" class="headerlink" title="2.操作步骤"></a>2.操作步骤</h3><p> 1.下载后得到zip压缩包.</p><p> 2.解压到自己想要安装到的目录</p><p> 3.添加环境变量</p><p> 4.编辑 my.ini 文件 ,注意替换路径位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 [mysqld]</span><br><span class="line">2 basedir&#x3D;D:\Program Files\mysql-5.7\</span><br><span class="line">3 datadir&#x3D;D:\Program Files\mysql-5.7\data\</span><br><span class="line">4 port&#x3D;3306</span><br><span class="line">5 skip-grant-tables</span><br></pre></td></tr></table></figure><ol start="5"><li><p>启动管理员模式下的CMD，并将路径切换至mysql下的bin目录，然后输入mysqld –install (安装mysql)</p></li><li><p>再输入 mysqld –initialize-insecure –user=mysql 初始化数据文件</p></li><li><p>然后再次启动mysql 然后用命令 mysql –u root –p 进入mysql管理界面（密码可为空）</p></li><li><p>进入界面后更改root密码</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user set authentication_string&#x3D;password(&#39;123456&#39;) where user&#x3D;&#39;root&#39; and Host &#x3D; &#39;localhost&#39;;</span><br></pre></td></tr></table></figure><ol start="9"><li><p>(最后输入flush privileges; 刷新权限)</p></li><li><p>修改 my.ini文件删除最后一句skip-grant-tables</p></li><li><p>重启mysql即可正常使用<br>net stop mysql<br>net start mysql</p></li><li><p>连接上测试出现以下结果就安装好了</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200210155952.png" alt=""></p></li></ol><h2 id="MySql介绍"><a href="#MySql介绍" class="headerlink" title="MySql介绍"></a>MySql介绍</h2><h3 id="1-什么是数据库"><a href="#1-什么是数据库" class="headerlink" title="1.什么是数据库?"></a>1.什么是数据库?</h3><p>数据库(<strong>DataBase</strong>,简称<strong>DB</strong>)</p><p><strong>概念</strong> : 长期存放在计算机内,有组织,可共享的大量数据的集合,是一个数据”仓库”</p><p><strong>作用</strong> : 保存,并能安全管理数据(如:增删改查等),减少冗余…</p><p> <strong>数据库总览 :</strong></p><ul><li><p>关系型数据库</p><p>(SQL)</p><ul><li>MySQL , Oracle , SQL Server , SQLite , DB2 , …</li><li>关系型数据库通过外键关联来建立表与表之间的关系</li></ul></li><li><p>非关系型数据库</p><p>(NOSQL)</p><ul><li>Redis , MongoDB , …</li><li>非关系型数据库通常指数据以对象的形式存储在数据库中，而对象之间的关系通过每个对象自身的属性来决定</li></ul></li></ul><h3 id="2-什么是DBMS"><a href="#2-什么是DBMS" class="headerlink" title="2.什么是DBMS?"></a>2.什么是DBMS?</h3><p>数据库管理系统 ( <strong>D</strong>ata<strong>B</strong>ase <strong>M</strong>anagement <strong>S</strong>ystem )</p><p>　　数据库管理软件 , 科学组织和存储数据 , 高效地获取和维护数据</p><h3 id="3-MySQL简介"><a href="#3-MySQL简介" class="headerlink" title="3.MySQL简介"></a>3.MySQL简介</h3><p><strong>概念 :</strong> 是现在<strong>流行</strong>的<strong>开源</strong>的,<strong>免费</strong>的 <strong>关系型</strong>数据库</p><p><strong>历史 :</strong> 由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。</p><p><strong>特点 :</strong> </p><ul><li>免费 , 开源数据库</li><li>小巧 , 功能齐全</li><li>使用便捷</li><li>可运行于Windows或Linux操作系统</li><li>可适用于中小型甚至大型网站应用</li></ul><p><strong>官网 :</strong> <strong><a href="https://www.mysql.com/" target="_blank" rel="noopener">https://www.mysql.com/</a></strong></p><h3 id="4-可视化工具SQLyog"><a href="#4-可视化工具SQLyog" class="headerlink" title="4.可视化工具SQLyog"></a>4.可视化工具SQLyog</h3><p>可手动操作,管理MySQL数据库的软件工具</p><p>特点 : 简洁 , 易用 , 图形化</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200210160104.png" alt=""></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200210160123.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mysql-安装与配置&quot;&gt;&lt;a href=&quot;#Mysql-安装与配置&quot; class=&quot;headerlink&quot; title=&quot;Mysql 安装与配置&quot;&gt;&lt;/a&gt;Mysql 安装与配置&lt;/h1&gt;&lt;h2 id=&quot;MySQL5-7免安装版配置详细教程&quot;&gt;&lt;a href=&quot;#MySQL5-7免安装版配置详细教程&quot; class=&quot;headerlink&quot; title=&quot;MySQL5.7免安装版配置详细教程&quot;&gt;&lt;/a&gt;MySQL5.7免安装版配置详细教程&lt;/h2&gt;&lt;h3 id=&quot;1-软件下载&quot;&gt;&lt;a href=&quot;#1-软件下载&quot; class=&quot;headerlink&quot; title=&quot;1.软件下载&quot;&gt;&lt;/a&gt;1.软件下载&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Mysql是一个比较流行且很好用的一款数据库软件，如下记录了我学习总结的mysql免安装版的配置经验，要安装的朋友可以当做参考哦&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mysql下载地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Mysql" scheme="http://zhuuu.work/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>My Batis介绍</title>
    <link href="http://zhuuu.work/2020/02/08/Mybatis/MyBatis%20IDEA/"/>
    <id>http://zhuuu.work/2020/02/08/Mybatis/MyBatis%20IDEA/</id>
    <published>2020-02-08T09:14:27.000Z</published>
    <updated>2020-02-11T09:59:39.808Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-IDEA"><a href="#MyBatis-IDEA" class="headerlink" title="MyBatis IDEA"></a>MyBatis IDEA</h1><h2 id="Mybatis简介"><a href="#Mybatis简介" class="headerlink" title="Mybatis简介"></a>Mybatis简介</h2><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208170945.png" alt=""></p><p>环境说明：</p><ul><li><p>jdk 8 +</p></li><li><p>MySQL 5.7.19</p></li><li><p>maven-3.6.0</p></li><li><p>IDEA</p></li></ul><p> 学习前需要掌握：</p><ul><li>JDBC</li><li>MySQL</li><li>Java 基础</li><li>Maven</li><li>Junit</li></ul><p><a href="https://mybatis.org/mybatis-3/" target="_blank" rel="noopener">MyBatis官方文档</a></p><p><a href="https://github.com/mybatis/mybatis-3" target="_blank" rel="noopener">Github官网</a></p><a id="more"></a><h3 id="什么是-MyBatis？"><a href="#什么是-MyBatis？" class="headerlink" title="什么是 MyBatis？"></a>什么是 MyBatis？</h3><ol><li>MyBatis 是一款优秀的<strong>持久层框架</strong>，它支持定制化 SQL、存储过程以及高级映射。</li><li>MyBatis 避免了几乎所有的<strong>JDBC 代码</strong>和<strong>手动设置参数以及获取结果集</strong></li><li>MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</li></ol><h3 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h3><h4 id="持久化是将程序数据在持久状态和瞬时状态间转换的机制。"><a href="#持久化是将程序数据在持久状态和瞬时状态间转换的机制。" class="headerlink" title="持久化是将程序数据在持久状态和瞬时状态间转换的机制。"></a>持久化是将程序数据在持久状态和瞬时状态间转换的机制。</h4><ol><li>把数据（如内存中的对象）保存到可永久保存的存储设备中（如磁盘）。持久化的的主要应用是将内存中的对象存储在数据库中，或者存储在磁盘文件中，xml数据文件中等等。</li><li>JDBC就是一种持久化机制，文件IO也是一种持久化机制</li><li>在生活中：将鲜肉冷藏，吃的时候再解冻的方法就类似与持久化</li></ol><h4 id="为什么需要持久化服务？"><a href="#为什么需要持久化服务？" class="headerlink" title="为什么需要持久化服务？"></a>为什么需要持久化服务？</h4><ol><li>是因为内存本身的缺陷引起的</li><li>内存断电后数据会丢失，但有一些对象是无论如何都不能丢失的，比如银行账号等，遗憾的是，人们还无法保证内存永不掉电。</li><li>内存过于昂贵，与硬盘、光盘等外存相比，内存的价格要高2~3个数量级，而且维持成本也高，至少需要一直供电吧。所以即使对象不需要永久保存，也会因为内存的容量限制不能一直呆在内存中，需要持久化来缓存到外存。</li></ol><h3 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h3><h4 id="什么是持久层？"><a href="#什么是持久层？" class="headerlink" title="什么是持久层？"></a>什么是持久层？</h4><ol><li>完成持久化工作的代码块—-&gt; dao层 【DAO (Data Access Object) 数据访问对象】</li><li>大多数情况下特别是企业级应用，数据持久化往往也就意味着将内存中的数据保存到磁盘上加以固化，而持久化的实现过程则大多通过各种<strong>关系数据库</strong>来完成。</li><li>不过这里有一个字需要特别强调，也就是所谓的“层”。对于应用系统而言，数据持久功能大多是必不可少的组成部分。也就是说，我们的系统中，已经天然的具备了“持久层”概念？也许是，但也许实际情况并非如此。之所以要独立出一个“持久层”的概念,而不是“持久模块”，“持久单元”，也就意味着，我们的系统架构中，应该有一个相对独立的逻辑层面，专著于数据持久化逻辑的实现.</li><li>与系统其他部分相对而言，这个层面应该具有一个较为清晰和严格的逻辑边界。 【说白了就是用来操作数据库存在的！】</li></ol><h3 id="为什么需要Mybatis？"><a href="#为什么需要Mybatis？" class="headerlink" title="为什么需要Mybatis？"></a>为什么需要Mybatis？</h3><ol><li>MyBatis就是帮助程序猿将数据存入数据库中，和从数据库中取数据</li><li>传统的JDBC操作，有很多重复的代码块，比如：数据取出时的封装，数据库的建立连接等等…,通过框架可以减少重复代码，提高开发的效率</li><li>MyBatis 是一个半自动化的<strong>ORM框架 (Object Relationship Mapping) –&gt;对象关系映射</strong></li><li>所有的事情，不用Mybatis依旧可以做到，只是用了它，所有实现会更加简单！<strong>技术没有高低之分，只有使用这个技术的人有高低之别</strong></li></ol><h4 id="MyBatis的优点"><a href="#MyBatis的优点" class="headerlink" title="MyBatis的优点"></a>MyBatis的优点</h4><ol><li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件就可以了，易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li><li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。 sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li><li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li><li>提供xml标签，支持编写动态sql。</li><li>………</li></ol><h4 id=""><a href="#" class="headerlink" title=""></a></h4><ul><li>最重要的一点，使用的人多！公司需要！</li></ul><h2 id="MyBatis的-第一个程序"><a href="#MyBatis的-第一个程序" class="headerlink" title="MyBatis的 第一个程序"></a>MyBatis的 第一个程序</h2><h4 id="思路流程：搭建环境–-gt-导入Mybatis—-gt-编写代码—-gt-测试"><a href="#思路流程：搭建环境–-gt-导入Mybatis—-gt-编写代码—-gt-测试" class="headerlink" title="思路流程：搭建环境–&gt;导入Mybatis—&gt;编写代码—&gt;测试"></a><strong>思路流程：搭建环境–&gt;导入Mybatis—&gt;编写代码—&gt;测试</strong></h4><h4 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h4><ol><li><p>搭建实验数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE &#96;mybatis&#96;;</span><br><span class="line"></span><br><span class="line">USE &#96;mybatis&#96;;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS &#96;user&#96;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;user&#96; (</span><br><span class="line">  &#96;id&#96; int(20) NOT NULL,</span><br><span class="line">  &#96;name&#96; varchar(30) DEFAULT NULL,</span><br><span class="line">  &#96;pwd&#96; varchar(30) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">insert  into &#96;user&#96;(&#96;id&#96;,&#96;name&#96;,&#96;pwd&#96;) values (1,&#39;zhuuu&#39;,&#39;123456&#39;),(2,&#39;张三&#39;,&#39;abcdef&#39;),(3,&#39;李四&#39;,&#39;987654&#39;);</span><br></pre></td></tr></table></figure><p><strong>注意事项：如果IDEA连接到数据库失败</strong></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200211095659.png" alt=""></p><p>解决方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;test?useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8&amp;useJDBCCompliantTimezoneShift&#x3D;true&amp;useLegacyDatetimeCode&#x3D;false&amp;serverTimezone&#x3D;UTC</span><br></pre></td></tr></table></figure><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200211095827.png" alt=""></p></li></ol><ol start="2"><li>导入Mybatis相关的jar包</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>编写MyBatis核心配置文件</p><p>可以查看官方帮助文档</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis?useSSL=true<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/zhuuu/dao/userMapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li><p>编写Mybatis工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String resource = <span class="string">"mybatis-config.xml"</span>;</span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取SqlSession连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>创建实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;  <span class="comment">//id</span></span><br><span class="line">    <span class="keyword">private</span> String name;   <span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> String pwd;   <span class="comment">//密码</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//构造,有参,无参</span></span><br><span class="line">    <span class="comment">//set/get</span></span><br><span class="line">    <span class="comment">//toString()</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li><p>编写Mapper接口类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.kuang.pojo.User;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="7"><li>编写Mapper.xml配置文件</li></ol><ul><li><p>namespace 十分重要，不能写错！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zhuuu.dao.UserMapper"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUser"</span> <span class="attr">resultType</span>=<span class="string">"com.zhuuu.pojo.User"</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="8"><li><p>编写测试类</p><p>Junit 包测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtils.getSession();</span><br><span class="line">        <span class="comment">//方法一:</span></span><br><span class="line">        <span class="comment">//List&lt;User&gt; users = session.selectList("com.kuang.mapper.UserMapper.selectUser");</span></span><br><span class="line">        <span class="comment">//方法二:</span></span><br><span class="line">        UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        List&lt;User&gt; users = mapper.selectUser();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>运行测试</p></li></ol><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><p><strong>可能出现问题说明：Maven静态资源过滤问题</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-IDEA&quot;&gt;&lt;a href=&quot;#MyBatis-IDEA&quot; class=&quot;headerlink&quot; title=&quot;MyBatis IDEA&quot;&gt;&lt;/a&gt;MyBatis IDEA&lt;/h1&gt;&lt;h2 id=&quot;Mybatis简介&quot;&gt;&lt;a href=&quot;#Mybatis简介&quot; class=&quot;headerlink&quot; title=&quot;Mybatis简介&quot;&gt;&lt;/a&gt;Mybatis简介&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208170945.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;环境说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;jdk 8 +&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MySQL 5.7.19&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;maven-3.6.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IDEA&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 学习前需要掌握：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDBC&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;Java 基础&lt;/li&gt;
&lt;li&gt;Maven&lt;/li&gt;
&lt;li&gt;Junit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://mybatis.org/mybatis-3/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MyBatis官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mybatis/mybatis-3&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github官网&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+hexo搭建个人博客</title>
    <link href="http://zhuuu.work/2020/02/08/personal_server/GitHub-hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://zhuuu.work/2020/02/08/personal_server/GitHub-hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-02-08T08:02:27.000Z</published>
    <updated>2020-02-11T11:53:12.066Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitHub-hexo搭建个人博客详细教程"><a href="#GitHub-hexo搭建个人博客详细教程" class="headerlink" title="GitHub+hexo搭建个人博客详细教程"></a>GitHub+hexo搭建个人博客详细教程</h1><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208160405.png" alt=""></p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>​        随着互联网浪潮的翻腾，国内外涌现出越来越多优秀的社交信息分享者，随之优秀的信息分享平台也越来越多，最常见的就是个人博客。GitHub + hexo 是比较受欢迎的一种方式，为什么呢？省钱、简单、快速。如果你也是一个不甘寂寞、喜欢折腾的程序猿（媛），如果你也有过这种想要搭建一个所以自己的博客网站的想法，可以跟着我这篇教程博客一起，它可以让你快速搭建起一个属于自己的个人博客，享受这种从0到1的过程。</p><p>朱酱酱的博客 ： <a href="http://zhuuu.work/">链接</a></p><a id="more"></a><h2 id="2-概念介绍"><a href="#2-概念介绍" class="headerlink" title="2. 概念介绍"></a>2. 概念介绍</h2><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br>Hexo是一个基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。我这里选的是GitHub。Hexo的作者是台湾的，对中文支持很友好，可以到 Hexo官网 了解更多细节。</p><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>GitHub是一个代码托管网站和社交编程网站。这里聚集了世界上各路技术牛叉的大牛，和最优秀的代码库。是全球程序员的天堂。因为是国外的，所以界面全是英文。</p><h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p>GitHub Pages是用来托管 GitHub 上静态网页的免费站点。</p><h2 id="3-搭建步骤"><a href="#3-搭建步骤" class="headerlink" title="3. 搭建步骤"></a>3. 搭建步骤</h2><ul><li>环境搭建<ul><li>安装git</li><li>安装node.js</li><li>安装Hexo</li></ul></li><li>获取个人网站域名</li><li>GitHub创建个人仓库</li><li>推送网站</li><li>绑定域名</li><li>主题及个性化设置</li><li>发布文章</li><li>图床选择</li><li>其他</li></ul><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git下载</a></p><p>对应下载自己的电脑系统即可</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208161128.png" alt=""></p><h4 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h4><p>Hexo基于Node.js，我们需要在本机安装Node.js</p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs下载</a></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208161252.png" alt=""></p><p>安装完成后需要检查是否正确安装：以下都需要检查</p><p>检查Node.js是否安装成功，打开命令窗口，输入 <code>node -v</code></p><p>检查npm是否安装成功，在命令窗口输入 <code>npm -v</code></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208161424.png" alt=""></p><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>​    hexo就是我们用于搭建个人博客的框架，这个时候我们需要在我们本地文件夹中创建一个用于博客管理的文件夹，我命名为Blog。hexo框架与以后写作发布的网页等都会保存在这个文件夹中，创建好之后进入文件夹，按住shift，然后鼠标右键-在此处打开命令行</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208161519.png" alt=""></p><p>使用npm命令安装Hexo，输入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>耐心等待安装完成，完成之后，初始化我们的博客，输入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init bolg</span><br></pre></td></tr></table></figure><p>注意，这些命令都作用于我们刚刚新建的Blog文件夹中。</p><p>此时我们检测一下我们网站的雏形，按顺序输入以下三条命令：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new hello Hexo    //新建一篇名为"hello Hexo"的博客</span><br><span class="line">hexo g                 //生成静态文件</span><br><span class="line">hexo s                 //本地部署预览</span><br></pre></td></tr></table></figure><p>此时，我们的网站已经初步成型，可以输入 <code>localhost:4000</code> 访问。</p><p>我的blog修改过配置，和你们新搭建的略有区别。</p><h4 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g //安装Hexo</span><br><span class="line">npm update hexo -g //升级 </span><br><span class="line">hexo init //初始化博客</span><br></pre></td></tr></table></figure><p><strong>命令缩写</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n "我的博客" = hexo new "我的博客" //新建文章</span><br><span class="line">hexo g = hexo generate //生成</span><br><span class="line">hexo s = hexo server //启动服务预览</span><br><span class="line">hexo d = hexo deploy //部署</span><br></pre></td></tr></table></figure><h3 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h3><p>​    上面我们只是在本地预览，接下来要做的就是推送网站，也就是发布网站，让我们的网站在互联网上能被访问到。在设置之前，我们先来看看blog根目录里的<strong>_config.yml文件</strong>，是我们的<strong>站点配置文件</strong>，如下图：</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208161947.png" alt=""></p><p>进入根目录的themes文件夹的任意主题目录，也有一个_config.yml文件，这个是主题配置文件，如下图：</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208162032.png" alt=""></p><h4 id="将hexo与gitHub关联"><a href="#将hexo与gitHub关联" class="headerlink" title="将hexo与gitHub关联"></a>将hexo与gitHub关联</h4><p>打开blog根目录下的站点配置配置文件_config.yml，修改成下面的样子并保存</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208162127.png" alt=""></p><p>这一步其实就是给 <code>hexo d</code> 这个部署命令做相应的配置</p><p>让hexo知道你要把blog部署到哪，很显然我们是部署到github仓库里。</p><p>然后我们要安装git部署插件，输入以下命令：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean //清理静态文件</span><br><span class="line">hexo g //生成静态文件</span><br><span class="line">hexo d //部署</span><br></pre></td></tr></table></figure><p>​    完成后打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即xxxx.github.io，其中xxxx表示我们的用户名。当然这里有个前提，你是按照<strong>用户名</strong>.github.io的形式来命名你的仓库。你就会发现你的博客已经上线了，可以在网络上被访问了。</p><h3 id="绑定域名（可选）"><a href="#绑定域名（可选）" class="headerlink" title="绑定域名（可选）"></a>绑定域名（可选）</h3><p>​        虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:xxxx.github.io， 而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。</p><p>​        这里演示的是在阿里云万网的域名绑定，在国内主流的域名代理厂商也就阿里云和腾讯云。登录到阿里云，进入管理控制台的域名列表，找到你的个性化域名，进入解析</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208162443.png" alt=""></p><p>  然后添加解析：如图选择解析就好</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208162610.png" alt=""></p><p>​    包括添加三条解析记录，ip是你的GitHub的地址，你也可以ping你的 xxxx.github.io 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.github.io这里千万别弄错了。</p><p>第二步：登陆你的github，在对应仓库的settings中把你在阿里云买的域名写上</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208162845.png" alt=""></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208162912.png" alt=""></p><p>点击save保存。</p><p>第三步：</p><p>​        第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www：</p><p>​    <img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208163015.png" alt=""></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208163036.png" alt=""></p><p>​    完成这三步，进入blog目录中，按住shift键右击打开命令行，依次输入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>​    这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。</p><h3 id="主题和个性化设置"><a href="#主题和个性化设置" class="headerlink" title="主题和个性化设置"></a>主题和个性化设置</h3><h4 id="更换题主"><a href="#更换题主" class="headerlink" title="更换题主"></a>更换题主</h4><p>​    如果你不喜欢Hexo默认的主题，可以更换不同的主题，</p><p>​    主题传送门：<a href="https://link.zhihu.com/?target=https%3A//hexo.io/themes/">Themes</a> </p><p>​    个人使用的主题:<a href="https://github.com/Shen-Yu/hexo-theme-ayer" target="_blank" rel="noopener">传送门</a></p><p>​    附送一款热度最高的主题next:<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">传送门</a></p><p>​    我自己使用的是ayer主题，可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成ayer主题，在blog目录中（就是命令行的位置处于blog目录）打开命令行输入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer</span><br></pre></td></tr></table></figure><p>​    打开<strong>站点</strong>的_config.yml配置文件，修改主题为ayer:</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208163433.png" alt=""></p><h3 id="图床选择"><a href="#图床选择" class="headerlink" title="图床选择"></a>图床选择</h3><p>​    我使用的markdown编辑器是Typora，这款编辑器插入图片需要绝对路径或者相对路径</p><p>​    因为图片放在github上会加载不出来，所以使用了阿里云OSS和PicGO配合使用</p><h4 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h4><p>​    这款软件是国人做的，非常好用的一款上传图片到云端的软件</p><p>​    <a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo下载链接</a></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208163804.png" alt=""></p><p>配置如下图：</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208163841.png" alt=""></p><p>上图的key和secret是阿里云oss的配置；接下来将进行介绍</p><h4 id="阿里云OSS"><a href="#阿里云OSS" class="headerlink" title="阿里云OSS"></a>阿里云OSS</h4><p>​    关于图床，免费的图床有很多，但是免费的图床总会有很多问题，例如图片链接经常会失效等。</p><p>建议还是花点钱弄个付费的，也不贵。我选择的是 阿里云OSS ，很便宜，九块钱一年，超出按留流量收费。</p><p>另外还有一款超级好用的图床上传工具：PicGo ，真的是十分好用了。</p><p>当然还有很多其他好用的图床，阿里云和腾讯云都差不多，SM.MS 等也还可以，总之我觉得收费的省心一些，当然你也可以说：“我不要你觉得，我要我觉得”，哈哈。</p><p><a href="https://oss.console.aliyun.com/overview" target="_blank" rel="noopener">阿里云OSS</a></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208164117.png" alt=""></p><p>首先去购买 <a href="https://oss.console.aliyun.com/overview" target="_blank" rel="noopener">阿里云OSS</a></p><p>然后按照下图创建bucket:</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208164319.png" alt=""></p><p>如果上述情况有不懂的地方，可以参照下面这个链接，很详细的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_40241957&#x2F;article&#x2F;details&#x2F;89490282</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其他</p><p>我踩过的坑</p><p>​    1、域名买.top的就可以，土豪请随意</p><p>​    2、修改配置文件，很容易搞错路径，因为这个站点内同名的文件在很多路径下都有，例如_config.yml</p><p>​    3、如果安装hexo过程中或者之前有报错，建议你重装。一旦出错了，基本就是你的操作问题了，而且很难发现、解决，解决错误的时间可以重装很多次了</p><p>​    4、域名的绑定，关于添加解析，很容易出错！！有的博主说是三条，有的博主说是只需要一条，就是不要A记录的解析，保留一个CNAME的解析，我是添加了三条的，如果你遇到什么问题，可以试试只保留CNAME，百度一下解决方案</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ol><li>个性固然好，但是在设置的时候一定要细心，这些都是要打开代码文件去修改的，如果本机装有IDEA，最好用它来编辑，没装的话IDEA的话，VSCODE也行</li><li>图床选择要谨慎，建议选择知名图床，有很小的图床经常会失效，另外图片文件一定要在本地留有备份<br>个性化可以让你的博客看起来高大上许多，但最重要的还是我们持续的价值输出，坚持写博客才是真理，不要忘记我们搭建博客的初心（当我知道很多小伙伴和我一样，就是喜欢折腾，哈哈）</li><li>博客的源文件，也可以托管到github上，特别是博文对应得md文件，一定别弄丢了，整个站点文件都托管的话，可以多台电脑去管理你的博客</li><li>国内访问GitHub得速度不理想，可以将博客同时部署到GitHub和coding，提高国内访问速度</li></ol><h2 id="到这里恭喜你成功的搭建好了自己的博客！！！"><a href="#到这里恭喜你成功的搭建好了自己的博客！！！" class="headerlink" title="到这里恭喜你成功的搭建好了自己的博客！！！"></a>到这里恭喜你成功的搭建好了自己的博客！！！</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;GitHub-hexo搭建个人博客详细教程&quot;&gt;&lt;a href=&quot;#GitHub-hexo搭建个人博客详细教程&quot; class=&quot;headerlink&quot; title=&quot;GitHub+hexo搭建个人博客详细教程&quot;&gt;&lt;/a&gt;GitHub+hexo搭建个人博客详细教程&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208160405.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h2&gt;&lt;p&gt;​        随着互联网浪潮的翻腾，国内外涌现出越来越多优秀的社交信息分享者，随之优秀的信息分享平台也越来越多，最常见的就是个人博客。GitHub + hexo 是比较受欢迎的一种方式，为什么呢？省钱、简单、快速。如果你也是一个不甘寂寞、喜欢折腾的程序猿（媛），如果你也有过这种想要搭建一个所以自己的博客网站的想法，可以跟着我这篇教程博客一起，它可以让你快速搭建起一个属于自己的个人博客，享受这种从0到1的过程。&lt;/p&gt;
&lt;p&gt;朱酱酱的博客 ： &lt;a href=&quot;http://zhuuu.work/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Git" scheme="http://zhuuu.work/tags/Git/"/>
    
      <category term="nodejs" scheme="http://zhuuu.work/tags/nodejs/"/>
    
      <category term="hexo" scheme="http://zhuuu.work/tags/hexo/"/>
    
      <category term="aliyun" scheme="http://zhuuu.work/tags/aliyun/"/>
    
  </entry>
  
  <entry>
    <title>IDEA:配置优化</title>
    <link href="http://zhuuu.work/2020/02/08/config/IDEA-%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/"/>
    <id>http://zhuuu.work/2020/02/08/config/IDEA-%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/</id>
    <published>2020-02-08T07:40:41.000Z</published>
    <updated>2020-02-11T09:59:13.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IDEA-配置优化"><a href="#IDEA-配置优化" class="headerlink" title="IDEA:配置优化"></a>IDEA:配置优化</h1><p>​        工欲善其事必先利其器，我平时比较喜欢使用IDEA，这个软件可以很大程度上提高工作效率。IDEA全称IntelliJ IDEA，是用于java语言开发的集成环境（也可用于其他语言），IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能代码助手、代码自动提示、重构、J2EE支持、Ant、JUnit、CVS整合、代码审查、 创新的GUI设计等方面的功能可以说是超常的。IDEA是JetBrains公司的产品，这家公司总部位于捷克共和国的首都布拉格，开发人员以严谨著称的东欧程序员为主。<br>​        一直都有想过写一篇关于IDEA的设置优化的博文，因为确实网上的不是很适合我的风格。且网上的优化教程不是很多，自己摸索出来一下，希望能够帮到大家。</p><a id="more"></a><h2 id="1-工具栏优化"><a href="#1-工具栏优化" class="headerlink" title="1.工具栏优化"></a>1.工具栏优化</h2><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208154440.png" alt=""></p><h2 id="2-设置说明"><a href="#2-设置说明" class="headerlink" title="2.设置说明"></a>2.设置说明</h2><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208154601.png" alt=""></p><h2 id="3-主题修改"><a href="#3-主题修改" class="headerlink" title="3.主题修改"></a>3.主题修改</h2><p>安装IDEA的时候选过主题，后期假如要换的话</p><p><strong>Appearance&amp;Behavior -&gt; Appearance</strong></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208154943.png" alt=""></p><h2 id="4-字体修改"><a href="#4-字体修改" class="headerlink" title="4.字体修改"></a>4.字体修改</h2><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155026.png" alt=""></p><h2 id="5-开启IDEA不自动打开项目"><a href="#5-开启IDEA不自动打开项目" class="headerlink" title="5.开启IDEA不自动打开项目"></a>5.开启IDEA不自动打开项目</h2><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155129.png" alt=""></p><h2 id="6-字体滚轮调整字体大小"><a href="#6-字体滚轮调整字体大小" class="headerlink" title="6.字体滚轮调整字体大小"></a>6.字体滚轮调整字体大小</h2><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155221.png" alt=""></p><h2 id="7-鼠标悬浮提醒"><a href="#7-鼠标悬浮提醒" class="headerlink" title="7.鼠标悬浮提醒"></a>7.鼠标悬浮提醒</h2><p>​    鼠标移动到一个类上，会提示这个类的文档解释信息；IDEA里默认不会这样，我们需要设置下；这里的话 我们要勾选下，后面设置的是延迟时间 默认半秒；</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155305.png" alt=""></p><h2 id="8-忽略大小写提示"><a href="#8-忽略大小写提示" class="headerlink" title="8.忽略大小写提示"></a>8.忽略大小写提示</h2><p>​    <strong>IDEA默认提示是区分大小写的，比如输入string，不会提示String类；这里设置下</strong></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155401.png" alt=""></p><h2 id="9-自动导包"><a href="#9-自动导包" class="headerlink" title="9.自动导包"></a>9.自动导包</h2><p>​    IDEA提供了自动导包设置；</p><p>​    下拉选All， 然后下面两个勾选下即可；不仅能自动导包，自己试下会知道，还能自动去包；</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155448.png" alt=""></p><h2 id="10-统一文件编码"><a href="#10-统一文件编码" class="headerlink" title="10.统一文件编码"></a>10.统一文件编码</h2><p>​    *<em>所有地方都设置成UTF-8 *</em></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155601.png" alt=""></p><h2 id="11-水平或者垂直显示代码"><a href="#11-水平或者垂直显示代码" class="headerlink" title="11.水平或者垂直显示代码"></a>11.水平或者垂直显示代码</h2><p>​    <strong>有时候为了比对或者参数代码，需要让代码水平或者垂直显示，IDEA里，我们右键文件Tab，显示如下</strong></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155710.png" alt=""></p><h2 id="12-包折叠"><a href="#12-包折叠" class="headerlink" title="12.包折叠"></a>12.包折叠</h2><p>  <strong>把包折叠起来，这样会更加美观</strong></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200208155804.png" alt=""></p><hr><p><strong>这些配置编辑完成后，就可以愉快的开始编写代码了~*</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;IDEA-配置优化&quot;&gt;&lt;a href=&quot;#IDEA-配置优化&quot; class=&quot;headerlink&quot; title=&quot;IDEA:配置优化&quot;&gt;&lt;/a&gt;IDEA:配置优化&lt;/h1&gt;&lt;p&gt;​        工欲善其事必先利其器，我平时比较喜欢使用IDEA，这个软件可以很大程度上提高工作效率。IDEA全称IntelliJ IDEA，是用于java语言开发的集成环境（也可用于其他语言），IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能代码助手、代码自动提示、重构、J2EE支持、Ant、JUnit、CVS整合、代码审查、 创新的GUI设计等方面的功能可以说是超常的。IDEA是JetBrains公司的产品，这家公司总部位于捷克共和国的首都布拉格，开发人员以严谨著称的东欧程序员为主。&lt;br&gt;​        一直都有想过写一篇关于IDEA的设置优化的博文，因为确实网上的不是很适合我的风格。且网上的优化教程不是很多，自己摸索出来一下，希望能够帮到大家。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JAVA" scheme="http://zhuuu.work/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 事务索引备份视图</title>
    <link href="http://zhuuu.work/2020/01/16/Mysql/Mysql%E4%BA%8B%E5%8A%A1%E7%B4%A2%E5%BC%95%E5%A4%87%E4%BB%BD%E8%A7%86%E5%9B%BE/"/>
    <id>http://zhuuu.work/2020/01/16/Mysql/Mysql%E4%BA%8B%E5%8A%A1%E7%B4%A2%E5%BC%95%E5%A4%87%E4%BB%BD%E8%A7%86%E5%9B%BE/</id>
    <published>2020-01-16T08:02:27.000Z</published>
    <updated>2020-02-17T02:41:58.137Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql-事务索引备份视图"><a href="#Mysql-事务索引备份视图" class="headerlink" title="Mysql 事务索引备份视图"></a>Mysql 事务索引备份视图</h1><h2 id="Mysql-事务"><a href="#Mysql-事务" class="headerlink" title="Mysql 事务"></a>Mysql 事务</h2><p><strong>事务：==要么都成功，要么都失败==</strong></p><p>举例： </p><ol><li>SQL执行  A给B转账</li><li>SQL执行  B收到A的钱</li></ol><h3 id="核心-：要么都成功，要么都失败"><a href="#核心-：要么都成功，要么都失败" class="headerlink" title="核心 ：要么都成功，要么都失败"></a>核心 ：要么都成功，要么都失败</h3><ul><li>将一组SQL放在同一个批次去执行</li><li>如果一个SQL语句出错,则该批次内的所有SQL都将被取消执行</li><li>MySQL事务处理只支持InnoDB和BDB数据表类型</li></ul><h3 id="事务的原则：ACID原则"><a href="#事务的原则：ACID原则" class="headerlink" title="事务的原则：ACID原则"></a>事务的原则：ACID原则</h3><p>参考博客（<a href="https://blog.csdn.net/dengjili/article/details/82468576）" target="_blank" rel="noopener">https://blog.csdn.net/dengjili/article/details/82468576）</a></p><ul><li>原子性：（Atomicity）</li></ul><p>要么都成功，要么都失败</p><ul><li>一致性：  (Consistency)</li></ul><p>事务前后的数据完整性要保持一致</p><ul><li>持久性 : （Durability）</li></ul><p>事务一旦提交则不可逆，被持久化到数据库中</p><ul><li>隔离性 （Isolaiton）</li></ul><p>事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他用户访问，事务之间需要相互隔离</p><h3 id="隔离性所导致的一些问题"><a href="#隔离性所导致的一些问题" class="headerlink" title="隔离性所导致的一些问题"></a>隔离性所导致的一些问题</h3><h4 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h4><ul><li>一个事务读取了另一个事务未提交的数据</li></ul><h4 id="不可重复读"><a href="#不可重复读" class="headerlink" title="不可重复读"></a>不可重复读</h4><ul><li>在一个事务中读取表中的某一行数据，多次读取的数据不同。（这不一定是错误，只是场景不同）</li></ul><h4 id="虚读（幻读）"><a href="#虚读（幻读）" class="headerlink" title="虚读（幻读）"></a>虚读（幻读）</h4><ul><li>是指在一个事务中读取到了别的事务插入的数据，导致前后读取不一致。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mysql-事务索引备份视图&quot;&gt;&lt;a href=&quot;#Mysql-事务索引备份视图&quot; class=&quot;headerlink&quot; title=&quot;Mysql 事务索引备份视图&quot;&gt;&lt;/a&gt;Mysql 事务索引备份视图&lt;/h1&gt;&lt;h2 id=&quot;Mysql-事务&quot;&gt;&lt;a href
      
    
    </summary>
    
    
    
      <category term="Mysql" scheme="http://zhuuu.work/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-使用注解开发</title>
    <link href="http://zhuuu.work/2020/01/15/Mybatis/MyBatis-%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/"/>
    <id>http://zhuuu.work/2020/01/15/Mybatis/MyBatis-%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</id>
    <published>2020-01-15T03:12:22.000Z</published>
    <updated>2020-02-17T03:26:04.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-使用注解开发"><a href="#MyBatis-使用注解开发" class="headerlink" title="MyBatis 使用注解开发"></a>MyBatis 使用注解开发</h1><h2 id="面向接口编程"><a href="#面向接口编程" class="headerlink" title="面向接口编程"></a>面向接口编程</h2><ul><li><p>真正的开发中，很多时候我们会选择面向接口编程</p></li><li><p><strong>根本原因 : 解耦 , 可拓展 , 提高复用 , 分层开发中 , 上层不用管具体的实现 , 大家都遵守共同的标准 , 使得开发变得容易 , 规范性更好</strong></p></li><li><p>在一个面向对象的系统中，系统的各种功能是由许许多多的不同对象协作完成的。在这种情况下，各个对象内部是如何实现自己的,对系统设计人员来讲就不那么重要了</p></li><li><p>而各个对象之间的协作关系则成为系统设计的关键。小到不同类之间的通信，大到各模块之间的交互，在系统设计之初都是要着重考虑的，这也是系统设计的主要工作内容。面向接口编程就是指按照这种思想来编程。</p></li></ul><h3 id="关于接口的理解"><a href="#关于接口的理解" class="headerlink" title="关于接口的理解"></a>关于接口的理解</h3><ul><li><p>接口从更深层次的理解，应该是定义（规范，约束）与实现（名实分离的原则）的分离</p></li><li><p>接口的本身反映了系统设计人员对系统的抽象理解</p></li><li><p>接口应该有两类：</p><ul><li>第一类是对一个个体的抽象，它可对应为一个抽象体（abstract class）;</li><li>第二类是对一个个体某一方面的抽象，即形成一个抽象面（interface）;</li></ul><p><strong>一个个体有可能有多个抽象面，抽象体和抽象面是有区别的</strong></p></li></ul><h3 id="三个面向的区别"><a href="#三个面向的区别" class="headerlink" title="三个面向的区别"></a>三个面向的区别</h3><ul><li>面向对象：考虑问题时，以对象为单位，考虑它的属性及方法</li><li>面向过程：考虑问题时，以一个具体的流程（事务过程）为单位，考虑它的实现</li><li>接口设计与非接口设计是针对复用技术而言的，与面向对象（过程）不是一个问题.更多的体现就是对系统整体的架构</li></ul><a id="more"></a><h2 id="利用注解开发"><a href="#利用注解开发" class="headerlink" title="利用注解开发"></a>利用注解开发</h2><ul><li><strong>mybatis最初配置信息是基于 XML ,映射语句(SQL)也是定义在 XML 中的。而到MyBatis 3提供了新的基于注解的配置。</strong></li><li><strong>不幸的是，Java 注解的的表达力和灵活性十分有限。最强大的 MyBatis 映射并不能用注解来构建</strong></li></ul><p>sql类型主要分成：</p><ul><li>@select()</li><li>@update()</li><li>@Insert()</li><li>@delete()</li></ul><p>【注意】利用注解开发就不需要mapper.xml映射文件了 .</p><p>步骤1：在我们的接口中添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Mapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select id,name,pwd as password from user"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>步骤2：在mybatis的核心配置文件中注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    每一个Mapper,XML都需要在mybatis核心配置文件中注册--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"com.zhuuu.dao.Mapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>步骤3：去进行测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetAllUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    <span class="comment">//本质上利用了jvm的动态代理机制</span></span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">   List&lt;User&gt; users = mapper.getAllUser();</span><br><span class="line">    <span class="keyword">for</span> (User user : users)&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Debug查看本质"><a href="#Debug查看本质" class="headerlink" title="Debug查看本质"></a>Debug查看本质</h3><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217111313.png" alt=""></p><p><strong>本质上利用了jvm动态代理机制</strong></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217111422.png" alt=""></p><h3 id="MyBatis详细的执行流程"><a href="#MyBatis详细的执行流程" class="headerlink" title="MyBatis详细的执行流程"></a>MyBatis详细的执行流程</h3><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217111534.png" alt=""></p><h2 id="注解实现增删改"><a href="#注解实现增删改" class="headerlink" title="注解实现增删改"></a>注解实现增删改</h2><h3 id="自动实现提交事务"><a href="#自动实现提交事务" class="headerlink" title="自动实现提交事务"></a>自动实现提交事务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//改造MybatisUtils工具类的getSession( ) 方法，重载实现。【鸡汤：多看源码实现】</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取SqlSession连接</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getSession(<span class="keyword">true</span>); <span class="comment">//事务自动提交</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSession</span><span class="params">(<span class="keyword">boolean</span> flag)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqlSessionFactory.openSession(flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【注意】确保实体类和数据库字段对应</p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><ol><li>编写接口方法注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询用户</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from user where id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function">User <span class="title">selectUserById</span><span class="params">(@Param(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    User user = mapper.selectUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h3><ol><li>编写接口方法注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加一个用户</span></span><br><span class="line"><span class="meta">@Insert</span>(<span class="string">"insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)"</span>)</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="number">6</span>, <span class="string">"朱酱酱"</span>, <span class="string">"123456"</span>);</span><br><span class="line">    mapper.addUser(user);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><ol><li>编写接口方法注解：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改一个用户</span></span><br><span class="line"><span class="meta">@Update</span>(<span class="string">"update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="number">6</span>, <span class="string">"朱酱酱帅"</span>, <span class="string">"zxcvbn"</span>);</span><br><span class="line">    mapper.updateUser(user);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><ol><li>编写接口方法注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id删除用</span></span><br><span class="line"><span class="meta">@Delete</span>(<span class="string">"delete from user where id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(@Param(<span class="string">"id"</span>)</span><span class="keyword">int</span> id)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    mapper.deleteUser(<span class="number">6</span>);</span><br><span class="line">    </span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【注意点：增删改一定记得对事务的处理】</p><h2 id="关于-Param"><a href="#关于-Param" class="headerlink" title="关于@Param"></a>关于@Param</h2><p>@Param注解用于给方法参数起一个名字。以下是总结的使用原则：</p><ul><li>在方法只接受一个参数的情况下，可以不使用@Param</li><li>在方法接受多个参数的情况下，建议一定要使用@Param注解给参数命名</li><li>如果参数是JavaBean，则不能使用@Param</li><li>不使用@Param注解时，参数只能有一个，并且是Javabean</li></ul><h2 id="关于-和-的区别"><a href="#关于-和-的区别" class="headerlink" title="关于#和$的区别"></a>关于#和$的区别</h2><ul><li><code>#{}</code> 的作用主要是替换预编译语句(PrepareStatement)中的   占位符?    【推荐使用】</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO user (name) VALUES (#&#123;name&#125;);</span><br><span class="line">INSERT INTO user (name) VALUES (?);</span><br></pre></td></tr></table></figure><ul><li>${} 的作用是直接进行字符串的替换</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO user (name) VALUES (&#39;$&#123;name&#125;&#39;);</span><br><span class="line">INSERT INTO user (name) VALUES (&#39;Zhuuu&#39;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-使用注解开发&quot;&gt;&lt;a href=&quot;#MyBatis-使用注解开发&quot; class=&quot;headerlink&quot; title=&quot;MyBatis 使用注解开发&quot;&gt;&lt;/a&gt;MyBatis 使用注解开发&lt;/h1&gt;&lt;h2 id=&quot;面向接口编程&quot;&gt;&lt;a href=&quot;#面向接口编程&quot; class=&quot;headerlink&quot; title=&quot;面向接口编程&quot;&gt;&lt;/a&gt;面向接口编程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;真正的开发中，很多时候我们会选择面向接口编程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;根本原因 : 解耦 , 可拓展 , 提高复用 , 分层开发中 , 上层不用管具体的实现 , 大家都遵守共同的标准 , 使得开发变得容易 , 规范性更好&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在一个面向对象的系统中，系统的各种功能是由许许多多的不同对象协作完成的。在这种情况下，各个对象内部是如何实现自己的,对系统设计人员来讲就不那么重要了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;而各个对象之间的协作关系则成为系统设计的关键。小到不同类之间的通信，大到各模块之间的交互，在系统设计之初都是要着重考虑的，这也是系统设计的主要工作内容。面向接口编程就是指按照这种思想来编程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;关于接口的理解&quot;&gt;&lt;a href=&quot;#关于接口的理解&quot; class=&quot;headerlink&quot; title=&quot;关于接口的理解&quot;&gt;&lt;/a&gt;关于接口的理解&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;接口从更深层次的理解，应该是定义（规范，约束）与实现（名实分离的原则）的分离&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接口的本身反映了系统设计人员对系统的抽象理解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接口应该有两类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一类是对一个个体的抽象，它可对应为一个抽象体（abstract class）;&lt;/li&gt;
&lt;li&gt;第二类是对一个个体某一方面的抽象，即形成一个抽象面（interface）;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;一个个体有可能有多个抽象面，抽象体和抽象面是有区别的&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;三个面向的区别&quot;&gt;&lt;a href=&quot;#三个面向的区别&quot; class=&quot;headerlink&quot; title=&quot;三个面向的区别&quot;&gt;&lt;/a&gt;三个面向的区别&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;面向对象：考虑问题时，以对象为单位，考虑它的属性及方法&lt;/li&gt;
&lt;li&gt;面向过程：考虑问题时，以一个具体的流程（事务过程）为单位，考虑它的实现&lt;/li&gt;
&lt;li&gt;接口设计与非接口设计是针对复用技术而言的，与面向对象（过程）不是一个问题.更多的体现就是对系统整体的架构&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-动态SQL</title>
    <link href="http://zhuuu.work/2020/01/15/Mybatis/MyBatis-%E5%8A%A8%E6%80%81SQL/"/>
    <id>http://zhuuu.work/2020/01/15/Mybatis/MyBatis-%E5%8A%A8%E6%80%81SQL/</id>
    <published>2020-01-15T03:12:22.000Z</published>
    <updated>2020-02-17T12:29:32.393Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-动态SQL"><a href="#MyBatis-动态SQL" class="headerlink" title="MyBatis 动态SQL"></a>MyBatis 动态SQL</h1><p>动态SQL 官方文档：<a href="https://mybatis.org/mybatis-3/zh/dynamic-sql.html" target="_blank" rel="noopener">文档链接</a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>什么是动态SQL:就是根据不同的查询条件，自动生成不同的Sql语句</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">官网描述：</span><br><span class="line">    MyBatis 的强大特性之一便是它的动态 SQL。如果你有使用 JDBC 或其它类似框架的经验，你就能体会到根据不同条件拼接 SQL 语句的痛苦。例如拼接时要确保不能忘记添加必要的空格，还要注意去掉列表最后一个列名的逗号。利用动态 SQL 这一特性可以彻底摆脱这种痛苦。</span><br><span class="line">    虽然在以前使用动态 SQL 并非一件易事，但正是 MyBatis 提供了可以被用在任意 SQL 映射语句中的强大的动态 SQL 语言得以改进这种情形。</span><br><span class="line">    动态 SQL 元素和 JSTL 或基于类似 XML 的文本处理器相似。在 MyBatis 之前的版本中，有很多元素需要花时间了解。MyBatis 3 大大精简了元素种类，现在只需学习原来一半的元素便可。MyBatis 采用功能强大的基于 OGNL 的表达式来淘汰其它大部分元素。</span><br><span class="line">    </span><br><span class="line">    -------------------------------</span><br><span class="line">    - if</span><br><span class="line">    - choose (when, otherwise)</span><br><span class="line">    - trim (where, set)</span><br><span class="line">    - foreach</span><br><span class="line">    -------------------------------</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>之前写的 SQL 语句都比较简单，如果有比较复杂的业务，我们需要写复杂的 SQL 语句，往往需要拼接，而拼接 SQL ，稍微不注意，由于引号，空格等缺失可能都会导致错误。</li><li>那么怎么去解决这个问题呢？这就要使用 mybatis 动态SQL，通过 if, choose, when, otherwise, trim, where, set, foreach等标签，可组合成非常灵活的SQL语句，从而在提高 SQL 语句的准确性的同时，也大大提高了开发人员的效率。</li></ul><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ol><li><p>新建一个数据库表</p><p>字段：id，title，author，create_time，views</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;blog&#96; (</span><br><span class="line">  &#96;id&#96; varchar(50) NOT NULL COMMENT &#39;博客id&#39;,</span><br><span class="line">  &#96;title&#96; varchar(100) NOT NULL COMMENT &#39;博客标题&#39;,</span><br><span class="line">  &#96;author&#96; varchar(30) NOT NULL COMMENT &#39;博客作者&#39;,</span><br><span class="line">  &#96;create_time&#96; datetime NOT NULL COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;views&#96; int(30) NOT NULL COMMENT &#39;浏览量&#39;</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8</span><br></pre></td></tr></table></figure><ol start="2"><li>创建MyBatis工程</li></ol><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217175227.png" alt=""></p><ol start="3"><li>编写IDutil工具类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IDUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">genId</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> UUID.randomUUID().toString().replaceAll(<span class="string">"-"</span>,<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>实体类编写</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> views;</span><br><span class="line">    <span class="comment">//set，get....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>编写Mapper和Mapper.xml</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogMapper</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zhuuu.dao.BlogMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>在MyBatis核心配置文件中，下划线驼峰自动转换</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"db.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"STDOUT_LOGGING"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.zhuuu.pojo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    每一个Mapper,XML都需要在mybatis核心配置文件中注册--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.zhuuu.dao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="7"><li><p>插入初始的数据</p><p>编写一个接口</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增一个博客</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addBlog</span><span class="params">(Blog blog)</span></span>;</span><br></pre></td></tr></table></figure><p>  Mapper配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addBlog"</span> <span class="attr">parameterType</span>=<span class="string">"blog"</span>&gt;</span></span><br><span class="line">    insert into blog (id, title, author, create_time, views)</span><br><span class="line">    values (#&#123;id&#125;,#&#123;title&#125;,#&#123;author&#125;,#&#123;createTime&#125;,#&#123;views&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>初始化博客方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInitBlog</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    BlogMapper mapper = session.getMapper(BlogMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    Blog blog = <span class="keyword">new</span> Blog();</span><br><span class="line">    blog.setId(IDUtil.genId());</span><br><span class="line">    blog.setTitle(<span class="string">"Mybatis如此简单"</span>);</span><br><span class="line">    blog.setAuthor(<span class="string">"Zhuuu"</span>);</span><br><span class="line">    blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">    blog.setViews(<span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line">    mapper.addBlog(blog);</span><br><span class="line"></span><br><span class="line">    blog.setId(IDUtil.genId());</span><br><span class="line">    blog.setTitle(<span class="string">"Java如此简单"</span>);</span><br><span class="line">    mapper.addBlog(blog);</span><br><span class="line"></span><br><span class="line">    blog.setId(IDUtil.genId());</span><br><span class="line">    blog.setTitle(<span class="string">"Spring如此简单"</span>);</span><br><span class="line">    mapper.addBlog(blog);</span><br><span class="line"></span><br><span class="line">    blog.setId(IDUtil.genId());</span><br><span class="line">    blog.setTitle(<span class="string">"微服务如此简单"</span>);</span><br><span class="line">    mapper.addBlog(blog);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态-if语句"><a href="#动态-if语句" class="headerlink" title="动态-if语句"></a>动态-if语句</h2><p><strong>需求：根据作者名字和博客名字来查询博客！如果作者名字为空，那么只根据博客名字查询，反之，则根据作者名来查询</strong></p><ol><li>编写接口类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需求1</span></span><br><span class="line"><span class="function">List&lt;Blog&gt; <span class="title">queryBlogIf</span><span class="params">(Map map)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写sql语句</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--需求1：</span></span><br><span class="line"><span class="comment">根据作者名字和博客名字来查询博客！</span></span><br><span class="line"><span class="comment">如果作者名字为空，那么只根据博客名字查询，反之，则根据作者名来查询</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">select * from blog where title = #&#123;title&#125; and author = #&#123;author&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryBlogIf"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"blog"</span>&gt;</span></span><br><span class="line">    select * from blog where</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">        title = #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">        and author = #&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryBlogIf</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    BlogMapper mapper = session.getMapper(BlogMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">    map.put(<span class="string">"title"</span>,<span class="string">"Mybatis如此简单"</span>);</span><br><span class="line">    map.put(<span class="string">"author"</span>,<span class="string">"狂神说"</span>);</span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogIf(map);</span><br><span class="line"></span><br><span class="line">    System.out.println(blogs);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会遇到以下几种情况：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.author 为 null的情况  正常查出</span></span><br><span class="line">Checking to see if class com.zhuuu.dao.BlogMapper matches criteria [is assignable to Object]</span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection <span class="number">376416077</span>.</span><br><span class="line">==&gt;  Preparing: select * from blog where title = ? </span><br><span class="line">==&gt; Parameters: Mybatis如此简单(String)</span><br><span class="line">&lt;==    Columns: id, title, author, create_time, views</span><br><span class="line">&lt;==        Row: <span class="number">62</span>d300fbe0174864af4ebb089ff6952f, Mybatis如此简单, Zhuuu, <span class="number">2020</span>-<span class="number">02</span>-<span class="number">17</span> <span class="number">17</span>:<span class="number">51</span>:<span class="number">03.0</span>, <span class="number">9999</span></span><br><span class="line">&lt;==      Total: <span class="number">1</span></span><br><span class="line">[Blog(id=<span class="number">62</span>d300fbe0174864af4ebb089ff6952f, title=Mybatis如此简单, author=Zhuuu, createTime=Mon Feb <span class="number">17</span> <span class="number">17</span>:<span class="number">51</span>:<span class="number">03</span> CST <span class="number">2020</span>, views=<span class="number">9999</span>)]</span><br><span class="line">Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@<span class="number">166f</span>a74d]</span><br><span class="line">Returned connection <span class="number">376416077</span> to pool.</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.title 为 null的情况  and导致报错</span></span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection <span class="number">376416077</span>.</span><br><span class="line">==&gt;  Preparing: select * from blog where and author = ? </span><br><span class="line">==&gt; Parameters: Zhuuu(String)</span><br></pre></td></tr></table></figure><h2 id="动态-where语句"><a href="#动态-where语句" class="headerlink" title="动态-where语句"></a>动态-where语句</h2><p>修改上面的情况2：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryBlogIf"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"blog"</span>&gt;</span></span><br><span class="line">    select * from blog </span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">            title = #&#123;title&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">            and author = #&#123;author&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个”where”标签会知道如果它包含标签中返回值的话，它就会插入一个“where”。此外，如果标签返回的内容是AND或OR开头的，则它会剔除掉。</p><h2 id="动态-Set"><a href="#动态-Set" class="headerlink" title="动态-Set"></a>动态-Set</h2><ol><li>编写接口方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateBlog</span><span class="params">(Map map)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>sql配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注意set是用的逗号隔开--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateBlog"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">    update blog</span><br><span class="line">      <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">              title = #&#123;title&#125;,</span><br><span class="line">          <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">              author = #&#123;author&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id = #&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态set测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    BlogMapper mapper = session.getMapper(BlogMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">    map.put(<span class="string">"title"</span>,<span class="string">"动态SQL"</span>);</span><br><span class="line">    map.put(<span class="string">"author"</span>,<span class="string">"Zhuuu"</span>);</span><br><span class="line">    map.put(<span class="string">"id"</span>,<span class="string">"f279c70cf48d4b55a62d663610d9d541"</span>);<span class="comment">//这里的uuid要根据自己的数据库id来取</span></span><br><span class="line"></span><br><span class="line">    mapper.updateBlog(map);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态-choose"><a href="#动态-choose" class="headerlink" title="动态-choose"></a>动态-choose</h2><ul><li>有时候，我们不想用到所有的查询条件，只想选择其中的一个，查询条件有一个满足即可，使用 choose 标签可以解决此类问题，类似于 Java 的 switch 语句</li></ul><ol><li>编写接口方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;Blog&gt; <span class="title">queryBlogChoose</span><span class="params">(Map map)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>sql配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryBlogChoose"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"blog"</span>&gt;</span></span><br><span class="line">    select * from blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">                 title = #&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">                and author = #&#123;author&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                and views = #&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryBlogChoose</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    BlogMapper mapper = session.getMapper(BlogMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">"title"</span>,<span class="string">"Java如此简单"</span>);</span><br><span class="line">    map.put(<span class="string">"author"</span>,<span class="string">"Zhuuu"</span>);</span><br><span class="line">    map.put(<span class="string">"views"</span>,<span class="number">9999</span>);</span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogChoose(map);</span><br><span class="line"></span><br><span class="line">    System.out.println(blogs);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回的结果:只要满足第一个，后面的就不会在查了</span></span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection <span class="number">843467284</span>.</span><br><span class="line">==&gt;  Preparing: select * from blog WHERE title = ? </span><br><span class="line">==&gt; Parameters: Java如此简单(String)</span><br><span class="line">&lt;==    Columns: id, title, author, create_time, views</span><br><span class="line">&lt;==        Row: <span class="number">78739</span>c74d1c04075b898648e8dba74e7, Java如此简单, Zhuuu, <span class="number">2020</span>-<span class="number">02</span>-<span class="number">17</span> <span class="number">17</span>:<span class="number">51</span>:<span class="number">03.0</span>, <span class="number">1000</span></span><br><span class="line">&lt;==      Total: <span class="number">1</span></span><br><span class="line">[Blog(id=<span class="number">78739</span>c74d1c04075b898648e8dba74e7, title=Java如此简单, author=Zhuuu, createTime=Mon Feb <span class="number">17</span> <span class="number">17</span>:<span class="number">51</span>:<span class="number">03</span> CST <span class="number">2020</span>, views=<span class="number">1000</span>)]</span><br><span class="line">Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@<span class="number">32464</span>a14]</span><br><span class="line">Returned connection <span class="number">843467284</span> to pool.</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="提取sql片段"><a href="#提取sql片段" class="headerlink" title="提取sql片段"></a>提取sql片段</h2><ul><li>有时候可能某个 sql 语句我们用的特别多，为了增加代码的重用性，简化代码，我们需要将这些代码抽取出来，然后使用时直接调用。</li><li>说白了就是代码的复用</li></ul><ol><li>提取sql片段</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"if-title-author"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">        title = #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null"</span>&gt;</span></span><br><span class="line">        and author = #&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>引用sql片段</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryBlogIf"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"blog"</span>&gt;</span></span><br><span class="line">    select * from blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引用 sql 片段，如果refid 指定的不在本文件中，那么需要在前面加上 namespace --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"if-title-author"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 在这里还可以引用其他的 sql 片段 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>①、最好基于 单表来定义 sql 片段，提高片段的可重用性<br>②、在 sql 片段中不要包括 where</p><h2 id="动态-foreach"><a href="#动态-foreach" class="headerlink" title="动态-foreach"></a>动态-foreach</h2><p>将数据库中前三个数据的id修改为1,2,3；</p><p>需求：我们需要查询 blog 表中 id 分别为1,2,3的博客信息</p><ol><li>编写结口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;Blog&gt; <span class="title">queryBlogForeach</span><span class="params">(Map map)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写sql语句</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryBlogForeach"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"blog"</span>&gt;</span></span><br><span class="line">    select * from blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        collection:指定输入对象中的集合属性</span></span><br><span class="line"><span class="comment">        item:每次遍历生成的对象</span></span><br><span class="line"><span class="comment">        open:开始遍历时的拼接字符串</span></span><br><span class="line"><span class="comment">        close:结束时拼接的字符串</span></span><br><span class="line"><span class="comment">        separator:遍历对象之间需要拼接的字符串</span></span><br><span class="line"><span class="comment">        select * from blog where 1=1 and (id=1 or id=2 or id=3)</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span>  <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">open</span>=<span class="string">"and ("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">separator</span>=<span class="string">"or"</span>&gt;</span></span><br><span class="line">            id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryBlogForeach</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    BlogMapper mapper = session.getMapper(BlogMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    HashMap map = <span class="keyword">new</span> HashMap();</span><br><span class="line">    List&lt;Integer&gt; ids = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    ids.add(<span class="number">1</span>);</span><br><span class="line">    ids.add(<span class="number">2</span>);</span><br><span class="line">    ids.add(<span class="number">3</span>);</span><br><span class="line">    map.put(<span class="string">"ids"</span>,ids);</span><br><span class="line"></span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogForeach(map);</span><br><span class="line"></span><br><span class="line">    System.out.println(blogs);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下：(查出前三条记录)</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 1904324159.</span><br><span class="line">==&gt;  Preparing: select * from blog WHERE ( id = ? or id = ? or id = ? ) </span><br><span class="line">==&gt; Parameters: 1(Integer), 2(Integer), 3(Integer)</span><br><span class="line">&lt;==    Columns: id, title, author, create_time, views</span><br><span class="line">&lt;==        Row: 1, Mybatis如此简单, Zhuuu, 2020-02-17 17:51:03.0, 9999</span><br><span class="line">&lt;==        Row: 2, Java如此简单, Zhuuu, 2020-02-17 17:51:03.0, 1000</span><br><span class="line">&lt;==        Row: 3, Spring如此简单, Zhuuu, 2020-02-17 17:51:03.0, 9999</span><br><span class="line">&lt;==      Total: 3</span><br><span class="line">[Blog(id=1, title=Mybatis如此简单, author=Zhuuu, createTime=Mon Feb 17 17:51:03 CST 2020, views=9999), Blog(id=2, title=Java如此简单, author=Zhuuu, createTime=Mon Feb 17 17:51:03 CST 2020, views=1000), Blog(id=3, title=Spring如此简单, author=Zhuuu, createTime=Mon Feb 17 17:51:03 CST 2020, views=9999)]</span><br><span class="line">Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@7181ae3f]</span><br><span class="line">Returned connection 1904324159 to pool.</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li>动态sql语句的编写往往就是一个拼接的问题</li><li>为了保证拼接准确，首先我们需要把原生的sql语句写出来，然后再通过mybatis动态sql对照着改</li><li>要多实践才能掌握技巧</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-动态SQL&quot;&gt;&lt;a href=&quot;#MyBatis-动态SQL&quot; class=&quot;headerlink&quot; title=&quot;MyBatis 动态SQL&quot;&gt;&lt;/a&gt;MyBatis 动态SQL&lt;/h1&gt;&lt;p&gt;动态SQL 官方文档：&lt;a href=&quot;https://mybatis.org/mybatis-3/zh/dynamic-sql.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;什么是动态SQL:就是根据不同的查询条件，自动生成不同的Sql语句&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;官网描述：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MyBatis 的强大特性之一便是它的动态 SQL。如果你有使用 JDBC 或其它类似框架的经验，你就能体会到根据不同条件拼接 SQL 语句的痛苦。例如拼接时要确保不能忘记添加必要的空格，还要注意去掉列表最后一个列名的逗号。利用动态 SQL 这一特性可以彻底摆脱这种痛苦。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    虽然在以前使用动态 SQL 并非一件易事，但正是 MyBatis 提供了可以被用在任意 SQL 映射语句中的强大的动态 SQL 语言得以改进这种情形。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    动态 SQL 元素和 JSTL 或基于类似 XML 的文本处理器相似。在 MyBatis 之前的版本中，有很多元素需要花时间了解。MyBatis 3 大大精简了元素种类，现在只需学习原来一半的元素便可。MyBatis 采用功能强大的基于 OGNL 的表达式来淘汰其它大部分元素。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - choose (when, otherwise)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - trim (where, set)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - foreach&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -------------------------------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-多对一,一对多处理</title>
    <link href="http://zhuuu.work/2020/01/15/Mybatis/MyBatis-%E5%A4%9A%E5%AF%B9%E4%B8%80,%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%A4%84%E7%90%86/"/>
    <id>http://zhuuu.work/2020/01/15/Mybatis/MyBatis-%E5%A4%9A%E5%AF%B9%E4%B8%80,%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%A4%84%E7%90%86/</id>
    <published>2020-01-15T03:12:22.000Z</published>
    <updated>2020-02-17T07:39:43.556Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-多对一-一对多处理"><a href="#MyBatis-多对一-一对多处理" class="headerlink" title="MyBatis 多对一,一对多处理"></a>MyBatis 多对一,一对多处理</h1><h2 id="多对一的处理"><a href="#多对一的处理" class="headerlink" title="多对一的处理"></a>多对一的处理</h2><p>多对一的理解：</p><ul><li>多个学生对应一个老师</li><li>如果对于学生这边，就是一个多对一的理解</li><li>也就是从学生这边关联了一个老师</li></ul><a id="more"></a><p><strong>数据库设计（环境搭建）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">USE mybatis;</span><br><span class="line">CREATE TABLE &#96;teacher&#96; (</span><br><span class="line">  &#96;id&#96; INT(10) NOT NULL,</span><br><span class="line">  &#96;name&#96; VARCHAR(30) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8</span><br><span class="line"></span><br><span class="line">INSERT INTO teacher(&#96;id&#96;, &#96;name&#96;) VALUES (1, &#39;朱老师&#39;); </span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;student&#96; (</span><br><span class="line">  &#96;id&#96; INT(10) NOT NULL,</span><br><span class="line">  &#96;name&#96; VARCHAR(30) DEFAULT NULL,</span><br><span class="line">  &#96;tid&#96; INT(10) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">  KEY &#96;fktid&#96; (&#96;tid&#96;),</span><br><span class="line">  CONSTRAINT &#96;fktid&#96; FOREIGN KEY (&#96;tid&#96;) REFERENCES &#96;teacher&#96; (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;1&#39;, &#39;小明&#39;, &#39;1&#39;); </span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;2&#39;, &#39;小红&#39;, &#39;1&#39;); </span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;3&#39;, &#39;小张&#39;, &#39;1&#39;); </span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;4&#39;, &#39;小李&#39;, &#39;1&#39;); </span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;5&#39;, &#39;小王&#39;, &#39;1&#39;);</span><br></pre></td></tr></table></figure><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217115725.png" alt=""></p><h3 id="搭建测试环境"><a href="#搭建测试环境" class="headerlink" title="搭建测试环境"></a>搭建测试环境</h3><h3 id="Lombok的使用"><a href="#Lombok的使用" class="headerlink" title="Lombok的使用"></a>Lombok的使用</h3><ol><li>IDEA安装Lombok插件【在Plugins中安装】</li><li>引入maven依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在代码中增加注解(@Data)</li></ol><p>使用@Data前后对比</p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217144634.png" alt=""></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217144741.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span> <span class="comment">//GET,SET,ToString，有参，无参构造</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//多个学生可以是同一个老师，即多对一</span></span><br><span class="line">    <span class="keyword">private</span> Teacher teacher;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>编写实体类对应的Mapper接口【两个】</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentMapper</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TeacherMapper</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>编写Mapper接口对应的mapper.xml配置文件【两个】</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zhuuu.dao.TeacherMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zhuuu.dao.StudentMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="按照查询嵌套处理"><a href="#按照查询嵌套处理" class="headerlink" title="按照查询嵌套处理"></a>按照查询嵌套处理</h4><ol><li>给StudentMapper接口增加方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有学生及对应老师的信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getStudents</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写对应的Mapper文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zhuuu.mapper.StudentMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    需求：获取所有学生及对应老师的信息</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1. 获取所有学生的信息</span></span><br><span class="line"><span class="comment">        2. 根据获取的学生信息的老师ID-&gt;获取该老师的信息</span></span><br><span class="line"><span class="comment">        3. 思考问题，这样学生的结果集中应该包含老师，该如何处理呢，数据库中我们一般使用关联查询？</span></span><br><span class="line"><span class="comment">            1. 做一个结果集映射：StudentTeacher</span></span><br><span class="line"><span class="comment">            2. StudentTeacher结果集的类型为 Student</span></span><br><span class="line"><span class="comment">            3. 学生中老师的属性为teacher，对应数据库中为tid。</span></span><br><span class="line"><span class="comment">               多个 [1,...）学生关联一个老师=&gt; 一对一，一对多</span></span><br><span class="line"><span class="comment">            4. 查看官网找到：association – 一个复杂类型的关联；使用它来处理关联查询</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getStudents"</span> <span class="attr">resultMap</span>=<span class="string">"StudentTeacher"</span>&gt;</span></span><br><span class="line">      select * from student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"StudentTeacher"</span> <span class="attr">type</span>=<span class="string">"Student"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"teacher"</span>  <span class="attr">column</span>=<span class="string">"tid"</span> <span class="attr">javaType</span>=<span class="string">"Teacher"</span> <span class="attr">select</span>=<span class="string">"getTeacher"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    这里传递过来的id，只有一个属性的时候，下面可以写任何值</span></span><br><span class="line"><span class="comment">    association中column多参数配置：</span></span><br><span class="line"><span class="comment">        column="&#123;key=value,key=value&#125;"</span></span><br><span class="line"><span class="comment">        其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getTeacher"</span> <span class="attr">resultType</span>=<span class="string">"teacher"</span>&gt;</span></span><br><span class="line">        select * from teacher where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>在配置文件中 ，注册Mapper</p></li><li><p>注意点说明</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"StudentTeacher"</span> <span class="attr">type</span>=<span class="string">"Student"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--association关联属性  property属性名 javaType属性类型 column在多的一方的表中的列名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"teacher"</span>  <span class="attr">column</span>=<span class="string">"&#123;id=tid,name=tid&#125;"</span> <span class="attr">javaType</span>=<span class="string">"Teacher"</span> <span class="attr">select</span>=<span class="string">"getTeacher"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">这里传递过来的id，只有一个属性的时候，下面可以写任何值</span></span><br><span class="line"><span class="comment">association中column多参数配置：</span></span><br><span class="line"><span class="comment">    column="&#123;key=value,key=value&#125;"</span></span><br><span class="line"><span class="comment">    其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getTeacher"</span> <span class="attr">resultType</span>=<span class="string">"teacher"</span>&gt;</span></span><br><span class="line">    select * from teacher where id = #&#123;id&#125; and name = #&#123;name&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetStudents</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    StudentMapper mapper = session.getMapper(StudentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Student&gt; students = mapper.getStudents();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Student student : students)&#123;</span><br><span class="line">        System.out.println(</span><br><span class="line">                <span class="string">"学生名:"</span>+ student.getName()</span><br><span class="line">                        +<span class="string">"\t老师:"</span>+student.getTeacher().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="按照结果嵌套处理"><a href="#按照结果嵌套处理" class="headerlink" title="按照结果嵌套处理"></a>按照结果嵌套处理</h4><ol><li>编写接口方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getStudents2</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写对应的Mapper文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">按查询结果嵌套处理</span></span><br><span class="line"><span class="comment">思路：</span></span><br><span class="line"><span class="comment">    1. 直接查询出结果，进行结果集的映射</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getStudents2"</span> <span class="attr">resultMap</span>=<span class="string">"StudentTeacher2"</span> &gt;</span></span><br><span class="line">    select s.id sid, s.name sname , t.name tname</span><br><span class="line">    from student s,teacher t</span><br><span class="line">    where s.tid = t.id</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"StudentTeacher2"</span> <span class="attr">type</span>=<span class="string">"Student"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"sid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"sname"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--关联对象property 关联对象在Student实体类中的属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"teacher"</span> <span class="attr">javaType</span>=<span class="string">"Teacher"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"tname"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>去mabits-config文件中注入</p></li><li><p>测试</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetStudents2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    StudentMapper mapper = session.getMapper(StudentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Student&gt; students = mapper.getStudents2();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Student student : students)&#123;</span><br><span class="line">        System.out.println(</span><br><span class="line">                <span class="string">"学生名:"</span>+ student.getName()</span><br><span class="line">                        +<span class="string">"\t老师:"</span>+student.getTeacher().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul><li>按照查询进行嵌套就像SQL中的子查询</li><li>按照结果进行嵌套就想SQL中的联表查询</li></ul><h2 id="一对多处理"><a href="#一对多处理" class="headerlink" title="一对多处理"></a>一对多处理</h2><p>一对多的理解：</p><ul><li>一个老师拥有多个学生</li><li>对于老师这边，就是一个一个一对多的现象，即从一个老师下面拥有一群学生（集合）</li><li>collection集合</li></ul><h3 id="搭建测试环境-1"><a href="#搭建测试环境-1" class="headerlink" title="搭建测试环境"></a>搭建测试环境</h3><p>实体类的编写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//一个老师多个学生</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="按照结果嵌套处理-1"><a href="#按照结果嵌套处理-1" class="headerlink" title="按照结果嵌套处理"></a>按照结果嵌套处理</h4><ol><li>TeacherMapper接口编写方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取指定老师，及老师下的所有学生</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Teacher <span class="title">getTeacher</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写Mapper配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zhuuu.dao.TeacherMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--思路：</span></span><br><span class="line"><span class="comment">    1.从学生表和老师表中查出学生id,学生姓名，老师姓名</span></span><br><span class="line"><span class="comment">    2.从查询出来的结果上做结果集映射</span></span><br><span class="line"><span class="comment">      1.集合的话，使用collection</span></span><br><span class="line"><span class="comment">      2.javaType和ofType都是用来指定对象类型的</span></span><br><span class="line"><span class="comment">      3.JavaType是用来指定pojo中属性的类型</span></span><br><span class="line"><span class="comment">      4.oftype是用来以后能干涉到list集合属性中pojo的类型--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getTeacher"</span> <span class="attr">resultMap</span>=<span class="string">"TeacherStudent"</span>&gt;</span></span><br><span class="line">        select s.id sid, s.name sname,t.name tname,t.id tid</span><br><span class="line">        from student s,teacher t</span><br><span class="line">        where s.tid = t.id and t.id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"TeacherStudent"</span> <span class="attr">type</span>=<span class="string">"Teacher"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"tname"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"students"</span> <span class="attr">ofType</span>=<span class="string">"Student"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"sid"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"sname"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"tid"</span> <span class="attr">column</span>=<span class="string">"tid"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将Mapper文件注册到MyBatis-config文件中</li><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetTeacher</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    TeacherMapper mapper = session.getMapper(TeacherMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    Teacher teacher = mapper.getTeacher(<span class="number">1</span>);</span><br><span class="line">    System.out.println(teacher.getName());</span><br><span class="line">    System.out.println(teacher.getStudents());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="按照嵌套处理"><a href="#按照嵌套处理" class="headerlink" title="按照嵌套处理"></a>按照嵌套处理</h4><ol><li>TeacherMapper接口编写方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Teacher <span class="title">getTeacher2</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写接口对应的Mapper配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getTeacher2"</span> <span class="attr">resultMap</span>=<span class="string">"TeacherStudent2"</span>&gt;</span></span><br><span class="line">  select * from teacher where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"TeacherStudent2"</span> <span class="attr">type</span>=<span class="string">"Teacher"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--column是一对多的外键 , 写的是一的主键的列名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"students"</span> <span class="attr">javaType</span>=<span class="string">"ArrayList"</span> <span class="attr">ofType</span>=<span class="string">"Student"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"getStudentByTeacherId"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getStudentByTeacherId"</span> <span class="attr">resultType</span>=<span class="string">"Student"</span>&gt;</span></span><br><span class="line">    select * from student where tid = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>将Mapper文件注册到MyBatis-config文件中</p></li><li><p>测试</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetTeacher2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    TeacherMapper mapper = session.getMapper(TeacherMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    Teacher teacher = mapper.getTeacher2(<span class="number">1</span>);</span><br><span class="line">    System.out.println(teacher.getName());</span><br><span class="line">    System.out.println(teacher.getStudents());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><ul><li>关联-associtaion</li><li>集合-collection</li><li>association是用于一对一和多对一</li><li>collection是用于一对多的关系</li></ul><ul><li>JavaType和ofType都是用来指定对象类型的<ul><li>JavaType是用来指定pojo中的类型    （说白了就是返回的类名）</li><li>ofType到指定的是映射到list集合属性中pojo的类型  （说白了就是泛型）</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-多对一-一对多处理&quot;&gt;&lt;a href=&quot;#MyBatis-多对一-一对多处理&quot; class=&quot;headerlink&quot; title=&quot;MyBatis 多对一,一对多处理&quot;&gt;&lt;/a&gt;MyBatis 多对一,一对多处理&lt;/h1&gt;&lt;h2 id=&quot;多对一的处理&quot;&gt;&lt;a href=&quot;#多对一的处理&quot; class=&quot;headerlink&quot; title=&quot;多对一的处理&quot;&gt;&lt;/a&gt;多对一的处理&lt;/h2&gt;&lt;p&gt;多对一的理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多个学生对应一个老师&lt;/li&gt;
&lt;li&gt;如果对于学生这边，就是一个多对一的理解&lt;/li&gt;
&lt;li&gt;也就是从学生这边关联了一个老师&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-生命周期和作用域</title>
    <link href="http://zhuuu.work/2020/01/15/Mybatis/MyBatis-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://zhuuu.work/2020/01/15/Mybatis/MyBatis-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F/</id>
    <published>2020-01-15T03:12:22.000Z</published>
    <updated>2020-02-13T03:24:28.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-生命周期和作用域"><a href="#MyBatis-生命周期和作用域" class="headerlink" title="MyBatis 生命周期和作用域"></a>MyBatis 生命周期和作用域</h1><h2 id="作用域（Scope）和生命周期"><a href="#作用域（Scope）和生命周期" class="headerlink" title="作用域（Scope）和生命周期"></a><strong>作用域（Scope）和生命周期</strong></h2><ul><li><p>理解我们目前已经讨论过的不同作用域和生命周期类是至关重要的，因为错误的使用会导致非常严重的并发问题。</p></li><li><p>画一个流程图，分析一下Mybatis的执行过程！</p></li></ul><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200213111632.png" alt=""></p><p><a href="https://mybatis.org/mybatis-3/zh/getting-started.html" target="_blank" rel="noopener">官方说明</a></p><a id="more"></a><h3 id="SqlSessionFactoryBuilder"><a href="#SqlSessionFactoryBuilder" class="headerlink" title="SqlSessionFactoryBuilder"></a>SqlSessionFactoryBuilder</h3><ul><li>这个类可以被实例化、使用和丢弃，一旦创建了 SqlSessionFactory，就不再需要它了。</li><li>局部方法变量</li></ul><h3 id="SqlSessionFactory"><a href="#SqlSessionFactory" class="headerlink" title="SqlSessionFactory"></a>SqlSessionFactory</h3><ul><li><p>SqlSessionFactory 可以被认为是一个数据库连接池，它的作用是创建 SqlSession 接口对象。</p></li><li><p>因为 MyBatis 的本质就是 Java 对数据库的操作，所以 SqlSessionFactory 的生命周期存在于整个 MyBatis 的应用之中，所以一旦创建了 SqlSessionFactory，就要长期保存它，直至不再使用 MyBatis 应用</p></li><li><p>因此 SqlSessionFactory 的最佳作用域是应用作用域</p></li><li><p>最简单的就是使用单例模式或者静态单例模式。</p></li></ul><h3 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h3><ul><li><p>连接到连接池的一个请求！</p></li><li><p>它的最佳的作用域是请求或方法作用域。</p></li><li><p>如果你现在正在使用一种 Web 框架，要考虑 SqlSession 放在一个和 HTTP 请求对象相似的作用域中。 换句话说，每次收到的 HTTP 请求，就可以打开一个 SqlSession，返回一个响应，就关闭它。 这个关闭操作是很重要的。</p></li></ul><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200213112344.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-生命周期和作用域&quot;&gt;&lt;a href=&quot;#MyBatis-生命周期和作用域&quot; class=&quot;headerlink&quot; title=&quot;MyBatis 生命周期和作用域&quot;&gt;&lt;/a&gt;MyBatis 生命周期和作用域&lt;/h1&gt;&lt;h2 id=&quot;作用域（Scope）和生命周期&quot;&gt;&lt;a href=&quot;#作用域（Scope）和生命周期&quot; class=&quot;headerlink&quot; title=&quot;作用域（Scope）和生命周期&quot;&gt;&lt;/a&gt;&lt;strong&gt;作用域（Scope）和生命周期&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;理解我们目前已经讨论过的不同作用域和生命周期类是至关重要的，因为错误的使用会导致非常严重的并发问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;画一个流程图，分析一下Mybatis的执行过程！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200213111632.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mybatis.org/mybatis-3/zh/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方说明&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 函数和编程</title>
    <link href="http://zhuuu.work/2020/01/14/Mysql/Mysql%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B/"/>
    <id>http://zhuuu.work/2020/01/14/Mysql/Mysql%E5%87%BD%E6%95%B0%E5%92%8C%E7%BC%96%E7%A8%8B/</id>
    <published>2020-01-14T08:02:27.000Z</published>
    <updated>2020-02-17T01:45:34.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql-函数和编程"><a href="#Mysql-函数和编程" class="headerlink" title="Mysql 函数和编程"></a>Mysql 函数和编程</h1><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/func-op-summary-ref.html" target="_blank" rel="noopener">官网文档</a></p><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 数学函数 (这里只列出一些常用的)</span><br><span class="line"></span><br><span class="line">SELECT ABS(-8);  &#x2F;*绝对值*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT CEILING(9.4);  &#x2F;*向上取整*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT FLOOR(9.4);  &#x2F;*向下取整*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT RAND();  &#x2F;*随机数,返回一个0-1之间的随机数*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT SIGN(0); &#x2F;*符号函数: 负数返回-1,正数返回1,0返回0*&#x2F;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#字符串函数</span><br><span class="line"></span><br><span class="line">SELECT CHAR_LENGTH(&#39;狂神说坚持就能成功&#39;); &#x2F;*返回字符串包含的字符数*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT CONCAT(&#39;我&#39;,&#39;爱&#39;,&#39;程序&#39;);  &#x2F;*合并字符串,参数可以有多个*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT INSERT(&#39;我爱编程helloworld&#39;,1,2,&#39;超级热爱&#39;);  &#x2F;*替换字符串,从某个位置开始替换某个长度*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT LOWER(&#39;KuangShen&#39;); &#x2F;*小写*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT UPPER(&#39;KuangShen&#39;); &#x2F;*大写*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT LEFT(&#39;hello,world&#39;,5);  &#x2F;*从左边截取*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT RIGHT(&#39;hello,world&#39;,5);  &#x2F;*从右边截取*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT REPLACE(&#39;坚持就能成功&#39;,&#39;坚持&#39;,&#39;努力&#39;);  &#x2F;*替换字符串*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT SUBSTR(&#39;坚持就能成功&#39;,0,4); &#x2F;*截取字符串,开始和长度*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT REVERSE(&#39;坚持就能成功&#39;); &#x2F;*反转*&#x2F;</span><br></pre></td></tr></table></figure><h3 id="日期和时间函数"><a href="#日期和时间函数" class="headerlink" title="日期和时间函数"></a>日期和时间函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#日期和时间函数</span><br><span class="line"></span><br><span class="line">SELECT CURRENT_DATE();   &#x2F;*获取当前日期*&#x2F;</span><br><span class="line">SELECT CURDATE();   &#x2F;*获取当前日期*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT NOW();   &#x2F;*获取当前日期和时间*&#x2F;</span><br><span class="line">SELECT LOCALTIME();   &#x2F;*获取当前日期和时间*&#x2F;</span><br><span class="line">SELECT SYSDATE();   &#x2F;*获取当前日期和时间*&#x2F;</span><br><span class="line"></span><br><span class="line">&#x2F;*获取年月日,时分秒*&#x2F;</span><br><span class="line">SELECT YEAR(NOW());</span><br><span class="line">SELECT MONTH(NOW());</span><br><span class="line">SELECT DAY(NOW());</span><br><span class="line">SELECT HOUR(NOW());</span><br><span class="line">SELECT MINUTE(NOW());</span><br><span class="line">SELECT SECOND(NOW());</span><br></pre></td></tr></table></figure><h3 id="系统和版本信息"><a href="#系统和版本信息" class="headerlink" title="系统和版本信息"></a>系统和版本信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#系统信息函数</span><br><span class="line">SELECT VERSION();  &#x2F;*版本*&#x2F;</span><br><span class="line">SELECT USER();  &#x2F;*用户*&#x2F;</span><br></pre></td></tr></table></figure><h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217091844.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#聚合函数</span><br><span class="line"></span><br><span class="line">&#x2F;*COUNT:非空的*&#x2F;</span><br><span class="line">SELECT COUNT(studentname) FROM student; #指定列会忽略所有的null值</span><br><span class="line">SELECT COUNT(*) FROM student; #不会忽略null值</span><br><span class="line">SELECT COUNT(1) FROM student;  &#x2F;*推荐*&#x2F; #不会忽略null值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT SUM(StudentResult) AS 总和 FROM result;</span><br><span class="line">SELECT AVG(StudentResult) AS 平均分 FROM result;</span><br><span class="line">SELECT MAX(StudentResult) AS 最高分 FROM result;</span><br><span class="line">SELECT MIN(StudentResult) AS 最低分 FROM result;</span><br></pre></td></tr></table></figure><p>练习题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 查询不同课程的平均分,最高分,最低分</span><br><span class="line"># 前提:根据不同的课程进行分组</span><br><span class="line"></span><br><span class="line">SELECT subjectname,AVG(studentresult) AS 平均分,MAX(StudentResult) AS 最高分,MIN(StudentResult) AS 最低分</span><br><span class="line">FROM result AS r</span><br><span class="line">INNER JOIN &#96;subject&#96; AS s</span><br><span class="line">ON r.subjectno &#x3D; s.subjectno</span><br><span class="line">GROUP BY r.subjectno</span><br><span class="line">HAVING 平均分&gt;80;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">where写在group by前面.</span><br><span class="line">要是放在分组后面的筛选</span><br><span class="line">要使用HAVING..</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mysql-函数和编程&quot;&gt;&lt;a href=&quot;#Mysql-函数和编程&quot; class=&quot;headerlink&quot; title=&quot;Mysql 函数和编程&quot;&gt;&lt;/a&gt;Mysql 函数和编程&lt;/h1&gt;&lt;h2 id=&quot;官方文档&quot;&gt;&lt;a href=&quot;#官方文档&quot; class=&quot;headerlink&quot; title=&quot;官方文档&quot;&gt;&lt;/a&gt;官方文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/func-op-summary-ref.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;常用函数&quot;&gt;&lt;a href=&quot;#常用函数&quot; class=&quot;headerlink&quot; title=&quot;常用函数&quot;&gt;&lt;/a&gt;常用函数&lt;/h2&gt;&lt;h3 id=&quot;数学函数&quot;&gt;&lt;a href=&quot;#数学函数&quot; class=&quot;headerlink&quot; title=&quot;数学函数&quot;&gt;&lt;/a&gt;数学函数&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 数学函数 (这里只列出一些常用的)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT ABS(-8);  &amp;#x2F;*绝对值*&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT CEILING(9.4);  &amp;#x2F;*向上取整*&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT FLOOR(9.4);  &amp;#x2F;*向下取整*&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT RAND();  &amp;#x2F;*随机数,返回一个0-1之间的随机数*&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SELECT SIGN(0); &amp;#x2F;*符号函数: 负数返回-1,正数返回1,0返回0*&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Mysql" scheme="http://zhuuu.work/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-配置解析</title>
    <link href="http://zhuuu.work/2020/01/13/Mybatis/MyBatis-%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90/"/>
    <id>http://zhuuu.work/2020/01/13/Mybatis/MyBatis-%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90/</id>
    <published>2020-01-13T01:50:25.000Z</published>
    <updated>2020-02-13T03:12:58.657Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-配置解析"><a href="#MyBatis-配置解析" class="headerlink" title="MyBatis 配置解析"></a>MyBatis 配置解析</h1><h2 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h2><ul><li>mybatis-config.xml 系统核心配置文件</li><li>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息</li><li>能配置的内容如下：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">configuration（配置）</span><br><span class="line">    properties（属性）</span><br><span class="line">    settings（设置）</span><br><span class="line">    typeAliases（类型别名）</span><br><span class="line">    typeHandlers（类型处理器）</span><br><span class="line">    objectFactory（对象工厂）</span><br><span class="line">    plugins（插件）</span><br><span class="line">    environments（环境配置）</span><br><span class="line">        environment（环境变量）</span><br><span class="line">            transactionManager（事务管理器）</span><br><span class="line">            dataSource（数据源）</span><br><span class="line">    databaseIdProvider（数据库厂商标识）</span><br><span class="line">    mappers（映射器）</span><br><span class="line"><span class="comment">&lt;!-- 注意元素节点的顺序！顺序不对会报错 --&gt;</span></span><br></pre></td></tr></table></figure><p>可以阅读 mybatis-config.xml 上面的dtd的头文件！</p><a id="more"></a><h2 id="1-environments元素"><a href="#1-environments元素" class="headerlink" title="1. environments元素"></a>1. environments元素</h2><ul><li><p>MyBatis 可以配置成适应多种环境，这种机制有助于将 SQL 映射应用于多种数据库之中</p></li><li><p><strong>不过要记住：尽管可以配置多个环境，但每个 SqlSessionFactory 实例只能选择一种环境。</strong></p></li><li><p>配置MyBatis的多套运行环境，将SQL映射到多个不同的数据库上，必须指定其中一个为默认运行环境（通过default指定）</p></li></ul><p>标准定义如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"..."</span> <span class="attr">value</span>=<span class="string">"..."</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="子元素节点-事物管理器（transactionManager）"><a href="#子元素节点-事物管理器（transactionManager）" class="headerlink" title="子元素节点 事物管理器（transactionManager）"></a>子元素节点 事物管理器（transactionManager）</h3><p>在 MyBatis 中有两种类型的事务管理器（也就是 type=”[JDBC|MANAGED]”）：</p><ul><li>JDBC – 这个配置就是直接使用了 JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。</li><li>MANAGED – 这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。 默认情况下它会关闭连接，然而一些容器并不希望这样，因此需要将 closeConnection 属性设置为 false 来阻止它默认的关闭行为。例如:</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"MANAGED"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"closeConnection"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    <strong>提示</strong>: 如果你正在使用 Spring + MyBatis，则没有必要配置事务管理器， 因为 Spring 模块会使用自带的管理器来覆盖前面的配置。</p><ul><li>详情：<a href="http://www.mybatis.org/mybatis-3/zh/configuration.html#environments" target="_blank" rel="noopener">点击查看官方文档</a></li></ul><h3 id="子元素节点-数据源（dataSource）"><a href="#子元素节点-数据源（dataSource）" class="headerlink" title="子元素节点 数据源（dataSource）"></a>子元素节点 <strong>数据源（dataSource）</strong></h3><ul><li><p>作用：连接数据库 –&gt;dataSource 元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象的资源。</p></li><li><p>有三种内建的数据源类型       <strong>type=”[UNPOOLED|POOLED|JNDI]”）</strong></p><ol><li><strong>UNPOOLED</strong>– 这个数据源的实现只是每次被请求时打开和关闭连接。虽然有点慢，但对于在数据库连接可用性方面没有太高要求的简单应用程序来说，是一个很好的选择。 不同的数据库在性能方面的表现也是不一样的，对于某些数据库来说，使用连接池并不重要，这个配置就很适合这种情形。UNPOOLED 类型的数据源具有以下属性。</li><li><strong>POOLED</strong>– 这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来，避免了创建新的连接实例时所必需的初始化和认证时间。 这是一种使得并发 Web 应用快速响应请求的流行处理方式。<strong>(默认的)</strong></li><li><strong>JNDI</strong> – 这个数据源的实现是为了能在如 EJB 或应用服务器这类容器中使用，容器可以集中或在外部配置数据源，然后放置一个 JNDI 上下文的引用。这种数据源配置只需要两个属性：</li></ol></li><li><p>数据源也有很多第三方的实现，比如dbcp，c3p0，druid等等….</p></li></ul><h2 id="2-Properties优化"><a href="#2-Properties优化" class="headerlink" title="2.Properties优化"></a>2.Properties优化</h2><p><a href="http://www.mybatis.org/mybatis-3/zh/configuration.html#properties" target="_blank" rel="noopener">官方文档链接</a></p><ul><li>这些属性都是可外部配置且可动态替换的，既可以在典型的 Java 属性文件中配置，亦可通过 properties 元素的子元素来传递</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/example/config.properties"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"dev_user"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"F2Fa3!33TYyg"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如何优化：</p><ol><li>第一步 ; 在资源目录下新建一个db.properties</li></ol><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><ol start="2"><li>第二步 : 将文件properties导入到mybatisconfig.xml 配置文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入properties文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"db.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"mapper/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意问题：</p><ul><li>配置文件优先级问题    【properties优先级高】</li><li>新特性：使用占位符</li></ul><h2 id="3-typeAliases优化"><a href="#3-typeAliases优化" class="headerlink" title="3. typeAliases优化"></a>3. typeAliases优化</h2><ul><li>作用：类型别名是为 Java 类型设置一个短的名字。它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--方式一：--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置别名,注意顺序--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"Author"</span> <span class="attr">type</span>=<span class="string">"domain.blog.Author"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"Blog"</span> <span class="attr">type</span>=<span class="string">"domain.blog.Blog"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"Comment"</span> <span class="attr">type</span>=<span class="string">"domain.blog.Comment"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"Post"</span> <span class="attr">type</span>=<span class="string">"domain.blog.Post"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"Section"</span> <span class="attr">type</span>=<span class="string">"domain.blog.Section"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"Tag"</span> <span class="attr">type</span>=<span class="string">"domain.blog.Tag"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--方式二：--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置别名,注意顺序--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"domain.blog"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>每一个在包 <code>domain.blog</code> 中的 Java Bean</li><li>在没有注解的情况下，会使用 Bean 的<strong>首字母小写</strong>的非限定类名来作为它的别名。</li><li>比如 <code>domain.blog.Author</code> 的别名为<code>author</code>；</li><li>若有注解，则别名为其注解值。见下面的例子：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注解指定别名</span></span><br><span class="line"><span class="meta">@Alias</span>(<span class="string">"author"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Author</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-设置（settings）"><a href="#4-设置（settings）" class="headerlink" title="4. 设置（settings）"></a>4. 设置（settings）</h2><p><a href="http://www.mybatis.org/mybatis-3/zh/configuration.html#settings" target="_blank" rel="noopener">设置（settings）</a></p><p><strong>这是 MyBatis 中极为重要的调整设置，它们会改变 MyBatis 的运行时行为。</strong></p><ul><li>懒加载  （lazyLoadingEnabled）</li><li>日志实现  （logImpl）</li><li>缓存开启关闭 （cacheEnabled）</li></ul><p><strong>一个配置完整的 settings 元素的示例如下：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"multipleResultSetsEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"useColumnLabel"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"useGeneratedKeys"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"autoMappingBehavior"</span> <span class="attr">value</span>=<span class="string">"PARTIAL"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"autoMappingUnknownColumnBehavior"</span> <span class="attr">value</span>=<span class="string">"WARNING"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"defaultExecutorType"</span> <span class="attr">value</span>=<span class="string">"SIMPLE"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"defaultStatementTimeout"</span> <span class="attr">value</span>=<span class="string">"25"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"defaultFetchSize"</span> <span class="attr">value</span>=<span class="string">"100"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"safeRowBoundsEnabled"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"localCacheScope"</span> <span class="attr">value</span>=<span class="string">"SESSION"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"jdbcTypeForNull"</span> <span class="attr">value</span>=<span class="string">"OTHER"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">"equals,clone,hashCode,toString"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-映射器（mappers）"><a href="#5-映射器（mappers）" class="headerlink" title="5. 映射器（mappers）"></a>5. 映射器（mappers）</h2><ul><li>映射器 : 定义映射SQL语句文件</li><li>首先我们需要告诉 MyBatis 到哪里去找到这些语句。 Java 在自动查找这方面没有提供一个很好的方法，所以最佳的方式是告诉 MyBatis 到哪里去找映射文件。</li><li>完全限定资源定位符</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 方式一 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用相对于类路径的资源引用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/builder/AuthorMapper.xml"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/builder/BlogMapper.xml"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/builder/PostMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 方式二 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用映射器接口实现类的完全限定类名</span></span><br><span class="line"><span class="comment">需要配置文件名称和接口名称一致，并且位于同一目录下 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"org.mybatis.builder.AuthorMapper"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"org.mybatis.builder.BlogMapper"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"org.mybatis.builder.PostMapper"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 方式三 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 将包内的映射器接口实现全部注册为映射器</span></span><br><span class="line"><span class="comment">但是需要配置文件名称和接口名称一致，并且位于同一目录下 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"org.mybatis.builder"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-配置解析&quot;&gt;&lt;a href=&quot;#MyBatis-配置解析&quot; class=&quot;headerlink&quot; title=&quot;MyBatis 配置解析&quot;&gt;&lt;/a&gt;MyBatis 配置解析&lt;/h1&gt;&lt;h2 id=&quot;核心配置文件&quot;&gt;&lt;a href=&quot;#核心配置文件&quot; class=&quot;headerlink&quot; title=&quot;核心配置文件&quot;&gt;&lt;/a&gt;核心配置文件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;mybatis-config.xml 系统核心配置文件&lt;/li&gt;
&lt;li&gt;MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息&lt;/li&gt;
&lt;li&gt;能配置的内容如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;configuration（配置）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    properties（属性）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    settings（设置）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    typeAliases（类型别名）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    typeHandlers（类型处理器）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    objectFactory（对象工厂）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plugins（插件）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    environments（环境配置）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        environment（环境变量）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transactionManager（事务管理器）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dataSource（数据源）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    databaseIdProvider（数据库厂商标识）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mappers（映射器）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 注意元素节点的顺序！顺序不对会报错 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;可以阅读 mybatis-config.xml 上面的dtd的头文件！&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 查询语言</title>
    <link href="http://zhuuu.work/2020/01/11/Mysql/Mysql%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/"/>
    <id>http://zhuuu.work/2020/01/11/Mysql/Mysql%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/</id>
    <published>2020-01-11T08:02:27.000Z</published>
    <updated>2020-02-17T01:28:58.683Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql-查询语言"><a href="#Mysql-查询语言" class="headerlink" title="Mysql 查询语言"></a>Mysql 查询语言</h1><h2 id="DQL语言"><a href="#DQL语言" class="headerlink" title="DQL语言"></a>DQL语言</h2><p><strong>DQL( Data Query Language 数据查询语言 )</strong></p><ul><li><p>查询数据库数据 , 如<strong>SELECT</strong>语句</p></li><li><p>简单的单表查询或多表的复杂查询和嵌套查询</p></li><li><p>使用频率最高的语句</p></li><li><p>是数据库语言中最核心,最重要的语句</p></li></ul><a id="more"></a><h3 id="1-select-语法公式："><a href="#1-select-语法公式：" class="headerlink" title="1. select 语法公式："></a>1. select 语法公式：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">SELECT [ALL | DISTINCT]</span></span><br><span class="line"><span class="comment">&#123;* | table.* | [table.field1[as alias1][,table.field2[as alias2]][,...]]&#125;</span></span><br><span class="line"><span class="comment">FROM table_name [as table_alias]</span></span><br><span class="line"><span class="comment">    [left | right | inner join table_name2]  #联合查询</span></span><br><span class="line"><span class="comment">    [WHERE ...]  #指定结果需满足的条件</span></span><br><span class="line"><span class="comment">    [GROUP BY ...]  #指定结果按照哪几个字段来分组</span></span><br><span class="line"><span class="comment">    [HAVING]  #过滤分组的记录必须满足的次要条件</span></span><br><span class="line"><span class="comment">    [ORDER BY ...]  #指定查询记录按一个或多个条件排序</span></span><br><span class="line"><span class="comment">    [LIMIT &#123;[offset,]row_count | row_countOFFSET offset&#125;];</span></span><br><span class="line"><span class="comment">    # 指定查询的记录从哪条至哪条</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>预备数据环境：提供的素材SQL语句 :</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">SQLyog Ultimate v10.00 Beta1</span><br><span class="line">MySQL - 5.7.19 : Database - school</span><br><span class="line">*********************************************************************</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*!40101 SET NAMES utf8 *&#x2F;;</span><br><span class="line"></span><br><span class="line">&#x2F;*!40101 SET SQL_MODE&#x3D;&#39;&#39;*&#x2F;;</span><br><span class="line"></span><br><span class="line">&#x2F;*!40014 SET @OLD_UNIQUE_CHECKS&#x3D;@@UNIQUE_CHECKS, UNIQUE_CHECKS&#x3D;0 *&#x2F;;</span><br><span class="line">&#x2F;*!40014 SET @OLD_FOREIGN_KEY_CHECKS&#x3D;@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS&#x3D;0 *&#x2F;;</span><br><span class="line">&#x2F;*!40101 SET @OLD_SQL_MODE&#x3D;@@SQL_MODE, SQL_MODE&#x3D;&#39;NO_AUTO_VALUE_ON_ZERO&#39; *&#x2F;;</span><br><span class="line">&#x2F;*!40111 SET @OLD_SQL_NOTES&#x3D;@@SQL_NOTES, SQL_NOTES&#x3D;0 *&#x2F;;</span><br><span class="line">CREATE DATABASE &#x2F;*!32312 IF NOT EXISTS*&#x2F;&#96;school&#96; &#x2F;*!40100 DEFAULT CHARACTER SET utf8 *&#x2F;;</span><br><span class="line"></span><br><span class="line">USE &#96;school&#96;;</span><br><span class="line"></span><br><span class="line">&#x2F;*Table structure for table &#96;grade&#96; *&#x2F;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS &#96;grade&#96;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;grade&#96; (</span><br><span class="line">  &#96;GradeID&#96; INT(11) NOT NULL AUTO_INCREMENT COMMENT &#39;年级编号&#39;,</span><br><span class="line">  &#96;GradeName&#96; VARCHAR(50) NOT NULL COMMENT &#39;年级名称&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;GradeID&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB AUTO_INCREMENT&#x3D;6 DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">&#x2F;*Data for the table &#96;grade&#96; *&#x2F;</span><br><span class="line"></span><br><span class="line">INSERT  INTO &#96;grade&#96;(&#96;GradeID&#96;,&#96;GradeName&#96;) VALUES (1,&#39;大一&#39;),(2,&#39;大二&#39;),(3,&#39;大三&#39;),(4,&#39;大四&#39;),(5,&#39;预科班&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;*Table structure for table &#96;result&#96; *&#x2F;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS &#96;result&#96;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;result&#96; (</span><br><span class="line">  &#96;StudentNo&#96; INT(4) NOT NULL COMMENT &#39;学号&#39;,</span><br><span class="line">  &#96;SubjectNo&#96; INT(4) NOT NULL COMMENT &#39;课程编号&#39;,</span><br><span class="line">  &#96;ExamDate&#96; DATETIME NOT NULL COMMENT &#39;考试日期&#39;,</span><br><span class="line">  &#96;StudentResult&#96; INT(4) NOT NULL COMMENT &#39;考试成绩&#39;,</span><br><span class="line">  KEY &#96;SubjectNo&#96; (&#96;SubjectNo&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">&#x2F;*Data for the table &#96;result&#96; *&#x2F;</span><br><span class="line"></span><br><span class="line">INSERT  INTO &#96;result&#96;(&#96;StudentNo&#96;,&#96;SubjectNo&#96;,&#96;ExamDate&#96;,&#96;StudentResult&#96;) VALUES (1000,1,&#39;2013-11-11 16:00:00&#39;,94),(1000,2,&#39;2012-11-10 10:00:00&#39;,75),(1000,3,&#39;2011-12-19 10:00:00&#39;,76),(1000,4,&#39;2010-11-18 11:00:00&#39;,93),(1000,5,&#39;2013-11-11 14:00:00&#39;,97),(1000,6,&#39;2012-09-13 15:00:00&#39;,87),(1000,7,&#39;2011-10-16 16:00:00&#39;,79),(1000,8,&#39;2010-11-11 16:00:00&#39;,74),(1000,9,&#39;2013-11-21 10:00:00&#39;,69),(1000,10,&#39;2012-11-11 12:00:00&#39;,78),(1000,11,&#39;2011-11-11 14:00:00&#39;,66),(1000,12,&#39;2010-11-11 15:00:00&#39;,82),(1000,13,&#39;2013-11-11 14:00:00&#39;,94),(1000,14,&#39;2012-11-11 15:00:00&#39;,98),(1000,15,&#39;2011-12-11 10:00:00&#39;,70),(1000,16,&#39;2010-09-11 10:00:00&#39;,74),(1001,1,&#39;2013-11-11 16:00:00&#39;,76),(1001,2,&#39;2012-11-10 10:00:00&#39;,93),(1001,3,&#39;2011-12-19 10:00:00&#39;,65),(1001,4,&#39;2010-11-18 11:00:00&#39;,71),(1001,5,&#39;2013-11-11 14:00:00&#39;,98),(1001,6,&#39;2012-09-13 15:00:00&#39;,74),(1001,7,&#39;2011-10-16 16:00:00&#39;,85),(1001,8,&#39;2010-11-11 16:00:00&#39;,69),(1001,9,&#39;2013-11-21 10:00:00&#39;,63),(1001,10,&#39;2012-11-11 12:00:00&#39;,70),(1001,11,&#39;2011-11-11 14:00:00&#39;,62),(1001,12,&#39;2010-11-11 15:00:00&#39;,90),(1001,13,&#39;2013-11-11 14:00:00&#39;,97),(1001,14,&#39;2012-11-11 15:00:00&#39;,89),(1001,15,&#39;2011-12-11 10:00:00&#39;,72),(1001,16,&#39;2010-09-11 10:00:00&#39;,90),(1002,1,&#39;2013-11-11 16:00:00&#39;,61),(1002,2,&#39;2012-11-10 10:00:00&#39;,80),(1002,3,&#39;2011-12-19 10:00:00&#39;,89),(1002,4,&#39;2010-11-18 11:00:00&#39;,88),(1002,5,&#39;2013-11-11 14:00:00&#39;,82),(1002,6,&#39;2012-09-13 15:00:00&#39;,91),(1002,7,&#39;2011-10-16 16:00:00&#39;,63),(1002,8,&#39;2010-11-11 16:00:00&#39;,84),(1002,9,&#39;2013-11-21 10:00:00&#39;,60),(1002,10,&#39;2012-11-11 12:00:00&#39;,71),(1002,11,&#39;2011-11-11 14:00:00&#39;,93),(1002,12,&#39;2010-11-11 15:00:00&#39;,96),(1002,13,&#39;2013-11-11 14:00:00&#39;,83),(1002,14,&#39;2012-11-11 15:00:00&#39;,69),(1002,15,&#39;2011-12-11 10:00:00&#39;,89),(1002,16,&#39;2010-09-11 10:00:00&#39;,83),(1003,1,&#39;2013-11-11 16:00:00&#39;,91),(1003,2,&#39;2012-11-10 10:00:00&#39;,75),(1003,3,&#39;2011-12-19 10:00:00&#39;,65),(1003,4,&#39;2010-11-18 11:00:00&#39;,63),(1003,5,&#39;2013-11-11 14:00:00&#39;,90),(1003,6,&#39;2012-09-13 15:00:00&#39;,96),(1003,7,&#39;2011-10-16 16:00:00&#39;,97),(1003,8,&#39;2010-11-11 16:00:00&#39;,77),(1003,9,&#39;2013-11-21 10:00:00&#39;,62),(1003,10,&#39;2012-11-11 12:00:00&#39;,81),(1003,11,&#39;2011-11-11 14:00:00&#39;,76),(1003,12,&#39;2010-11-11 15:00:00&#39;,61),(1003,13,&#39;2013-11-11 14:00:00&#39;,93),(1003,14,&#39;2012-11-11 15:00:00&#39;,79),(1003,15,&#39;2011-12-11 10:00:00&#39;,78),(1003,16,&#39;2010-09-11 10:00:00&#39;,96),(1004,1,&#39;2013-11-11 16:00:00&#39;,84),(1004,2,&#39;2012-11-10 10:00:00&#39;,79),(1004,3,&#39;2011-12-19 10:00:00&#39;,76),(1004,4,&#39;2010-11-18 11:00:00&#39;,78),(1004,5,&#39;2013-11-11 14:00:00&#39;,81),(1004,6,&#39;2012-09-13 15:00:00&#39;,90),(1004,7,&#39;2011-10-16 16:00:00&#39;,63),(1004,8,&#39;2010-11-11 16:00:00&#39;,89),(1004,9,&#39;2013-11-21 10:00:00&#39;,67),(1004,10,&#39;2012-11-11 12:00:00&#39;,100),(1004,11,&#39;2011-11-11 14:00:00&#39;,94),(1004,12,&#39;2010-11-11 15:00:00&#39;,65),(1004,13,&#39;2013-11-11 14:00:00&#39;,86),(1004,14,&#39;2012-11-11 15:00:00&#39;,77),(1004,15,&#39;2011-12-11 10:00:00&#39;,82),(1004,16,&#39;2010-09-11 10:00:00&#39;,87),(1005,1,&#39;2013-11-11 16:00:00&#39;,82),(1005,2,&#39;2012-11-10 10:00:00&#39;,92),(1005,3,&#39;2011-12-19 10:00:00&#39;,80),(1005,4,&#39;2010-11-18 11:00:00&#39;,92),(1005,5,&#39;2013-11-11 14:00:00&#39;,97),(1005,6,&#39;2012-09-13 15:00:00&#39;,72),(1005,7,&#39;2011-10-16 16:00:00&#39;,84),(1005,8,&#39;2010-11-11 16:00:00&#39;,79),(1005,9,&#39;2013-11-21 10:00:00&#39;,76),(1005,10,&#39;2012-11-11 12:00:00&#39;,87),(1005,11,&#39;2011-11-11 14:00:00&#39;,65),(1005,12,&#39;2010-11-11 15:00:00&#39;,67),(1005,13,&#39;2013-11-11 14:00:00&#39;,63),(1005,14,&#39;2012-11-11 15:00:00&#39;,64),(1005,15,&#39;2011-12-11 10:00:00&#39;,99),(1005,16,&#39;2010-09-11 10:00:00&#39;,97),(1006,1,&#39;2013-11-11 16:00:00&#39;,82),(1006,2,&#39;2012-11-10 10:00:00&#39;,73),(1006,3,&#39;2011-12-19 10:00:00&#39;,79),(1006,4,&#39;2010-11-18 11:00:00&#39;,63),(1006,5,&#39;2013-11-11 14:00:00&#39;,97),(1006,6,&#39;2012-09-13 15:00:00&#39;,83),(1006,7,&#39;2011-10-16 16:00:00&#39;,78),(1006,8,&#39;2010-11-11 16:00:00&#39;,88),(1006,9,&#39;2013-11-21 10:00:00&#39;,89),(1006,10,&#39;2012-11-11 12:00:00&#39;,82),(1006,11,&#39;2011-11-11 14:00:00&#39;,70),(1006,12,&#39;2010-11-11 15:00:00&#39;,69),(1006,13,&#39;2013-11-11 14:00:00&#39;,64),(1006,14,&#39;2012-11-11 15:00:00&#39;,80),(1006,15,&#39;2011-12-11 10:00:00&#39;,90),(1006,16,&#39;2010-09-11 10:00:00&#39;,85),(1007,1,&#39;2013-11-11 16:00:00&#39;,87),(1007,2,&#39;2012-11-10 10:00:00&#39;,63),(1007,3,&#39;2011-12-19 10:00:00&#39;,70),(1007,4,&#39;2010-11-18 11:00:00&#39;,74),(1007,5,&#39;2013-11-11 14:00:00&#39;,79),(1007,6,&#39;2012-09-13 15:00:00&#39;,83),(1007,7,&#39;2011-10-16 16:00:00&#39;,86),(1007,8,&#39;2010-11-11 16:00:00&#39;,76),(1007,9,&#39;2013-11-21 10:00:00&#39;,65),(1007,10,&#39;2012-11-11 12:00:00&#39;,87),(1007,11,&#39;2011-11-11 14:00:00&#39;,69),(1007,12,&#39;2010-11-11 15:00:00&#39;,69),(1007,13,&#39;2013-11-11 14:00:00&#39;,90),(1007,14,&#39;2012-11-11 15:00:00&#39;,84),(1007,15,&#39;2011-12-11 10:00:00&#39;,95),(1007,16,&#39;2010-09-11 10:00:00&#39;,92),(1008,1,&#39;2013-11-11 16:00:00&#39;,96),(1008,2,&#39;2012-11-10 10:00:00&#39;,62),(1008,3,&#39;2011-12-19 10:00:00&#39;,97),(1008,4,&#39;2010-11-18 11:00:00&#39;,84),(1008,5,&#39;2013-11-11 14:00:00&#39;,86),(1008,6,&#39;2012-09-13 15:00:00&#39;,72),(1008,7,&#39;2011-10-16 16:00:00&#39;,67),(1008,8,&#39;2010-11-11 16:00:00&#39;,83),(1008,9,&#39;2013-11-21 10:00:00&#39;,86),(1008,10,&#39;2012-11-11 12:00:00&#39;,60),(1008,11,&#39;2011-11-11 14:00:00&#39;,61),(1008,12,&#39;2010-11-11 15:00:00&#39;,68),(1008,13,&#39;2013-11-11 14:00:00&#39;,99),(1008,14,&#39;2012-11-11 15:00:00&#39;,77),(1008,15,&#39;2011-12-11 10:00:00&#39;,73),(1008,16,&#39;2010-09-11 10:00:00&#39;,78),(1009,1,&#39;2013-11-11 16:00:00&#39;,67),(1009,2,&#39;2012-11-10 10:00:00&#39;,70),(1009,3,&#39;2011-12-19 10:00:00&#39;,75),(1009,4,&#39;2010-11-18 11:00:00&#39;,92),(1009,5,&#39;2013-11-11 14:00:00&#39;,76),(1009,6,&#39;2012-09-13 15:00:00&#39;,90),(1009,7,&#39;2011-10-16 16:00:00&#39;,62),(1009,8,&#39;2010-11-11 16:00:00&#39;,68),(1009,9,&#39;2013-11-21 10:00:00&#39;,70),(1009,10,&#39;2012-11-11 12:00:00&#39;,83),(1009,11,&#39;2011-11-11 14:00:00&#39;,88),(1009,12,&#39;2010-11-11 15:00:00&#39;,65),(1009,13,&#39;2013-11-11 14:00:00&#39;,91),(1009,14,&#39;2012-11-11 15:00:00&#39;,99),(1009,15,&#39;2011-12-11 10:00:00&#39;,65),(1009,16,&#39;2010-09-11 10:00:00&#39;,83),(1010,1,&#39;2013-11-11 16:00:00&#39;,83),(1010,2,&#39;2012-11-10 10:00:00&#39;,87),(1010,3,&#39;2011-12-19 10:00:00&#39;,89),(1010,4,&#39;2010-11-18 11:00:00&#39;,99),(1010,5,&#39;2013-11-11 14:00:00&#39;,91),(1010,6,&#39;2012-09-13 15:00:00&#39;,96),(1010,7,&#39;2011-10-16 16:00:00&#39;,72),(1010,8,&#39;2010-11-11 16:00:00&#39;,72),(1010,9,&#39;2013-11-21 10:00:00&#39;,98),(1010,10,&#39;2012-11-11 12:00:00&#39;,73),(1010,11,&#39;2011-11-11 14:00:00&#39;,68),(1010,12,&#39;2010-11-11 15:00:00&#39;,62),(1010,13,&#39;2013-11-11 14:00:00&#39;,67),(1010,14,&#39;2012-11-11 15:00:00&#39;,69),(1010,15,&#39;2011-12-11 10:00:00&#39;,71),(1010,16,&#39;2010-09-11 10:00:00&#39;,66),(1011,1,&#39;2013-11-11 16:00:00&#39;,62),(1011,2,&#39;2012-11-10 10:00:00&#39;,72),(1011,3,&#39;2011-12-19 10:00:00&#39;,96),(1011,4,&#39;2010-11-18 11:00:00&#39;,64),(1011,5,&#39;2013-11-11 14:00:00&#39;,89),(1011,6,&#39;2012-09-13 15:00:00&#39;,91),(1011,7,&#39;2011-10-16 16:00:00&#39;,95),(1011,8,&#39;2010-11-11 16:00:00&#39;,96),(1011,9,&#39;2013-11-21 10:00:00&#39;,89),(1011,10,&#39;2012-11-11 12:00:00&#39;,73),(1011,11,&#39;2011-11-11 14:00:00&#39;,82),(1011,12,&#39;2010-11-11 15:00:00&#39;,98),(1011,13,&#39;2013-11-11 14:00:00&#39;,66),(1011,14,&#39;2012-11-11 15:00:00&#39;,69),(1011,15,&#39;2011-12-11 10:00:00&#39;,91),(1011,16,&#39;2010-09-11 10:00:00&#39;,69),(1012,1,&#39;2013-11-11 16:00:00&#39;,86),(1012,2,&#39;2012-11-10 10:00:00&#39;,66),(1012,3,&#39;2011-12-19 10:00:00&#39;,97),(1012,4,&#39;2010-11-18 11:00:00&#39;,69),(1012,5,&#39;2013-11-11 14:00:00&#39;,70),(1012,6,&#39;2012-09-13 15:00:00&#39;,74),(1012,7,&#39;2011-10-16 16:00:00&#39;,91),(1012,8,&#39;2010-11-11 16:00:00&#39;,97),(1012,9,&#39;2013-11-21 10:00:00&#39;,84),(1012,10,&#39;2012-11-11 12:00:00&#39;,82),(1012,11,&#39;2011-11-11 14:00:00&#39;,90),(1012,12,&#39;2010-11-11 15:00:00&#39;,91),(1012,13,&#39;2013-11-11 14:00:00&#39;,91),(1012,14,&#39;2012-11-11 15:00:00&#39;,97),(1012,15,&#39;2011-12-11 10:00:00&#39;,85),(1012,16,&#39;2010-09-11 10:00:00&#39;,90),(1013,1,&#39;2013-11-11 16:00:00&#39;,73),(1013,2,&#39;2012-11-10 10:00:00&#39;,69),(1013,3,&#39;2011-12-19 10:00:00&#39;,91),(1013,4,&#39;2010-11-18 11:00:00&#39;,72),(1013,5,&#39;2013-11-11 14:00:00&#39;,76),(1013,6,&#39;2012-09-13 15:00:00&#39;,87),(1013,7,&#39;2011-10-16 16:00:00&#39;,61),(1013,8,&#39;2010-11-11 16:00:00&#39;,77),(1013,9,&#39;2013-11-21 10:00:00&#39;,83),(1013,10,&#39;2012-11-11 12:00:00&#39;,99),(1013,11,&#39;2011-11-11 14:00:00&#39;,91),(1013,12,&#39;2010-11-11 15:00:00&#39;,84),(1013,13,&#39;2013-11-11 14:00:00&#39;,98),(1013,14,&#39;2012-11-11 15:00:00&#39;,74),(1013,15,&#39;2011-12-11 10:00:00&#39;,92),(1013,16,&#39;2010-09-11 10:00:00&#39;,90),(1014,1,&#39;2013-11-11 16:00:00&#39;,64),(1014,2,&#39;2012-11-10 10:00:00&#39;,81),(1014,3,&#39;2011-12-19 10:00:00&#39;,79),(1014,4,&#39;2010-11-18 11:00:00&#39;,74),(1014,5,&#39;2013-11-11 14:00:00&#39;,65),(1014,6,&#39;2012-09-13 15:00:00&#39;,88),(1014,7,&#39;2011-10-16 16:00:00&#39;,86),(1014,8,&#39;2010-11-11 16:00:00&#39;,77),(1014,9,&#39;2013-11-21 10:00:00&#39;,86),(1014,10,&#39;2012-11-11 12:00:00&#39;,85),(1014,11,&#39;2011-11-11 14:00:00&#39;,86),(1014,12,&#39;2010-11-11 15:00:00&#39;,75),(1014,13,&#39;2013-11-11 14:00:00&#39;,89),(1014,14,&#39;2012-11-11 15:00:00&#39;,79),(1014,15,&#39;2011-12-11 10:00:00&#39;,73),(1014,16,&#39;2010-09-11 10:00:00&#39;,68),(1015,1,&#39;2013-11-11 16:00:00&#39;,99),(1015,2,&#39;2012-11-10 10:00:00&#39;,60),(1015,3,&#39;2011-12-19 10:00:00&#39;,60),(1015,4,&#39;2010-11-18 11:00:00&#39;,75),(1015,5,&#39;2013-11-11 14:00:00&#39;,78),(1015,6,&#39;2012-09-13 15:00:00&#39;,78),(1015,7,&#39;2011-10-16 16:00:00&#39;,84),(1015,8,&#39;2010-11-11 16:00:00&#39;,95),(1015,9,&#39;2013-11-21 10:00:00&#39;,93),(1015,10,&#39;2012-11-11 12:00:00&#39;,79),(1015,11,&#39;2011-11-11 14:00:00&#39;,74),(1015,12,&#39;2010-11-11 15:00:00&#39;,65),(1015,13,&#39;2013-11-11 14:00:00&#39;,63),(1015,14,&#39;2012-11-11 15:00:00&#39;,74),(1015,15,&#39;2011-12-11 10:00:00&#39;,67),(1015,16,&#39;2010-09-11 10:00:00&#39;,65),(1016,1,&#39;2013-11-11 16:00:00&#39;,97),(1016,2,&#39;2012-11-10 10:00:00&#39;,90),(1016,3,&#39;2011-12-19 10:00:00&#39;,77),(1016,4,&#39;2010-11-18 11:00:00&#39;,75),(1016,5,&#39;2013-11-11 14:00:00&#39;,75),(1016,6,&#39;2012-09-13 15:00:00&#39;,97),(1016,7,&#39;2011-10-16 16:00:00&#39;,96),(1016,8,&#39;2010-11-11 16:00:00&#39;,92),(1016,9,&#39;2013-11-21 10:00:00&#39;,62),(1016,10,&#39;2012-11-11 12:00:00&#39;,83),(1016,11,&#39;2011-11-11 14:00:00&#39;,98),(1016,12,&#39;2010-11-11 15:00:00&#39;,94),(1016,13,&#39;2013-11-11 14:00:00&#39;,62),(1016,14,&#39;2012-11-11 15:00:00&#39;,97),(1016,15,&#39;2011-12-11 10:00:00&#39;,76),(1016,16,&#39;2010-09-11 10:00:00&#39;,82),(1017,1,&#39;2013-11-11 16:00:00&#39;,100),(1017,2,&#39;2012-11-10 10:00:00&#39;,88),(1017,3,&#39;2011-12-19 10:00:00&#39;,86),(1017,4,&#39;2010-11-18 11:00:00&#39;,73),(1017,5,&#39;2013-11-11 14:00:00&#39;,96),(1017,6,&#39;2012-09-13 15:00:00&#39;,64),(1017,7,&#39;2011-10-16 16:00:00&#39;,81),(1017,8,&#39;2010-11-11 16:00:00&#39;,66),(1017,9,&#39;2013-11-21 10:00:00&#39;,76),(1017,10,&#39;2012-11-11 12:00:00&#39;,95),(1017,11,&#39;2011-11-11 14:00:00&#39;,73),(1017,12,&#39;2010-11-11 15:00:00&#39;,82),(1017,13,&#39;2013-11-11 14:00:00&#39;,85),(1017,14,&#39;2012-11-11 15:00:00&#39;,68),(1017,15,&#39;2011-12-11 10:00:00&#39;,99),(1017,16,&#39;2010-09-11 10:00:00&#39;,76);</span><br><span class="line"></span><br><span class="line">&#x2F;*Table structure for table &#96;student&#96; *&#x2F;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS &#96;student&#96;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;student&#96; (</span><br><span class="line">  &#96;StudentNo&#96; INT(4) NOT NULL COMMENT &#39;学号&#39;,</span><br><span class="line">  &#96;LoginPwd&#96; VARCHAR(20) DEFAULT NULL,</span><br><span class="line">  &#96;StudentName&#96; VARCHAR(20) DEFAULT NULL COMMENT &#39;学生姓名&#39;,</span><br><span class="line">  &#96;Sex&#96; TINYINT(1) DEFAULT NULL COMMENT &#39;性别，取值0或1&#39;,</span><br><span class="line">  &#96;GradeId&#96; INT(11) DEFAULT NULL COMMENT &#39;年级编号&#39;,</span><br><span class="line">  &#96;Phone&#96; VARCHAR(50) NOT NULL COMMENT &#39;联系电话，允许为空，即可选输入&#39;,</span><br><span class="line">  &#96;Address&#96; VARCHAR(255) NOT NULL COMMENT &#39;地址，允许为空，即可选输入&#39;,</span><br><span class="line">  &#96;BornDate&#96; DATETIME DEFAULT NULL COMMENT &#39;出生时间&#39;,</span><br><span class="line">  &#96;Email&#96; VARCHAR(50) NOT NULL COMMENT &#39;邮箱账号，允许为空，即可选输入&#39;,</span><br><span class="line">  &#96;IdentityCard&#96; VARCHAR(18) DEFAULT NULL COMMENT &#39;身份证号&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;StudentNo&#96;),</span><br><span class="line">  UNIQUE KEY &#96;IdentityCard&#96; (&#96;IdentityCard&#96;),</span><br><span class="line">  KEY &#96;Email&#96; (&#96;Email&#96;)</span><br><span class="line">) ENGINE&#x3D;MYISAM DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">&#x2F;*Data for the table &#96;student&#96; *&#x2F;</span><br><span class="line"></span><br><span class="line">INSERT  INTO &#96;student&#96;(&#96;StudentNo&#96;,&#96;LoginPwd&#96;,&#96;StudentName&#96;,&#96;Sex&#96;,&#96;GradeId&#96;,&#96;Phone&#96;,&#96;Address&#96;,&#96;BornDate&#96;,&#96;Email&#96;,&#96;IdentityCard&#96;) VALUES (1000,&#39;111111&#39;,&#39;郭靖&#39;,1,1,&#39;13500000001&#39;,&#39;北京海淀区中关村大街1号&#39;,&#39;1986-12-11 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612111234&#39;),(1001,&#39;123456&#39;,&#39;李文才&#39;,1,2,&#39;13500000002&#39;,&#39;河南洛阳&#39;,&#39;1981-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198112311234&#39;),(1002,&#39;111111&#39;,&#39;李斯文&#39;,1,1,&#39;13500000003&#39;,&#39;天津市和平区&#39;,&#39;1986-11-30 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198611301234&#39;),(1003,&#39;123456&#39;,&#39;武松&#39;,1,3,&#39;13500000004&#39;,&#39;上海卢湾区&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612314234&#39;),(1004,&#39;123456&#39;,&#39;张三&#39;,1,4,&#39;13500000005&#39;,&#39;北京市通州&#39;,&#39;1989-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311244&#39;),(1005,&#39;123456&#39;,&#39;张秋丽 &#39;,2,1,&#39;13500000006&#39;,&#39;广西桂林市灵川&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311214&#39;),(1006,&#39;123456&#39;,&#39;肖梅&#39;,2,4,&#39;13500000007&#39;,&#39;地址不详&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311134&#39;),(1007,&#39;111111&#39;,&#39;欧阳峻峰&#39;,1,1,&#39;13500000008&#39;,&#39;北京东城区&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311133&#39;),(1008,&#39;111111&#39;,&#39;梅超风&#39;,1,1,&#39;13500000009&#39;,&#39;河南洛阳&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311221&#39;),(1009,&#39;123456&#39;,&#39;刘毅&#39;,1,2,&#39;13500000011&#39;,&#39;安徽&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311231&#39;),(1010,&#39;111111&#39;,&#39;大凡&#39;,1,1,&#39;13500000012&#39;,&#39;河南洛阳&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311044&#39;),(1011,&#39;111111&#39;,&#39;奥丹斯&#39;,1,1,&#39;13500000013&#39;,&#39;北京海淀区中关村大街*号&#39;,&#39;1984-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198412311234&#39;),(1012,&#39;123456&#39;,&#39;多伦&#39;,2,3,&#39;13500000014&#39;,&#39;广西南宁中央大街&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311334&#39;),(1013,&#39;123456&#39;,&#39;李梅&#39;,2,1,&#39;13500000015&#39;,&#39;上海卢湾区&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311534&#39;),(1014,&#39;123456&#39;,&#39;张得&#39;,2,4,&#39;13500000016&#39;,&#39;北京海淀区中关村大街*号&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311264&#39;),(1015,&#39;123456&#39;,&#39;李东方&#39;,1,4,&#39;13500000017&#39;,&#39;广西桂林市灵川&#39;,&#39;1976-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323197612311234&#39;),(1016,&#39;111111&#39;,&#39;刘奋斗&#39;,1,1,&#39;13500000018&#39;,&#39;上海卢湾区&#39;,&#39;1986-12-31 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198612311251&#39;),(1017,&#39;123456&#39;,&#39;可可&#39;,2,3,&#39;13500000019&#39;,&#39;北京长安街1号&#39;,&#39;1981-09-10 00:00:00&#39;,&#39;test1@bdqn.cn&#39;,&#39;450323198109108311&#39;),(10066,&#39;&#39;,&#39;Tom&#39;,1,1,&#39;13500000000&#39;,&#39;&#39;,&#39;0000-00-00 00:00:00&#39;,&#39;email@22.com&#39;,&#39;33123123123123123&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;*Table structure for table &#96;subject&#96; *&#x2F;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS &#96;subject&#96;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;subject&#96; (</span><br><span class="line">  &#96;SubjectNo&#96; INT(11) NOT NULL AUTO_INCREMENT COMMENT &#39;课程编号&#39;,</span><br><span class="line">  &#96;SubjectName&#96; VARCHAR(50) DEFAULT NULL COMMENT &#39;课程名称&#39;,</span><br><span class="line">  &#96;ClassHour&#96; INT(4) DEFAULT NULL COMMENT &#39;学时&#39;,</span><br><span class="line">  &#96;GradeID&#96; INT(4) DEFAULT NULL COMMENT &#39;年级编号&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;SubjectNo&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB AUTO_INCREMENT&#x3D;18 DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">&#x2F;*Data for the table &#96;subject&#96; *&#x2F;</span><br><span class="line"></span><br><span class="line">INSERT  INTO &#96;subject&#96;(&#96;SubjectNo&#96;,&#96;SubjectName&#96;,&#96;ClassHour&#96;,&#96;GradeID&#96;) VALUES (1,&#39;高等数学-1&#39;,110,1),(2,&#39;高等数学-2&#39;,110,2),(3,&#39;高等数学-3&#39;,100,3),(4,&#39;高等数学-4&#39;,130,4),(5,&#39;C语言-1&#39;,110,1),(6,&#39;C语言-2&#39;,110,2),(7,&#39;C语言-3&#39;,100,3),(8,&#39;C语言-4&#39;,130,4),(9,&#39;JAVA第一学年&#39;,110,1),(10,&#39;JAVA第二学年&#39;,110,2),(11,&#39;JAVA第三学年&#39;,100,3),(12,&#39;JAVA第四学年&#39;,130,4),(13,&#39;数据库结构-1&#39;,110,1),(14,&#39;数据库结构-2&#39;,110,2),(15,&#39;数据库结构-3&#39;,100,3),(16,&#39;数据库结构-4&#39;,130,4),(17,&#39;C#基础&#39;,130,1);</span><br><span class="line"></span><br><span class="line">&#x2F;*!40101 SET SQL_MODE&#x3D;@OLD_SQL_MODE *&#x2F;;</span><br><span class="line">&#x2F;*!40014 SET FOREIGN_KEY_CHECKS&#x3D;@OLD_FOREIGN_KEY_CHECKS *&#x2F;;</span><br><span class="line">&#x2F;*!40014 SET UNIQUE_CHECKS&#x3D;@OLD_UNIQUE_CHECKS *&#x2F;;</span><br><span class="line">&#x2F;*!40111 SET SQL_NOTES&#x3D;@OLD_SQL_NOTES *&#x2F;;</span><br></pre></td></tr></table></figure><h3 id="2-指定查询字段"><a href="#2-指定查询字段" class="headerlink" title="2. 指定查询字段"></a>2. 指定查询字段</h3><ul><li><p>查询表结果时 , 可指定查询结果的数据列</p><ul><li><p>如 : SELECT * FROM student;</p></li><li><pre><code class="mysql"># 查询所有学生信息SELECT * FROM student;# 查询指定列(学号 , 姓名)SELECT studentno,studentname FROM student;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 3. AS起别名</span><br><span class="line"></span><br><span class="line">AS子句作用 :</span><br><span class="line"></span><br><span class="line">- 可给**数据列**取一个新别名</span><br><span class="line">- 可给**表**去一个新别名</span><br><span class="line">- 可把经计算或总结的结果用另一个新名称来代替</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;mysql</span><br><span class="line"># 这里是为列取别名(当然as关键词可以省略)</span><br><span class="line">SELECT studentno AS 学号,studentname AS 姓名 FROM student;</span><br><span class="line"></span><br><span class="line"># 使用as也可以为表取别名</span><br><span class="line">SELECT studentno AS 学号,studentname AS 姓名 FROM student AS s;</span><br><span class="line"></span><br><span class="line"># 使用as,为查询结果取一个新名字</span><br><span class="line"># CONCAT()函数拼接字符串</span><br><span class="line">SELECT CONCAT(&#39;姓名:&#39;,studentname) AS 新姓名 FROM student;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h3 id="4-去重"><a href="#4-去重" class="headerlink" title="4. 去重"></a>4. 去重</h3><ul><li>作用 : 去掉SELECT查询返回的记录结果中重复的记录(返回所有列的值都相同),只返回一条</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看哪些同学参加了考试(学号)--去除重复项</span><br><span class="line">SELECT * FROM result; # 查看考试成绩</span><br><span class="line">SELECT studentno FROM result; # 查看哪些同学参加了考试</span><br><span class="line">SELECT DISTINCT studentno FROM result;</span><br><span class="line"># 了解:DISTINCT 去除重复项 , (默认是ALL)</span><br></pre></td></tr></table></figure><h3 id="5-使用表达式的列"><a href="#5-使用表达式的列" class="headerlink" title="5. 使用表达式的列"></a>5. 使用表达式的列</h3><p>数据库中的表达式：文本值,列，NULL，计算表达式，变量</p><p>select <code>表达式</code> from 表</p><p>应用场景：</p><ul><li>select 语句返回结果列中使用</li><li>select 与剧中的order by, having 等子句中使用</li><li>DML语句中where条件语句中使用表达式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># selcet查询中可以使用表达式</span><br><span class="line">SELECT @@auto_increment_increment; # 查询自增步长</span><br><span class="line">SELECT VERSION(); #查询版本号</span><br><span class="line">SELECT 100*3-1 AS 计算结果; # 表达式</span><br><span class="line"></span><br><span class="line"># 学员考试成绩集体提分一分查看</span><br><span class="line">SELECT studentno,StudentResult+1 AS &#39;提分后&#39; FROM result;</span><br></pre></td></tr></table></figure><h3 id="6-where条件字句"><a href="#6-where条件字句" class="headerlink" title="6. where条件字句"></a>6. where条件字句</h3><ul><li>作用：检索数据中符合条件的值</li><li>搜索条件可由一个或多个逻辑表达式组成 , 结果一般为真或假.</li></ul><p>逻辑运算符</p><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>and &amp;&amp;</td><td>a  and b</td><td>逻辑与</td></tr><tr><td>or   ||</td><td>a  or b</td><td>逻辑或</td></tr><tr><td>Not   !</td><td>not a      ! a</td><td>逻辑非</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 满足条件的查询(where)</span><br><span class="line">SELECT Studentno,StudentResult FROM result;</span><br><span class="line"></span><br><span class="line"># 查询考试成绩在95-100之间的</span><br><span class="line">SELECT Studentno,StudentResult </span><br><span class="line">FROM result</span><br><span class="line">WHERE StudentResult&gt;&#x3D;95 AND StudentResult&lt;&#x3D;100;</span><br><span class="line"># AND也可以写成 &amp;&amp;</span><br><span class="line">SELECT Studentno,StudentResult </span><br><span class="line">FROM result</span><br><span class="line">WHERE StudentResult&gt;&#x3D;95 &amp;&amp; StudentResult&lt;&#x3D;100;</span><br><span class="line"></span><br><span class="line"># 模糊查询(对应的词:精确查询)</span><br><span class="line">SELECT Studentno,StudentResult </span><br><span class="line">FROM result</span><br><span class="line">WHERE StudentResult BETWEEN 95 AND 100;</span><br><span class="line"># 除了1000号同学,要其他同学的成绩</span><br><span class="line">SELECT studentno,studentresult</span><br><span class="line">FROM result</span><br><span class="line">WHERE studentno!&#x3D;1000;</span><br><span class="line"></span><br><span class="line"># 使用NOT</span><br><span class="line">SELECT studentno,studentresult</span><br><span class="line">FROM result</span><br><span class="line">WHERE NOT studentno&#x3D;1000;</span><br></pre></td></tr></table></figure><h3 id="7-模糊查询"><a href="#7-模糊查询" class="headerlink" title="7. 模糊查询"></a>7. 模糊查询</h3><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>Is NUll</td><td>a is null</td><td>如果操作符是null ,结果为真</td></tr><tr><td>Is not NUll</td><td>a is not null</td><td>如果操作符不为null,结果为真</td></tr><tr><td>Between</td><td>a between b and c</td><td>如果a在b和c之间，结果为真</td></tr><tr><td>Like</td><td>a like b</td><td>SQL匹配，如果a 匹配到 b，则结果为真</td></tr><tr><td>in</td><td>a in (a1,a2,a3)</td><td>如果a在a1,a2,a3中，结果为真</td></tr></tbody></table><h4 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%     <span class="comment">--代表0到任意个字符</span></span><br><span class="line">_     <span class="comment">--代表1个字符</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#模糊查询 between and \ like \ in \ null</span><br><span class="line"></span><br><span class="line">#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># LIKE</span><br><span class="line">#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">#查询姓李的同学的学号及姓名</span><br><span class="line">#like结合使用的通配符 : % (代表0到任意个字符)  _ (一个字符)</span><br><span class="line">SELECT studentno,studentname FROM student</span><br><span class="line">WHERE studentname LIKE &#39;李%&#39;;</span><br><span class="line"></span><br><span class="line">#查询姓李的同学,后面只有一个字的</span><br><span class="line">SELECT studentno,studentname FROM student</span><br><span class="line">WHERE studentname LIKE &#39;李_&#39;;</span><br><span class="line"></span><br><span class="line">#查询姓李的同学,后面只有两个字的</span><br><span class="line">SELECT studentno,studentname FROM student</span><br><span class="line">WHERE studentname LIKE &#39;李__&#39;;</span><br><span class="line"></span><br><span class="line">#查询姓名中含有 文 字的</span><br><span class="line">SELECT studentno,studentname FROM student</span><br><span class="line">WHERE studentname LIKE &#39;%文%&#39;;</span><br><span class="line"></span><br><span class="line">#查询姓名中含有特殊字符的需要使用转义符号 &#39;\&#39;</span><br><span class="line">#自定义转义符关键字:  ESCAPE &#39;:&#39;</span><br><span class="line"></span><br><span class="line">#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># IN</span><br><span class="line">#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">#查询学号为1000,1001,1002的学生姓名</span><br><span class="line">SELECT studentno,studentname FROM student</span><br><span class="line">WHERE studentno IN (1000,1001,1002);</span><br><span class="line"></span><br><span class="line">#查询地址在北京,南京,河南洛阳的学生</span><br><span class="line">SELECT studentno,studentname,address FROM student</span><br><span class="line">WHERE address IN (&#39;北京&#39;,&#39;南京&#39;,&#39;河南洛阳&#39;);</span><br><span class="line"></span><br><span class="line">#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># NULL 空</span><br><span class="line">#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">#查询出生日期没有填写的同学</span><br><span class="line">#不能直接写&#x3D;NULL , 这是代表错误的 , 用 is null </span><br><span class="line">SELECT studentname FROM student</span><br><span class="line">WHERE BornDate IS NULL;</span><br><span class="line"></span><br><span class="line">#查询出生日期填写的同学</span><br><span class="line">SELECT studentname FROM student</span><br><span class="line">WHERE BornDate IS NOT NULL;</span><br><span class="line"></span><br><span class="line">#查询没有写家庭住址的同学(空字符串不等于null)</span><br><span class="line">SELECT studentname FROM student</span><br><span class="line">WHERE Address&#x3D;&#39;&#39; OR Address IS NULL;</span><br></pre></td></tr></table></figure><h3 id="8-联表查询"><a href="#8-联表查询" class="headerlink" title="8. 联表查询"></a>8. 联表查询</h3><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200215174854.png" alt=""></p><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>Inner join</td><td>如果表中有一个匹配的值，就返回</td></tr><tr><td>left    join</td><td>会从左表中返回所有的值，哪怕右表中没有配置的值</td></tr><tr><td>right  join</td><td>会从右表中返回所有的值，哪怕左表中没有匹配的值</td></tr></tbody></table><ul><li>join on     — 连接查询</li><li>where      — 等值查询</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">1. 连接查询</span><br><span class="line">    如需要多张数据表的数据进行查询,则可通过连接运算符实现多个查询</span><br><span class="line">内连接 inner join</span><br><span class="line">    查询两个表中的结果集中的交集</span><br><span class="line">外连接 outer join</span><br><span class="line">    左外连接 left join</span><br><span class="line">        (以左表作为基准,右边表来一一匹配,匹配不上的,返回左表的记录,右表以NULL填充)</span><br><span class="line">    右外连接 right join</span><br><span class="line">        (以右表作为基准,左边表来一一匹配,匹配不上的,返回右表的记录,左表以NULL填充)</span><br><span class="line">        </span><br><span class="line">2. 等值连接和非等值连接</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><p>练习：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#查询参加了考试的同学信息(学号,学生姓名,科目编号,分数)</span><br><span class="line">SELECT * FROM student;</span><br><span class="line">SELECT * FROM result;</span><br><span class="line"></span><br><span class="line">&#x2F;*思路:</span><br><span class="line">(1):分析需求,确定查询的列来源于两个类,student  result,连接查询</span><br><span class="line">(2):确定使用哪种连接查询?(内连接)</span><br><span class="line">*&#x2F;</span><br><span class="line">SELECT s.studentno,studentname,subjectno,StudentResult</span><br><span class="line">FROM student s</span><br><span class="line">INNER JOIN result r</span><br><span class="line">ON r.studentno &#x3D; s.studentno</span><br><span class="line"></span><br><span class="line"># 右连接(也可实现)</span><br><span class="line">SELECT s.studentno,studentname,subjectno,StudentResult</span><br><span class="line">FROM student s</span><br><span class="line">RIGHT JOIN result r</span><br><span class="line">ON r.studentno &#x3D; s.studentno</span><br><span class="line"></span><br><span class="line"># 等值连接</span><br><span class="line">SELECT s.studentno,studentname,subjectno,StudentResult</span><br><span class="line">FROM student s , result r</span><br><span class="line">WHERE r.studentno &#x3D; s.studentno</span><br><span class="line"></span><br><span class="line"># 左连接 (查询了所有同学,不考试的也会查出来)</span><br><span class="line">SELECT s.studentno,studentname,subjectno,StudentResult</span><br><span class="line">FROM student s</span><br><span class="line">LEFT JOIN result r</span><br><span class="line">ON r.studentno &#x3D; s.studentno</span><br><span class="line"></span><br><span class="line">#查一下缺考的同学(左连接应用场景)</span><br><span class="line">SELECT s.studentno,studentname,subjectno,StudentResult</span><br><span class="line">FROM student s</span><br><span class="line">LEFT JOIN result r</span><br><span class="line">ON r.studentno &#x3D; s.studentno</span><br><span class="line">WHERE StudentResult IS NULL</span><br><span class="line"></span><br><span class="line">#思考题:查询参加了考试的同学信息(学号,学生姓名,科目名,分数)</span><br><span class="line">SELECT s.studentno,studentname,subjectname,StudentResult</span><br><span class="line">FROM student s</span><br><span class="line">INNER JOIN result r</span><br><span class="line">ON r.studentno &#x3D; s.studentno</span><br><span class="line">INNER JOIN &#96;subject&#96; sub</span><br><span class="line">ON sub.subjectno &#x3D; r.subjectno</span><br></pre></td></tr></table></figure><h3 id="9-自连接"><a href="#9-自连接" class="headerlink" title="9. 自连接"></a>9. 自连接</h3><p><strong>准备环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个表</span><br><span class="line">CREATE TABLE &#96;category&#96; (</span><br><span class="line">  &#96;categoryid&#96; INT(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT &#39;主题id&#39;,</span><br><span class="line">  &#96;pid&#96; INT(10) NOT NULL COMMENT &#39;父id&#39;,</span><br><span class="line">  &#96;categoryName&#96; VARCHAR(50) NOT NULL COMMENT &#39;主题名字&#39;,</span><br><span class="line">  PRIMARY KEY (&#96;categoryid&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB AUTO_INCREMENT&#x3D;9 DEFAULT CHARSET&#x3D;utf8</span><br><span class="line"></span><br><span class="line"># 插入数据</span><br><span class="line">INSERT INTO &#96;category&#96; (&#96;categoryid&#96;, &#96;pid&#96;, &#96;categoryName&#96;) </span><br><span class="line">VALUES(&#39;2&#39;,&#39;1&#39;,&#39;信息技术&#39;),</span><br><span class="line">(&#39;3&#39;,&#39;1&#39;,&#39;软件开发&#39;),</span><br><span class="line">(&#39;4&#39;,&#39;3&#39;,&#39;数据库&#39;),</span><br><span class="line">(&#39;5&#39;,&#39;1&#39;,&#39;美术设计&#39;),</span><br><span class="line">(&#39;6&#39;,&#39;3&#39;,&#39;web开发&#39;),</span><br><span class="line">(&#39;7&#39;,&#39;5&#39;,&#39;ps技术&#39;),</span><br><span class="line">(&#39;8&#39;,&#39;2&#39;,&#39;办公信息&#39;);</span><br></pre></td></tr></table></figure><p><strong>练习：</strong>核心思想:把一张表看成两张一模一样的表,然后将这两张表连接查询(自连接)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 编写SQL语句,将栏目的父子关系呈现出来 (父栏目名称,子栏目名称)</span><br><span class="line"># 核心思想:把一张表看成两张一模一样的表,然后将这两张表连接查询(自连接)</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">自连接</span><br><span class="line">    数据表与自身进行连接</span><br><span class="line"></span><br><span class="line">需求:从一个包含栏目ID , 栏目名称和父栏目ID的表中 </span><br><span class="line">     查询父栏目名称和其他子栏目名称</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">SELECT a.categoryName AS &#39;父栏目&#39;,b.categoryName AS &#39;子栏目&#39;</span><br><span class="line">FROM category AS a,category AS b</span><br><span class="line">WHERE a.&#96;categoryid&#96;&#x3D;b.&#96;pid&#96;</span><br></pre></td></tr></table></figure><h3 id="10-分页和排序"><a href="#10-分页和排序" class="headerlink" title="10.分页和排序"></a>10.分页和排序</h3><h4 id="排序-order-by"><a href="#排序-order-by" class="headerlink" title="排序  (order by)"></a>排序  (order by)</h4><ul><li>升序 ASC</li><li>降序 DESC</li></ul><p>语法：order by</p><ul><li>用于根据指定的列对结果集进行排序</li><li>默认按照ASC升序对记录进行排序</li></ul><p>练习：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 查询 数据库结构-1 的所有考试结果(学号 学生姓名 科目名称 成绩)</span><br><span class="line"># 按成绩降序排序</span><br><span class="line">SELECT s.studentno,studentname,subjectname,StudentResult</span><br><span class="line">FROM student s</span><br><span class="line">INNER JOIN result r</span><br><span class="line">ON r.studentno &#x3D; s.studentno</span><br><span class="line">INNER JOIN &#96;subject&#96; sub</span><br><span class="line">ON r.subjectno &#x3D; sub.subjectno</span><br><span class="line">WHERE subjectname&#x3D;&#39;数据库结构-1&#39;</span><br><span class="line">ORDER BY StudentResult DESC , studentno</span><br></pre></td></tr></table></figure><h4 id="分页（limit）"><a href="#分页（limit）" class="headerlink" title="分页（limit）"></a>分页（limit）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">推导: </span><br><span class="line">    第一页 : limit 0,5</span><br><span class="line">    第二页 : limit 5,5</span><br><span class="line">    第三页 : limit 10,5</span><br><span class="line">    ......</span><br><span class="line">    第N页 : limit (pageNo-1)*pageSzie,pageSzie</span><br><span class="line">    [pageNo:页码,pageSize:单页面显示条数]</span><br></pre></td></tr></table></figure><p>练习：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 每页显示5条数据</span><br><span class="line">SELECT s.studentno,studentname,subjectname,StudentResult</span><br><span class="line">FROM student s</span><br><span class="line">INNER JOIN result r</span><br><span class="line">ON r.studentno &#x3D; s.studentno</span><br><span class="line">INNER JOIN &#96;subject&#96; sub</span><br><span class="line">ON r.subjectno &#x3D; sub.subjectno</span><br><span class="line">WHERE subjectname&#x3D;&#39;数据库结构-1&#39;</span><br><span class="line">ORDER BY StudentResult DESC , studentno</span><br><span class="line">LIMIT 0,5</span><br><span class="line"></span><br><span class="line">#查询 JAVA第一学年 课程成绩前10名并且分数大于80的学生信息(学号,姓名,课程名,分数)</span><br><span class="line">SELECT s.studentno,studentname,subjectname,StudentResult</span><br><span class="line">FROM student s</span><br><span class="line">INNER JOIN result r</span><br><span class="line">ON r.studentno &#x3D; s.studentno</span><br><span class="line">INNER JOIN &#96;subject&#96; sub</span><br><span class="line">ON r.subjectno &#x3D; sub.subjectno</span><br><span class="line">WHERE subjectname&#x3D;&#39;JAVA第一学年&#39;</span><br><span class="line">ORDER BY StudentResult DESC</span><br><span class="line">LIMIT 0,10</span><br></pre></td></tr></table></figure><h3 id="11-子查询和嵌套查询"><a href="#11-子查询和嵌套查询" class="headerlink" title="11. 子查询和嵌套查询"></a>11. 子查询和嵌套查询</h3><p>练习：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 查询 数据库结构-1 的所有考试结果(学号,科目编号,成绩),并且成绩降序排列</span><br><span class="line">#方法一:使用连接查询</span><br><span class="line">SELECT studentno,r.subjectno,StudentResult</span><br><span class="line">FROM result r </span><br><span class="line">INNER JOIN &#96;subject&#96; sub</span><br><span class="line">ON r.&#96;SubjectNo&#96;&#x3D;sub.&#96;SubjectNo&#96;</span><br><span class="line">WHERE subjectname &#x3D; &#39;数据库结构-1&#39;</span><br><span class="line">ORDER BY studentresult DESC;</span><br><span class="line"></span><br><span class="line">#方法二:使用子查询(执行顺序:由里及外)</span><br><span class="line">SELECT studentno,subjectno,StudentResult</span><br><span class="line">FROM result</span><br><span class="line">WHERE subjectno&#x3D;(</span><br><span class="line">    SELECT subjectno FROM &#96;subject&#96; </span><br><span class="line">    WHERE subjectname &#x3D; &#39;数据库结构-1&#39;</span><br><span class="line">)</span><br><span class="line">ORDER BY studentresult DESC;</span><br><span class="line"></span><br><span class="line">#方法二:使用连接查询+子查询</span><br><span class="line">#分数不小于80分的学生的学号和姓名</span><br><span class="line">SELECT r.studentno,studentname FROM student s</span><br><span class="line">INNER JOIN result r ON s.&#96;StudentNo&#96;&#x3D;r.&#96;StudentNo&#96;</span><br><span class="line">WHERE StudentResult&gt;&#x3D;80</span><br><span class="line"></span><br><span class="line">#在上面SQL基础上,添加需求:课程为 高等数学-2</span><br><span class="line">SELECT r.studentno,studentname FROM student s</span><br><span class="line">INNER JOIN result r ON s.&#96;StudentNo&#96;&#x3D;r.&#96;StudentNo&#96;</span><br><span class="line">WHERE StudentResult&gt;&#x3D;80 AND subjectno&#x3D;(</span><br><span class="line">    SELECT subjectno FROM &#96;subject&#96;</span><br><span class="line">    WHERE subjectname &#x3D; &#39;高等数学-2&#39;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">#方法三:使用子查询</span><br><span class="line">#分步写简单sql语句,然后将其嵌套起来</span><br><span class="line">SELECT studentno,studentname FROM student WHERE studentno IN(</span><br><span class="line">    SELECT studentno FROM result WHERE StudentResult&gt;&#x3D;80 AND subjectno&#x3D;(</span><br><span class="line">        SELECT subjectno FROM &#96;subject&#96; WHERE subjectname &#x3D; &#39;高等数学-2&#39;</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="12-分组查询"><a href="#12-分组查询" class="headerlink" title="12. 分组查询"></a>12. 分组查询</h3><p>语法：group by</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 查询不同课程的平均分,最高分,最低分</span><br><span class="line"># 前提:根据不同的课程进行分组</span><br><span class="line"></span><br><span class="line">SELECT subjectname,AVG(studentresult) AS 平均分,MAX(StudentResult) AS 最高分,MIN(StudentResult) AS 最低分</span><br><span class="line">FROM result AS r</span><br><span class="line">INNER JOIN &#96;subject&#96; AS s</span><br><span class="line">ON r.subjectno &#x3D; s.subjectno</span><br><span class="line">GROUP BY r.subjectno</span><br><span class="line">HAVING 平均分&gt;80;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">where写在group by前面.</span><br><span class="line">要是放在分组后面的筛选</span><br><span class="line">要使用HAVING..</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mysql-查询语言&quot;&gt;&lt;a href=&quot;#Mysql-查询语言&quot; class=&quot;headerlink&quot; title=&quot;Mysql 查询语言&quot;&gt;&lt;/a&gt;Mysql 查询语言&lt;/h1&gt;&lt;h2 id=&quot;DQL语言&quot;&gt;&lt;a href=&quot;#DQL语言&quot; class=&quot;headerlink&quot; title=&quot;DQL语言&quot;&gt;&lt;/a&gt;DQL语言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;DQL( Data Query Language 数据查询语言 )&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查询数据库数据 , 如&lt;strong&gt;SELECT&lt;/strong&gt;语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单的单表查询或多表的复杂查询和嵌套查询&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用频率最高的语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;是数据库语言中最核心,最重要的语句&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Mysql" scheme="http://zhuuu.work/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-日志和分页的实现</title>
    <link href="http://zhuuu.work/2019/12/13/Mybatis/MyBatis-%E6%97%A5%E5%BF%97%E5%92%8C%E5%88%86%E9%A1%B5%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://zhuuu.work/2019/12/13/Mybatis/MyBatis-%E6%97%A5%E5%BF%97%E5%92%8C%E5%88%86%E9%A1%B5%E7%9A%84%E5%AE%9E%E7%8E%B0/</id>
    <published>2019-12-13T07:04:39.000Z</published>
    <updated>2020-02-13T08:01:19.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis-日志和分页的实现"><a href="#MyBatis-日志和分页的实现" class="headerlink" title="MyBatis 日志和分页的实现"></a>MyBatis 日志和分页的实现</h1><h2 id="日志的实现"><a href="#日志的实现" class="headerlink" title="日志的实现"></a>日志的实现</h2><h3 id="为什么需要日志？"><a href="#为什么需要日志？" class="headerlink" title="为什么需要日志？"></a>为什么需要日志？</h3><ul><li>以往的开发过程，我们会经常使用到debug模式来调节，跟踪我们的代码执行过程。</li><li>但是现在使用Mybatis是基于接口，配置文件的源代码执行过程。因此，我们必须选择日志工具来作为我们开发，调节程序的工具。</li></ul><p><strong>Mybatis内置的日志工厂提供日志功能，具体的日志实现有以下几种工具：</strong></p><ul><li>SLF4J</li><li>Apache Commons Logging</li><li>Log4j 2</li><li>Log4j</li><li>JDK logging</li></ul><a id="more"></a><h3 id="标准日志的实现"><a href="#标准日志的实现" class="headerlink" title="标准日志的实现"></a>标准日志的实现</h3><p>指定MyBatis应该是用那个日志记录实现。如果此设置不存在，则会自动发现日志记录实现。</p><p>实现方式：在resource文件夹下的mybatisconfig.xml添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"STDOUT_LOGGING"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>日志输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">E:\jdk1<span class="number">.8</span>\bin\java.exe -ea -Didea.test.cyclic.buffer.size=<span class="number">1048576</span> <span class="string">"-javaagent:E:\IntelliJ IDEA 2019.1\lib\idea_rt.jar=54966:E:\IntelliJ IDEA 2019.1\bin"</span> -Dfile.encoding=UTF-<span class="number">8</span> -classpath <span class="string">"E:\IntelliJ IDEA 2019.1\lib\idea_rt.jar;E:\IntelliJ IDEA 2019.1\plugins\junit\lib\junit-rt.jar;E:\IntelliJ IDEA 2019.1\plugins\junit\lib\junit5-rt.jar;E:\jdk1.8\jre\lib\charsets.jar;E:\jdk1.8\jre\lib\deploy.jar;E:\jdk1.8\jre\lib\ext\access-bridge-64.jar;E:\jdk1.8\jre\lib\ext\cldrdata.jar;E:\jdk1.8\jre\lib\ext\dnsns.jar;E:\jdk1.8\jre\lib\ext\jaccess.jar;E:\jdk1.8\jre\lib\ext\jfxrt.jar;E:\jdk1.8\jre\lib\ext\localedata.jar;E:\jdk1.8\jre\lib\ext\nashorn.jar;E:\jdk1.8\jre\lib\ext\sunec.jar;E:\jdk1.8\jre\lib\ext\sunjce_provider.jar;E:\jdk1.8\jre\lib\ext\sunmscapi.jar;E:\jdk1.8\jre\lib\ext\sunpkcs11.jar;E:\jdk1.8\jre\lib\ext\zipfs.jar;E:\jdk1.8\jre\lib\javaws.jar;E:\jdk1.8\jre\lib\jce.jar;E:\jdk1.8\jre\lib\jfr.jar;E:\jdk1.8\jre\lib\jfxswt.jar;E:\jdk1.8\jre\lib\jsse.jar;E:\jdk1.8\jre\lib\management-agent.jar;E:\jdk1.8\jre\lib\plugin.jar;E:\jdk1.8\jre\lib\resources.jar;E:\jdk1.8\jre\lib\rt.jar;E:\MyBatis-study\MyBatis-04\target\test-classes;E:\MyBatis-study\MyBatis-04\target\classes;E:\maven_local_repo\mysql\mysql-connector-java\5.1.46\mysql-connector-java-5.1.46.jar;E:\maven_local_repo\org\mybatis\mybatis\3.5.2\mybatis-3.5.2.jar;E:\maven_local_repo\junit\junit\4.13\junit-4.13.jar;E:\maven_local_repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar"</span> com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 daoTest,getUserByID</span><br><span class="line">Logging initialized using <span class="string">'class org.apache.ibatis.logging.stdout.StdOutImpl'</span> adapter.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection <span class="number">1375995437</span>.</span><br><span class="line">Setting autocommit to <span class="keyword">false</span> on JDBC Connection [com.mysql.jdbc.JDBC4Connection@<span class="number">5204062</span>d]</span><br><span class="line">==&gt;  Preparing: select * from mybatis.user where id = ? </span><br><span class="line">==&gt; Parameters: <span class="number">1</span>(Integer)</span><br><span class="line">&lt;==    Columns: id, name, pwd</span><br><span class="line">&lt;==        Row: <span class="number">1</span>, zhuuu, <span class="number">123456</span></span><br><span class="line">&lt;==      Total: <span class="number">1</span></span><br><span class="line">User&#123;id=<span class="number">1</span>, name=<span class="string">'zhuuu'</span>, password=<span class="string">'null'</span>&#125;</span><br><span class="line">Resetting autocommit to <span class="keyword">true</span> on JDBC Connection [com.mysql.jdbc.JDBC4Connection@<span class="number">5204062</span>d]</span><br><span class="line">Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@<span class="number">5204062</span>d]</span><br><span class="line">Returned connection <span class="number">1375995437</span> to pool.</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Log4j的实现"><a href="#Log4j的实现" class="headerlink" title="Log4j的实现"></a>Log4j的实现</h3><p><strong>简介：</strong></p><ul><li><p>Log4j是Apache的一个开源项目</p></li><li><p>通过使用Log4j，我们可以控制日志信息输送的目的地：控制台，文本，GUI组件….</p></li><li><p>我们也可以控制每一条日志的输出格式；</p></li><li><p>这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</p></li></ul><p><strong>使用步骤</strong></p><ol><li>导入log4j的包(pom.xml中)</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>编写配置文件（在resource文件夹下新建log4j.properties）</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line">log4j.rootLogger=DEBUG,console,file</span><br><span class="line"></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line">log4j.appender.console = org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.console.Target = System.out</span><br><span class="line">log4j.appender.console.Threshold=DEBUG</span><br><span class="line">log4j.appender.console.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.console.layout.ConversionPattern=[%c]-%m%n</span><br><span class="line"></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line">log4j.appender.file = org.apache.log4j.RollingFileAppender</span><br><span class="line">log4j.appender.file.File=./log/zhuuu.log</span><br><span class="line">log4j.appender.file.MaxFileSize=<span class="number">10</span>mb</span><br><span class="line">log4j.appender.file.Threshold=DEBUG</span><br><span class="line">log4j.appender.file.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.file.layout.ConversionPattern=[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line">log4j.logger.org.mybatis=DEBUG</span><br><span class="line">log4j.logger.java.sql=DEBUG</span><br><span class="line">log4j.logger.java.sql.Statement=DEBUG</span><br><span class="line">log4j.logger.java.sql.ResultSet=DEBUG</span><br><span class="line">log4j.logger.java.sql.PreparedStatement=DEBUG</span><br></pre></td></tr></table></figure><ol start="3"><li>Setting设置日志实现</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"LOG4J"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在程序中实现Log4j进行输出</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意导包：org.apache.log4j.Logger</span></span><br><span class="line"><span class="keyword">static</span> Logger logger = Logger.getLogger(MyTest<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    logger.info(<span class="string">"info：进入selectUser方法"</span>);</span><br><span class="line">    logger.debug(<span class="string">"debug：进入selectUser方法"</span>);</span><br><span class="line">    logger.error(<span class="string">"error: 进入selectUser方法"</span>);</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = session.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; users = mapper.selectUser();</span><br><span class="line">    <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">E:\jdk1<span class="number">.8</span>\bin\java.exe -ea -Didea.test.cyclic.buffer.size=<span class="number">1048576</span> <span class="string">"-javaagent:E:\IntelliJ IDEA 2019.1\lib\idea_rt.jar=55311:E:\IntelliJ IDEA 2019.1\bin"</span> -Dfile.encoding=UTF-<span class="number">8</span> -classpath <span class="string">"E:\IntelliJ IDEA 2019.1\lib\idea_rt.jar;E:\IntelliJ IDEA 2019.1\plugins\junit\lib\junit-rt.jar;E:\IntelliJ IDEA 2019.1\plugins\junit\lib\junit5-rt.jar;E:\jdk1.8\jre\lib\charsets.jar;E:\jdk1.8\jre\lib\deploy.jar;E:\jdk1.8\jre\lib\ext\access-bridge-64.jar;E:\jdk1.8\jre\lib\ext\cldrdata.jar;E:\jdk1.8\jre\lib\ext\dnsns.jar;E:\jdk1.8\jre\lib\ext\jaccess.jar;E:\jdk1.8\jre\lib\ext\jfxrt.jar;E:\jdk1.8\jre\lib\ext\localedata.jar;E:\jdk1.8\jre\lib\ext\nashorn.jar;E:\jdk1.8\jre\lib\ext\sunec.jar;E:\jdk1.8\jre\lib\ext\sunjce_provider.jar;E:\jdk1.8\jre\lib\ext\sunmscapi.jar;E:\jdk1.8\jre\lib\ext\sunpkcs11.jar;E:\jdk1.8\jre\lib\ext\zipfs.jar;E:\jdk1.8\jre\lib\javaws.jar;E:\jdk1.8\jre\lib\jce.jar;E:\jdk1.8\jre\lib\jfr.jar;E:\jdk1.8\jre\lib\jfxswt.jar;E:\jdk1.8\jre\lib\jsse.jar;E:\jdk1.8\jre\lib\management-agent.jar;E:\jdk1.8\jre\lib\plugin.jar;E:\jdk1.8\jre\lib\resources.jar;E:\jdk1.8\jre\lib\rt.jar;E:\MyBatis-study\MyBatis-04\target\test-classes;E:\MyBatis-study\MyBatis-04\target\classes;E:\maven_local_repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\maven_local_repo\mysql\mysql-connector-java\5.1.46\mysql-connector-java-5.1.46.jar;E:\maven_local_repo\org\mybatis\mybatis\3.5.2\mybatis-3.5.2.jar;E:\maven_local_repo\junit\junit\4.13\junit-4.13.jar;E:\maven_local_repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar"</span> com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 daoTest,getUserByID</span><br><span class="line">[daoTest]-info:进入了selectUser方法</span><br><span class="line">[daoTest]-debug:进入了selectUser方法</span><br><span class="line">[daoTest]-error:进入了selectUser方法</span><br><span class="line">[org.apache.ibatis.logging.LogFactory]-Logging initialized using <span class="string">'class org.apache.ibatis.logging.log4j.Log4jImpl'</span> adapter.</span><br><span class="line">[org.apache.ibatis.logging.LogFactory]-Logging initialized using <span class="string">'class org.apache.ibatis.logging.log4j.Log4jImpl'</span> adapter.</span><br><span class="line">[org.apache.ibatis.datasource.pooled.PooledDataSource]-PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">[org.apache.ibatis.datasource.pooled.PooledDataSource]-PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">[org.apache.ibatis.datasource.pooled.PooledDataSource]-PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">[org.apache.ibatis.datasource.pooled.PooledDataSource]-PooledDataSource forcefully closed/removed all connections.</span><br><span class="line">[org.apache.ibatis.transaction.jdbc.JdbcTransaction]-Opening JDBC Connection</span><br><span class="line">[org.apache.ibatis.datasource.pooled.PooledDataSource]-Created connection <span class="number">673186785</span>.</span><br><span class="line">[org.apache.ibatis.transaction.jdbc.JdbcTransaction]-Setting autocommit to <span class="keyword">false</span> on JDBC Connection [com.mysql.jdbc.JDBC4Connection@<span class="number">282003e1</span>]</span><br><span class="line">[com.zhuuu.dao.Mapper.getUserbyID]-==&gt;  Preparing: select * from mybatis.user where id = ? </span><br><span class="line">[com.zhuuu.dao.Mapper.getUserbyID]-==&gt; Parameters: <span class="number">1</span>(Integer)</span><br><span class="line">[com.zhuuu.dao.Mapper.getUserbyID]-&lt;==      Total: <span class="number">1</span></span><br><span class="line">User&#123;id=<span class="number">1</span>, name=<span class="string">'zhuuu'</span>, password=<span class="string">'null'</span>&#125;</span><br><span class="line">[org.apache.ibatis.transaction.jdbc.JdbcTransaction]-Resetting autocommit to <span class="keyword">true</span> on JDBC Connection [com.mysql.jdbc.JDBC4Connection@<span class="number">282003e1</span>]</span><br><span class="line">[org.apache.ibatis.transaction.jdbc.JdbcTransaction]-Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@<span class="number">282003e1</span>]</span><br><span class="line">[org.apache.ibatis.datasource.pooled.PooledDataSource]-Returned connection <span class="number">673186785</span> to pool.</span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="分页的实现"><a href="#分页的实现" class="headerlink" title="分页的实现"></a>分页的实现</h2><h3 id="为什么需要分页？"><a href="#为什么需要分页？" class="headerlink" title="为什么需要分页？"></a>为什么需要分页？</h3><ul><li>在学习mybatis等持久层框架的时候，会经常对数据进行增删改查操作，使用最多的是对数据库进行查询操作</li><li>如果查询大量数据的时候，我们往往使用分页进行查询，也就是每次处理小部分数据，这样对数据库压力就在可控范围内。</li></ul><h3 id="limit实现分页"><a href="#limit实现分页" class="headerlink" title="limit实现分页"></a>limit实现分页</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#语法</span><br><span class="line">select * from table Limit startIndex,pageSize</span><br><span class="line"></span><br><span class="line">#如:</span><br><span class="line">SELECT * FROM table LIMIT 5,10; &#x2F;&#x2F; 检索记录行 6-15 </span><br><span class="line"></span><br><span class="line">#如果只给定一个参数，它表示返回最大的记录行数目：    </span><br><span class="line">SELECT * FROM table LIMIT 5; &#x2F;&#x2F;检索前 5 个记录行 </span><br><span class="line"></span><br><span class="line">#换句话说，LIMIT n 等价于 LIMIT 0,n。</span><br></pre></td></tr></table></figure><p>使用步骤：</p><ol><li>修改Mapper文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUser"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">    select * from user limit #&#123;startIndex&#125;,#&#123;pageSize&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>Mapper接口修改入参为map</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择全部用户实现分页</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">selectUser</span><span class="params">(Map&lt;String,Integer&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>在测试类中传入参数</li></ol><ul><li>推断：起始位置 = （当前页面 - 1 ） * 页面大小</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.zhuuu.dao.Mapper;</span><br><span class="line"><span class="keyword">import</span> com.zhuuu.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.zhuuu.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">daoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtils.getSession();</span><br><span class="line">        Mapper mapper = session.getMapper(Mapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> curentPage = <span class="number">1</span>;<span class="comment">//第几页</span></span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">2</span>;<span class="comment">//每页显示几个</span></span><br><span class="line"></span><br><span class="line">        HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line">        map.put(<span class="string">"startIndex"</span>,(curentPage-<span class="number">1</span>)*pageSize);</span><br><span class="line">        map.put(<span class="string">"pageSize"</span>,pageSize);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; userList = mapper.getUserList(map);</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="RowBounds分页"><a href="#RowBounds分页" class="headerlink" title="RowBounds分页"></a>RowBounds分页</h3><ul><li>除了使用Limit在SQL层面实现分页，也可以使用RowBounds在Java代码层面实现分页，</li><li>当然此种方式作为了解即可。我们来看下如何实现的！</li></ul><p><strong>步骤：</strong></p><ol><li>mapper接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择全部用户RowBounds实现分页</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserByRowBounds</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>mapper.xml文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByRowBounds"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">  select * from user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>测试类    </p><p>在这里使用RowBounds类</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserByRowBounds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtils.getSession();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> currentPage = <span class="number">2</span>;  <span class="comment">//第几页</span></span><br><span class="line">    <span class="keyword">int</span> pageSize = <span class="number">2</span>;  <span class="comment">//每页显示几个</span></span><br><span class="line">    RowBounds rowBounds = <span class="keyword">new</span> RowBounds((currentPage-<span class="number">1</span>)*pageSize,pageSize);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过session.**方法进行传递rowBounds，[此种方式现在已经不推荐使用了]</span></span><br><span class="line">    List&lt;User&gt; users = session.selectList(<span class="string">"com.zhuuu.mapper.UserMapper.getUserByRowBounds"</span>, <span class="keyword">null</span>, rowBounds);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分页插件："><a href="#分页插件：" class="headerlink" title="分页插件："></a>分页插件：</h2><p>官方文档：<a href="https://pagehelper.github.io/" target="_blank" rel="noopener">https://pagehelper.github.io/</a></p><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200213160022.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MyBatis-日志和分页的实现&quot;&gt;&lt;a href=&quot;#MyBatis-日志和分页的实现&quot; class=&quot;headerlink&quot; title=&quot;MyBatis 日志和分页的实现&quot;&gt;&lt;/a&gt;MyBatis 日志和分页的实现&lt;/h1&gt;&lt;h2 id=&quot;日志的实现&quot;&gt;&lt;a href=&quot;#日志的实现&quot; class=&quot;headerlink&quot; title=&quot;日志的实现&quot;&gt;&lt;/a&gt;日志的实现&lt;/h2&gt;&lt;h3 id=&quot;为什么需要日志？&quot;&gt;&lt;a href=&quot;#为什么需要日志？&quot; class=&quot;headerlink&quot; title=&quot;为什么需要日志？&quot;&gt;&lt;/a&gt;为什么需要日志？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;以往的开发过程，我们会经常使用到debug模式来调节，跟踪我们的代码执行过程。&lt;/li&gt;
&lt;li&gt;但是现在使用Mybatis是基于接口，配置文件的源代码执行过程。因此，我们必须选择日志工具来作为我们开发，调节程序的工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Mybatis内置的日志工厂提供日志功能，具体的日志实现有以下几种工具：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SLF4J&lt;/li&gt;
&lt;li&gt;Apache Commons Logging&lt;/li&gt;
&lt;li&gt;Log4j 2&lt;/li&gt;
&lt;li&gt;Log4j&lt;/li&gt;
&lt;li&gt;JDK logging&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="MyBatis" scheme="http://zhuuu.work/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown语法</title>
    <link href="http://zhuuu.work/2019/12/12/personal_server/MarkDown%E8%AF%AD%E6%B3%95/"/>
    <id>http://zhuuu.work/2019/12/12/personal_server/MarkDown%E8%AF%AD%E6%B3%95/</id>
    <published>2019-12-12T07:02:24.000Z</published>
    <updated>2020-02-12T07:23:41.519Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MarkDown-语法（快速上手）"><a href="#MarkDown-语法（快速上手）" class="headerlink" title="MarkDown 语法（快速上手）"></a>MarkDown 语法（快速上手）</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p><strong>优点：</strong></p><p>1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。</p><p>2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可</p><a id="more"></a><h2 id="1-设置标题"><a href="#1-设置标题" class="headerlink" title="1. 设置标题"></a>1. 设置标题</h2><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="section"># 这是一级标题</span></span><br><span class="line"><span class="section">## 这是二级标题</span></span><br><span class="line"><span class="section">### 这是三级标题</span></span><br><span class="line"><span class="section">#### 这是四级标题</span></span><br><span class="line"><span class="section">##### 这是五级标题</span></span><br><span class="line"><span class="section">###### 这是六级标题</span></span><br></pre></td></tr></table></figure><p>效果：</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h2><ul><li><h5 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h5><p>要加粗的文字左右分别用两个*号包起来</p></li><li><h5 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h5><p>要倾斜的问子左右分别用一个*包起来</p></li><li><h5 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h5><p>要倾斜和加粗的文字左右分别用三个*号包起来</p></li><li><h5 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h5><p>要加删除线的文字左右分别用两个~~号包起来</p></li></ul><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这是加粗的文字**</span></span><br><span class="line"><span class="emphasis">*这是倾斜的文字*</span>`</span><br><span class="line"><span class="strong">***这是斜体加粗的文字**</span>*</span><br><span class="line">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3. 引用"></a>3. 引用</h2><p>在引用的文字前加&gt;即可。</p><p>引用也可以嵌套，如加两个&gt;&gt;</p><p>三个&gt;&gt;&gt;</p><p>n个…</p><p>貌似可以一直加下去，但没神马卵用</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><h2 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4. 分割线"></a>4. 分割线</h2><p>三个或三个以上的- 或者*都可以</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">----</span><br><span class="line">---</span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"><span class="emphasis">***</span>*</span><br></pre></td></tr></table></figure><hr><hr><hr><hr><p>可以看到，显示效果是一样的。</p><h2 id="5-图片"><a href="#5-图片" class="headerlink" title="5. 图片"></a>5. 图片</h2><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片地址 &#39;&#39;图片title&#39;&#39;)</span><br><span class="line"></span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure><p> 示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/</span><br><span class="line">u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg "区块链")</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>![blockchain](<a href="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/" target="_blank" rel="noopener">https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/</a><br>u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg “区块链”)</p><h2 id="6-超链接"><a href="#6-超链接" class="headerlink" title="6. 超链接"></a>6. 超链接</h2><p>语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">超链接名</span>](<span class="link">超链接地址 "超链接title"</span>)</span><br><span class="line">title可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[简书](http:&#x2F;&#x2F;jianshu.com)</span><br><span class="line">[百度](http:&#x2F;&#x2F;baidu.com)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><a href="http://jianshu.com" target="_blank" rel="noopener">简书</a><br><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><p><strong>注：Markdown本身语法不支持链接在新页面中打开，貌似简书做了处理，</strong></p><p><strong>如果想要在新页面中打开的话可以用html语言的a标签代替。</strong></p><p>语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"超链接地址"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span>超链接名<span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7. 列表"></a>7. 列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>语法：无序列表用 - + * 任何一种都可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li><p>列表内容</p></li><li><p>列表内容</p></li><li><p>列表内容</p></li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>语法：数字加点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.列表内容</span><br><span class="line">2.列表内容</span><br><span class="line">3.列表内容</span><br><span class="line"></span><br><span class="line">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>1.列表内容<br>2.列表内容<br>3.列表内容</p><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p><strong><em>上一级和下一级之间敲三个空格即可</em></strong></p><h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8.表格"></a>8.表格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 | 包起来。此处省略</span><br></pre></td></tr></table></figure><h2 id="9-代码"><a href="#9-代码" class="headerlink" title="9. 代码"></a>9. 代码</h2><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p><p>多行代码：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><h2 id="10-流程图"><a href="#10-流程图" class="headerlink" title="10.流程图"></a>10.流程图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```flow</span></span><br><span class="line"><span class="code">st=&gt;start: 开始</span></span><br><span class="line"><span class="code">op=&gt;operation: My Operation</span></span><br><span class="line"><span class="code">cond=&gt;condition: Yes or No?</span></span><br><span class="line"><span class="code">e=&gt;end</span></span><br><span class="line"><span class="code">st-&gt;op-&gt;cond</span></span><br><span class="line"><span class="code">cond(yes)-&gt;e</span></span><br><span class="line"><span class="code">cond(no)-&gt;op</span></span><br><span class="line"><span class="code">&amp;```</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">效果如下：</span><br><span class="line">​&#96;&#96;&#96;flow</span><br><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">op&#x3D;&gt;operation: My Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MarkDown-语法（快速上手）&quot;&gt;&lt;a href=&quot;#MarkDown-语法（快速上手）&quot; class=&quot;headerlink&quot; title=&quot;MarkDown 语法（快速上手）&quot;&gt;&lt;/a&gt;MarkDown 语法（快速上手）&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。&lt;/p&gt;
&lt;p&gt;2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MarkDown" scheme="http://zhuuu.work/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-033</title>
    <link href="http://zhuuu.work/2019/06/15/Leetcode/Leetcode-033/"/>
    <id>http://zhuuu.work/2019/06/15/Leetcode/Leetcode-033/</id>
    <published>2019-06-15T07:52:53.000Z</published>
    <updated>2020-02-17T14:04:45.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Leecode-033-Search-in-Rotated-Sorted-Array"><a href="#Leecode-033-Search-in-Rotated-Sorted-Array" class="headerlink" title="Leecode-033 [Search in Rotated Sorted Array]"></a>Leecode-033 [<strong>Search in Rotated Sorted Array</strong>]</h1><h2 id="思路：二分法查找"><a href="#思路：二分法查找" class="headerlink" title="思路：二分法查找"></a>思路：二分法查找</h2><p><strong>Solution：binary search</strong></p><ul><li><p>需要的参数</p><ul><li>start 初始化为0</li><li>end  初始化为length-1</li><li>mid  初始化为start + (end-start)/2</li></ul></li><li><p>分以下三种情况进行查找</p><ul><li>第一种情况：target = mid</li></ul><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217214041.png" alt=""></p><a id="more"></a><ul><li>第二种情况    num[start] &lt; nums[mid]</li></ul><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217214618.png" alt=""></p><ol><li>如果nums[start] &lt;= target 并且 nums[mid&gt;=target]  那么说明 target在start和mid之间，就把mid 复制给end</li><li>如果num[mid] 在 nums[start] 和 target之间  那么就把mid 赋值给 start</li></ol><ul><li>第三种情况 nums[mid] &lt; nums[end] &lt; nums[start]</li></ul><p><img src="https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217214901.png" alt=""></p></li></ul><ol><li>如果  target 在 mid 和 end之间 ，那么就把mid赋值给start</li><li>如果 target 小于mid, 那么就把mid赋值给end</li></ol><ul><li>最后判断 start 和 end 是不是本来就等于target</li></ul><!--more--><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p>*<em>Solution *</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums == <span class="keyword">null</span> || nums.length == <span class="number">0</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> end = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(start + <span class="number">1</span> &lt; end)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = start + (end - start)/<span class="number">2</span>; <span class="comment">//为了防止overflow的问题</span></span><br><span class="line">            <span class="keyword">if</span>(nums[mid] == target) <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">if</span>(nums[start] &lt; nums[mid])&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[start]&lt;=target &amp;&amp; target&lt;= nums[mid]) end = mid;</span><br><span class="line">                <span class="keyword">else</span> start = mid</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[end] &gt; nums[mid])&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[end] &gt;= target &amp;&amp; target&gt;= nums[mid]) start = mid;</span><br><span class="line">                <span class="keyword">else</span> end = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nums[start] == target) <span class="keyword">return</span> start;</span><br><span class="line">        <span class="keyword">if</span>(nums[end]   == target) <span class="keyword">return</span> end;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>*<em>Solution *</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(self, nums: List[int], target: int)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> nums <span class="keyword">or</span> len(nums) == <span class="number">0</span>: <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">        start = <span class="number">0</span></span><br><span class="line">        end = len(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> start + <span class="number">1</span> &lt; end:</span><br><span class="line">            mid = start + (end - start)//<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target:</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            <span class="keyword">elif</span> nums[start] &lt; nums[mid]:</span><br><span class="line">                <span class="keyword">if</span> nums[start] &lt;= target <span class="keyword">and</span> nums[mid]&gt;= target:</span><br><span class="line">                    end = mid</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    start = mid</span><br><span class="line">            <span class="keyword">elif</span> nums[mid] &lt; nums[end]:</span><br><span class="line">                <span class="keyword">if</span> nums[end] &gt;= target <span class="keyword">and</span> nums[mid] &lt;= target:</span><br><span class="line">                    start = mid</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    end = mid</span><br><span class="line">        <span class="keyword">if</span> nums[start] == target: <span class="keyword">return</span> start</span><br><span class="line">        <span class="keyword">if</span> nums[end]   == target: <span class="keyword">return</span>  end;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Leecode-033-Search-in-Rotated-Sorted-Array&quot;&gt;&lt;a href=&quot;#Leecode-033-Search-in-Rotated-Sorted-Array&quot; class=&quot;headerlink&quot; title=&quot;Leecode-033 [Search in Rotated Sorted Array]&quot;&gt;&lt;/a&gt;Leecode-033 [&lt;strong&gt;Search in Rotated Sorted Array&lt;/strong&gt;]&lt;/h1&gt;&lt;h2 id=&quot;思路：二分法查找&quot;&gt;&lt;a href=&quot;#思路：二分法查找&quot; class=&quot;headerlink&quot; title=&quot;思路：二分法查找&quot;&gt;&lt;/a&gt;思路：二分法查找&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Solution：binary search&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;需要的参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start 初始化为0&lt;/li&gt;
&lt;li&gt;end  初始化为length-1&lt;/li&gt;
&lt;li&gt;mid  初始化为start + (end-start)/2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分以下三种情况进行查找&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种情况：target = mid&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://zhuuu-bucket.oss-cn-beijing.aliyuncs.com/img/20200217214041.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Leetcode" scheme="http://zhuuu.work/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-032</title>
    <link href="http://zhuuu.work/2019/06/12/Leetcode/Leetcode-032/"/>
    <id>http://zhuuu.work/2019/06/12/Leetcode/Leetcode-032/</id>
    <published>2019-06-12T07:52:53.000Z</published>
    <updated>2020-02-15T03:59:43.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Leecode-032-Longest-Valid-Parentheses"><a href="#Leecode-032-Longest-Valid-Parentheses" class="headerlink" title="Leecode-032 [Longest Valid Parentheses]"></a>Leecode-032 [Longest Valid Parentheses]</h1><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p><strong>Solution：stack</strong></p><ul><li>leftmost:  指定最左侧的边界–&gt;初始值为-1</li><li>stack：初始为空</li><li>idx:     每个括号的索引</li><li>原则：遇到正括号就push,反括号就pop</li><li>max:   计算最大长度（反括号的index减去最上层的正括号的index）<ul><li>[如果遇到反括号，pop之后stack为空，那么长度 = 当前idx - leftmost]</li><li>[如果遇到反括号，pop之前stack为空，那么leftmost = 当前 idx, 长度就是当前idx-leftmost]</li></ul></li></ul><a id="more"></a><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p><strong>Solution：stack</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestValidParentheses</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s == <span class="keyword">null</span> || s.length() &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> leftmost = -<span class="number">1</span>;</span><br><span class="line">        Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.charAt(i) == <span class="string">'('</span>)&#123; <span class="comment">//遇到正括号就push</span></span><br><span class="line">                stack.push(i);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123; <span class="comment">//if  反括号就pop</span></span><br><span class="line">                <span class="keyword">if</span>(stack.isEmpty())&#123; <span class="comment">//当前stack为空，更新leftmost</span></span><br><span class="line">                    leftmost = i;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">int</span> j = stack.pop(); <span class="comment">//pop出正括号的index</span></span><br><span class="line">                    <span class="keyword">if</span>(stack.isEmpty()) max = Math.max(max,i-leftmost); <span class="comment">//pop出来之后为空</span></span><br><span class="line">                    <span class="keyword">else</span> max = Math.max(max,i-stack.peek()); <span class="comment">//pop出来之后不为空</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p><strong>Solution :同思路python版本</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestValidParentheses</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> s: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        n = len(s)</span><br><span class="line">        max_Parentheses = <span class="number">0</span></span><br><span class="line">        leftmost = <span class="number">-1</span></span><br><span class="line">        stack = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">            <span class="keyword">if</span> s[i] == <span class="string">'('</span>:</span><br><span class="line">                stack.append(i)</span><br><span class="line">            <span class="keyword">else</span>: <span class="comment">#if )</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> stack:</span><br><span class="line">                    leftmost = i</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    j = stack.pop()</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> stack: max_Parentheses = max(max_Parentheses,i-leftmost)</span><br><span class="line">                    <span class="keyword">else</span>: max_Parentheses = max(max_Parentheses,i-stack[<span class="number">-1</span>])</span><br><span class="line">        <span class="keyword">return</span> max_Parentheses</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Leecode-032-Longest-Valid-Parentheses&quot;&gt;&lt;a href=&quot;#Leecode-032-Longest-Valid-Parentheses&quot; class=&quot;headerlink&quot; title=&quot;Leecode-032 [Longest Valid Parentheses]&quot;&gt;&lt;/a&gt;Leecode-032 [Longest Valid Parentheses]&lt;/h1&gt;&lt;h2 id=&quot;思路：&quot;&gt;&lt;a href=&quot;#思路：&quot; class=&quot;headerlink&quot; title=&quot;思路：&quot;&gt;&lt;/a&gt;思路：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Solution：stack&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;leftmost:  指定最左侧的边界–&amp;gt;初始值为-1&lt;/li&gt;
&lt;li&gt;stack：初始为空&lt;/li&gt;
&lt;li&gt;idx:     每个括号的索引&lt;/li&gt;
&lt;li&gt;原则：遇到正括号就push,反括号就pop&lt;/li&gt;
&lt;li&gt;max:   计算最大长度（反括号的index减去最上层的正括号的index）&lt;ul&gt;
&lt;li&gt;[如果遇到反括号，pop之后stack为空，那么长度 = 当前idx - leftmost]&lt;/li&gt;
&lt;li&gt;[如果遇到反括号，pop之前stack为空，那么leftmost = 当前 idx, 长度就是当前idx-leftmost]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Leetcode" scheme="http://zhuuu.work/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-001</title>
    <link href="http://zhuuu.work/2019/05/12/Leetcode/Leetcode-001/"/>
    <id>http://zhuuu.work/2019/05/12/Leetcode/Leetcode-001/</id>
    <published>2019-05-12T07:52:53.000Z</published>
    <updated>2020-02-12T08:13:28.396Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Leecode-001-Two-Sum"><a href="#Leecode-001-Two-Sum" class="headerlink" title="Leecode-001 [Two Sum]"></a>Leecode-001 [Two Sum]</h1><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p><strong>Solution 1：暴力法</strong></p><ul><li>使用两层循环，外层循环计算当前元素与 target之间的差值，内层循环寻找该差值，若找到该差值，则返回两个元素的下标。</li><li>时间复杂度O(n^2)</li></ul><p><strong>Solution 2:  利用HashMap减少查询时间</strong></p><ul><li>使用一层循环，每遍历到一个元素就计算该元素与 target 之间的差值</li><li>然后到 HashMapHashMap 中寻找该差值</li><li>如果找到，则返回两个元素在数组 nums的下标</li><li>如果没有找到，则将当前元素存入 HashMap 中 (Key: nums[i], Value: i)</li></ul><img src="https://pic.leetcode-cn.com/d54dcd98bf9b8f5f5575893a9c253dda04cb177436322a9b41ce89290deb651d-Messages%20Image(3072076888).png" alt="avatar"/><a id="more"></a><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p><a href="https://github.com/Zhuuuuuuuu/Leetcodes/blob/master/java/001__Two%20sum" target="_blank" rel="noopener">Java版本地址</a></p><p><strong>Solution 1：暴力法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> dif = target - nums[i];</span><br><span class="line">            <span class="comment">// j = i + 1 的目的是减少重复计算和避免两个元素下标相同</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[j] == dif)&#123;</span><br><span class="line">                    res[<span class="number">0</span>] = i;</span><br><span class="line">                    res[<span class="number">1</span>] = j;</span><br><span class="line">                    <span class="keyword">return</span> res;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Solution 2:  利用HashMap减少查询时间</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span> [] res  = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];  <span class="comment">//创建一个res数组长度为2</span></span><br><span class="line">        <span class="keyword">if</span>(nums == <span class="keyword">null</span> || nums.length &lt;= <span class="number">1</span>) <span class="keyword">return</span> res;</span><br><span class="line">        HashMap&lt;Integer,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;Integer,Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = nums[i]; <span class="comment">//先拿到当前这个数</span></span><br><span class="line">            <span class="keyword">int</span> val = target - num; <span class="comment">//另外一个数值是target-当前这个数</span></span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(val))&#123; <span class="comment">//如果找到这个数</span></span><br><span class="line">                res[<span class="number">0</span>] = i; <span class="comment">//返回第一个索引</span></span><br><span class="line">                res[<span class="number">1</span>] = map.get(val); <span class="comment">//返回第二个索引</span></span><br><span class="line">                <span class="keyword">return</span> res; <span class="comment">//返回结果</span></span><br><span class="line">            &#125;<span class="keyword">else</span> map.put(num,i); <span class="comment">//没有找到就把当前数字放进hashmap中</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p><a href="https://github.com/Zhuuuuuuuu/Leetcodes/tree/master/python3" target="_blank" rel="noopener">Python版本地址</a></p><p><strong>Solution :利用字典</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        q=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            a = target -nums[x]</span><br><span class="line">            <span class="keyword">if</span> nums[x] <span class="keyword">in</span> q:</span><br><span class="line">                <span class="keyword">return</span> q[nums[x]],x</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                q[a] = x</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Leecode-001-Two-Sum&quot;&gt;&lt;a href=&quot;#Leecode-001-Two-Sum&quot; class=&quot;headerlink&quot; title=&quot;Leecode-001 [Two Sum]&quot;&gt;&lt;/a&gt;Leecode-001 [Two Sum]&lt;/h1&gt;&lt;h2 id=&quot;思路：&quot;&gt;&lt;a href=&quot;#思路：&quot; class=&quot;headerlink&quot; title=&quot;思路：&quot;&gt;&lt;/a&gt;思路：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Solution 1：暴力法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用两层循环，外层循环计算当前元素与 target之间的差值，内层循环寻找该差值，若找到该差值，则返回两个元素的下标。&lt;/li&gt;
&lt;li&gt;时间复杂度O(n^2)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Solution 2:  利用HashMap减少查询时间&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用一层循环，每遍历到一个元素就计算该元素与 target 之间的差值&lt;/li&gt;
&lt;li&gt;然后到 HashMapHashMap 中寻找该差值&lt;/li&gt;
&lt;li&gt;如果找到，则返回两个元素在数组 nums的下标&lt;/li&gt;
&lt;li&gt;如果没有找到，则将当前元素存入 HashMap 中 (Key: nums[i], Value: i)&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;https://pic.leetcode-cn.com/d54dcd98bf9b8f5f5575893a9c253dda04cb177436322a9b41ce89290deb651d-Messages%20Image(3072076888).png&quot; alt=&quot;avatar&quot;/&gt;
    
    </summary>
    
    
    
      <category term="Leetcode" scheme="http://zhuuu.work/tags/Leetcode/"/>
    
  </entry>
  
</feed>
